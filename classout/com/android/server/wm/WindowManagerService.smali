.class public Lcom/android/server/wm/WindowManagerService;
.super Landroid/view/IWindowManager$Stub;
.source "WindowManagerService.java"

# interfaces
.implements Landroid/hardware/display/DisplayManager$DisplayListener;
.implements Landroid/view/WindowManagerPolicy$WindowManagerFuncs;
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/server/display/DisplayManagerService$WindowManagerFuncs;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/wm/WindowManagerService$TaskOrderInfo;,
        Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;,
        Lcom/android/server/wm/WindowManagerService$H;,
        Lcom/android/server/wm/WindowManagerService$LEVEL;,
        Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;,
        Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;,
        Lcom/android/server/wm/WindowManagerService$WindowChangeListener;,
        Lcom/android/server/wm/WindowManagerService$DragInputEventReceiver;,
        Lcom/android/server/wm/WindowManagerService$LayoutFields;
    }
.end annotation


# static fields
.field static final ADJUST_WALLPAPER_LAYERS_CHANGED:I = 0x2

.field static final ADJUST_WALLPAPER_VISIBILITY_CHANGED:I = 0x4

.field static final CUSTOM_SCREEN_ROTATION:Z = true

.field static final DEBUG:Z = false

.field static final DEBUG_ADD_REMOVE:Z = false

.field static final DEBUG_ANIM:Z = false

.field static final DEBUG_APP_ORIENTATION:Z = false

.field static final DEBUG_APP_TRANSITIONS:Z = false

.field static final DEBUG_BOOT:Z = false

.field static final DEBUG_CONFIGURATION:Z = false

.field static final DEBUG_DRAG:Z = false

.field static final DEBUG_FOCUS:Z = false

.field static final DEBUG_FOCUS_LIGHT:Z = false

.field static final DEBUG_INPUT:Z = false

.field static final DEBUG_INPUT_METHOD:Z = false

.field static final DEBUG_LAYERS:Z = false

.field static final DEBUG_LAYOUT:Z = false

.field static final DEBUG_LAYOUT_REPEATS:Z = true

.field static final DEBUG_MINI_APP:Z = false

.field private static final DEBUG_MULTIWINDOW:Z = false

.field static final DEBUG_ORIENTATION:Z = false

.field static final DEBUG_REORDER:Z = false

.field static final DEBUG_RESIZE:Z = false

.field static final DEBUG_SCREENSHOT:Z = false

.field static final DEBUG_SCREEN_ON:Z = false

.field static final DEBUG_STACK:Z = false

.field static final DEBUG_STARTING_WINDOW:Z = false

.field static final DEBUG_SURFACE_TRACE:Z = false

.field static final DEBUG_TASK_MOVEMENT:Z = false

.field static final DEBUG_TOKEN_MOVEMENT:Z = false

.field static final DEBUG_VISIBILITY:Z = false

.field static final DEBUG_WALLPAPER:Z = false

.field static final DEBUG_WALLPAPER_LIGHT:Z = false

.field static final DEBUG_WINDOW_MOVEMENT:Z = false

.field static final DEBUG_WINDOW_TRACE:Z = false

.field static final DEFAULT_FADE_IN_OUT_DURATION:I = 0x190

.field static final DEFAULT_INPUT_DISPATCHING_TIMEOUT_NANOS:J = 0x12a05f200L

.field private static final DENSITY_OVERRIDE:Ljava/lang/String; = "ro.config.density_override"

.field static final FREEZE_LAYER:I = 0x1e8481

.field static final HIDE_STACK_CRAWLS:Z = true

.field private static final INPUT_DEVICES_READY_FOR_SAFE_MODE_DETECTION_TIMEOUT_MILLIS:I = 0x3e8

.field static final LAYER_OFFSET_BLUR:I = 0x2

.field static final LAYER_OFFSET_DIM:I = 0x1

.field static final LAYER_OFFSET_FOCUSED_STACK:I = 0x1

.field static final LAYER_OFFSET_THUMBNAIL:I = 0x4

.field static final LAYOUT_REPEAT_THRESHOLD:I = 0x4

.field static final MASK_LAYER:I = 0x1e8480

.field static final MAX_ANIMATION_DURATION:I = 0x2710

.field private static final MAX_SCREENSHOT_RETRIES:I = 0x3

.field static final PROFILE_ORIENTATION:Z = false

.field static final SHOW_LIGHT_TRANSACTIONS:Z = false

.field static final SHOW_SURFACE_ALLOC:Z = false

.field static final SHOW_TRANSACTIONS:Z = false

.field private static final SIZE_OVERRIDE:Ljava/lang/String; = "ro.config.size_override"

.field public static final STACK_WEIGHT_MAX:F = 1.0f

.field public static final STACK_WEIGHT_MIN:F = 0.1f

.field static final STARTING_WINDOW_TIMEOUT_DURATION:I = 0x2710

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field private static final SYSTEM_SECURE:Ljava/lang/String; = "ro.secure"

.field static final TAG:Ljava/lang/String; = "WindowManager"

.field static final TYPE_LAYER_MULTIPLIER:I = 0x2710

.field static final TYPE_LAYER_OFFSET:I = 0x3e8

.field static final UPDATE_FOCUS_NORMAL:I = 0x0

.field static final UPDATE_FOCUS_PLACING_SURFACES:I = 0x2

.field static final UPDATE_FOCUS_WILL_ASSIGN_LAYERS:I = 0x1

.field static final UPDATE_FOCUS_WILL_PLACE_SURFACES:I = 0x3

.field static final WALLPAPER_TIMEOUT:J = 0x96L

.field static final WALLPAPER_TIMEOUT_RECOVERY:J = 0x2710L

.field static final WINDOW_FREEZE_TIMEOUT_DURATION:I = 0x7d0

.field static final WINDOW_LAYER_MULTIPLIER:I = 0x5

.field static cfmsService:Landroid/os/ICustomFrequencyManager;

.field static final localLOGV:Z


# instance fields
.field final mActivityManager:Landroid/app/IActivityManager;

.field final mAllowBootMessages:Z

.field mAltOrientation:Z

.field mAnimateWallpaperWithTarget:Z

.field mAnimationScheduled:Z

.field final mAnimator:Lcom/android/server/wm/WindowAnimator;

.field mAnimatorDurationScale:F

.field final mAppOps:Landroid/app/AppOpsManager;

.field final mAppTransition:Lcom/android/server/wm/AppTransition;

.field mAppsFreezingScreen:I

.field final mBatteryStats:Lcom/android/internal/app/IBatteryStats;

.field final mBroadcastReceiver:Landroid/content/BroadcastReceiver;

.field final mChoreographer:Landroid/view/Choreographer;

.field mClientFreezingScreen:Z

.field final mClosingApps:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

.field mCompatibleScreenScale:F

.field final mContext:Landroid/content/Context;

.field mCurConfiguration:Landroid/content/res/Configuration;

.field mCurrentFocus:Lcom/android/server/wm/WindowState;

.field mCurrentUserId:I

.field mDeferredRotationPauseCount:I

.field final mDestroySurface:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayContents:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/DisplayContent;",
            ">;"
        }
    .end annotation
.end field

.field mDisplayEnabled:Z

.field mDisplayFreezeTime:J

.field mDisplayFrozen:Z

.field mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

.field final mDisplayManager:Landroid/hardware/display/DisplayManager;

.field final mDisplayManagerService:Lcom/android/server/display/DisplayManagerService;

.field final mDisplayMetrics:Landroid/util/DisplayMetrics;

.field mDisplayReady:Z

.field final mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

.field mDragState:Lcom/android/server/wm/DragState;

.field mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

.field mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

.field mEnterAnimId:I

.field private mEventDispatchingEnabled:Z

.field mExitAnimId:I

.field final mFakeWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/FakeWindowImpl;",
            ">;"
        }
    .end annotation
.end field

.field final mFinishedStarting:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mFocusMayChange:Z

.field mFocusedApp:Lcom/android/server/wm/AppWindowToken;

.field mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

.field mFocusedStackLayer:I

.field mForceDisplayEnabled:Z

.field mForceRemoves:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mForcedAppOrientation:I

.field mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

.field final mFxSession:Landroid/view/SurfaceSession;

.field final mH:Lcom/android/server/wm/WindowManagerService$H;

.field mHardKeyboardAvailable:Z

.field mHardKeyboardEnabled:Z

.field mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

.field final mHaveInputMethods:Z

.field private final mHeadless:Z

.field mHoldingScreenOn:Lcom/android/server/wm/Session;

.field mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

.field private mInLayout:Z

.field mInTouchMode:Z

.field final mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

.field final mInputManager:Lcom/android/server/input/InputManagerService;

.field mInputMethodAnimLayerAdjustment:I

.field final mInputMethodDialogs:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mInputMethodManager:Lcom/android/internal/view/IInputMethodManager;

.field mInputMethodTarget:Lcom/android/server/wm/WindowState;

.field mInputMethodTargetWaitingAnim:Z

.field mInputMethodWindow:Lcom/android/server/wm/WindowState;

.field final mInputMonitor:Lcom/android/server/wm/InputMonitor;

.field final mIsMultiWindowEnabled:Z

.field mIsTouchDevice:Z

.field private final mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

.field mLastANRState:Ljava/lang/String;

.field mLastDisplayFreezeDuration:I

.field mLastFinishedFreezeSource:Ljava/lang/Object;

.field mLastFocus:Lcom/android/server/wm/WindowState;

.field mLastStatusBarVisibility:I

.field mLastWallpaperTimeoutTime:J

.field mLastWallpaperX:F

.field mLastWallpaperXStep:F

.field mLastWallpaperY:F

.field mLastWallpaperYStep:F

.field mLastWindowForcedOrientation:I

.field private mLayoutRepeatCount:I

.field mLayoutSeq:I

.field final mLimitedAlphaCompositing:Z

.field mLosingFocus:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

.field mMiniModeInputEventReceiver:Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;

.field mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

.field mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

.field mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

.field final mOnlyCore:Z

.field final mOpeningApps:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/AppWindowToken;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingRemove:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

.field private final mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

.field final mPolicy:Landroid/view/WindowManagerPolicy;

.field mPowerManager:Lcom/android/server/power/PowerManagerService;

.field final mRealDisplayMetrics:Landroid/util/DisplayMetrics;

.field mRebuildTmp:[Lcom/android/server/wm/WindowState;

.field final mRelayoutWhileAnimating:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRequestLayout:Z

.field private mRequestedDismissCoverUIOnNextActivity:Z

.field private mRequestedDismissKeyguardOnNextActivity:Z

.field mResizingMultiWindow:Z

.field final mResizingMultiWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field final mResizingWindows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field mRotation:I

.field mRotationWatchers:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/view/IRotationWatcher;",
            ">;"
        }
    .end annotation
.end field

.field mSafeMode:Z

.field private final mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

.field final mScreenRect:Landroid/graphics/Rect;

.field final mSessions:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Lcom/android/server/wm/Session;",
            ">;"
        }
    .end annotation
.end field

.field mShouldIgnoreDimEffect:Z

.field mShowingBootMessages:Z

.field mSkipAppTransitionAnimation:Z

.field mSkipWidgetFocus:Z

.field mStackIdToStack:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/TaskStack;",
            ">;"
        }
    .end annotation
.end field

.field mStartingIconInTransition:Z

.field mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

.field mSystemBooted:Z

.field mSystemDecorLayer:I

.field mTaskIdToTask:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/wm/Task;",
            ">;"
        }
    .end annotation
.end field

.field final mTempConfiguration:Landroid/content/res/Configuration;

.field final mTmpContentRect:Landroid/graphics/Rect;

.field final mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

.field final mTmpFloats:[F

.field final mTokenMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mTopWidgetWindow:Lcom/android/server/wm/WindowState;

.field mTouchIntercepterInputChannel:Landroid/view/InputChannel;

.field private mTransactionSequence:I

.field mTransitionAnimationScale:F

.field mTraversalScheduled:Z

.field mTurnOnScreen:Z

.field mUnFocusedBounds:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/graphics/Rect;",
            ">;"
        }
    .end annotation
.end field

.field mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

.field private mViewServer:Lcom/android/server/wm/ViewServer;

.field mWaitingForConfig:Z

.field mWaitingForDrawn:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Landroid/util/Pair",
            "<",
            "Lcom/android/server/wm/WindowState;",
            "Landroid/os/IRemoteCallback;",
            ">;>;"
        }
    .end annotation
.end field

.field mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

.field mWallpaperAnimLayerAdjustment:I

.field mWallpaperTarget:Lcom/android/server/wm/WindowState;

.field final mWallpaperTokens:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowToken;",
            ">;"
        }
    .end annotation
.end field

.field mWatermark:Lcom/android/server/wm/Watermark;

.field mWidgetWindowCount:I

.field mWindowAnimationScale:F

.field private final mWindowChangeListeners:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$WindowChangeListener;",
            ">;"
        }
    .end annotation
.end field

.field mWindowCountBetweenIMTargetAndTopWidget:I

.field final mWindowMap:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/wm/WindowState;",
            ">;"
        }
    .end annotation
.end field

.field private mWindowsChanged:Z

.field mWindowsFreezingScreen:Z

.field private mbEnableHoveringUI:Z


# direct methods
.method static constructor <clinit>()V
    .registers 1

    .prologue
    .line 13635
    const/4 v0, 0x0

    sput-object v0, Lcom/android/server/wm/WindowManagerService;->cfmsService:Landroid/os/ICustomFrequencyManager;

    return-void
.end method

.method private constructor <init>(Landroid/content/Context;Lcom/android/server/power/PowerManagerService;Lcom/android/server/display/DisplayManagerService;Lcom/android/server/input/InputManagerService;ZZZ)V
    .registers 21
    .param p1, "context"    # Landroid/content/Context;
    .param p2, "pm"    # Lcom/android/server/power/PowerManagerService;
    .param p3, "displayManager"    # Lcom/android/server/display/DisplayManagerService;
    .param p4, "inputManager"    # Lcom/android/server/input/InputManagerService;
    .param p5, "haveInputMethods"    # Z
    .param p6, "showBootMsgs"    # Z
    .param p7, "onlyCore"    # Z

    .prologue
    .line 816
    invoke-direct {p0}, Landroid/view/IWindowManager$Stub;-><init>()V

    .line 337
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mShouldIgnoreDimEffect:Z

    .line 340
    new-instance v9, Lcom/android/server/wm/WindowManagerService$1;

    invoke-direct {v9, p0}, Lcom/android/server/wm/WindowManagerService$1;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    .line 362
    invoke-static {}, Lcom/android/internal/policy/PolicyManager;->makeNewWindowManager()Landroid/view/WindowManagerPolicy;

    move-result-object v9

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    .line 373
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mbEnableHoveringUI:Z

    .line 377
    const/4 v9, 0x1

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mIsMultiWindowEnabled:Z

    .line 383
    new-instance v9, Ljava/util/HashSet;

    invoke-direct {v9}, Ljava/util/HashSet;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Ljava/util/HashSet;

    .line 390
    new-instance v9, Ljava/util/HashMap;

    invoke-direct {v9}, Ljava/util/HashMap;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    .line 395
    new-instance v9, Ljava/util/HashMap;

    invoke-direct {v9}, Ljava/util/HashMap;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    .line 401
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    .line 407
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFakeWindows:Ljava/util/ArrayList;

    .line 414
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    .line 422
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindow:Z

    .line 423
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    .line 424
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindows:Ljava/util/ArrayList;

    .line 430
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    .line 435
    const/16 v9, 0x14

    new-array v9, v9, [Lcom/android/server/wm/WindowState;

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    .line 440
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    .line 446
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    .line 457
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    .line 464
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mRelayoutWhileAnimating:Ljava/util/ArrayList;

    .line 470
    const/16 v9, 0x14

    new-array v9, v9, [Lcom/android/server/wm/WindowState;

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    .line 483
    const/16 v9, 0x9

    new-array v9, v9, [F

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    .line 484
    new-instance v9, Landroid/graphics/Rect;

    invoke-direct {v9}, Landroid/graphics/Rect;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpContentRect:Landroid/graphics/Rect;

    .line 488
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .line 489
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .line 490
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .line 491
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 496
    new-instance v9, Landroid/util/SparseArray;

    const/4 v10, 0x2

    invoke-direct {v9, v10}, Landroid/util/SparseArray;-><init>(I)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    .line 498
    const/4 v9, 0x0

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    .line 499
    const/4 v9, -0x1

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    .line 500
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    .line 501
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    .line 505
    const/4 v9, 0x0

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    .line 506
    new-instance v9, Landroid/graphics/Rect;

    invoke-direct {v9}, Landroid/graphics/Rect;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    .line 508
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    .line 509
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 510
    const-wide/16 v9, 0x0

    iput-wide v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 511
    const/4 v9, 0x0

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 512
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 513
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 514
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    .line 515
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 516
    const/4 v9, 0x0

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 517
    const/4 v9, -0x1

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    .line 519
    const/4 v9, 0x0

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    .line 521
    const/4 v9, 0x0

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    .line 529
    const/4 v9, 0x1

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSkipWidgetFocus:Z

    .line 530
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    .line 531
    const/4 v9, 0x0

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mWidgetWindowCount:I

    .line 532
    const/4 v9, 0x0

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowCountBetweenIMTargetAndTopWidget:I

    .line 537
    new-instance v9, Landroid/content/res/Configuration;

    invoke-direct {v9}, Landroid/content/res/Configuration;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    .line 545
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mStartingIconInTransition:Z

    .line 546
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    .line 548
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    .line 549
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    .line 553
    new-instance v9, Landroid/util/DisplayMetrics;

    invoke-direct {v9}, Landroid/util/DisplayMetrics;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 554
    new-instance v9, Landroid/util/DisplayMetrics;

    invoke-direct {v9}, Landroid/util/DisplayMetrics;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 555
    new-instance v9, Landroid/util/DisplayMetrics;

    invoke-direct {v9}, Landroid/util/DisplayMetrics;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 556
    new-instance v9, Landroid/util/DisplayMetrics;

    invoke-direct {v9}, Landroid/util/DisplayMetrics;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 558
    new-instance v9, Lcom/android/server/wm/WindowManagerService$H;

    invoke-direct {v9, p0}, Lcom/android/server/wm/WindowManagerService$H;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    .line 560
    invoke-static {}, Landroid/view/Choreographer;->getInstance()Landroid/view/Choreographer;

    move-result-object v9

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    .line 562
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 563
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    .line 567
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 573
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 574
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    .line 577
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

    .line 578
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    .line 579
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    .line 580
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mRequestLayout:Z

    .line 581
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    .line 588
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    .line 592
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 595
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 598
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 600
    const/high16 v9, -0x40800000

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    .line 601
    const/high16 v9, -0x40800000

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    .line 602
    const/high16 v9, -0x40800000

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    .line 603
    const/high16 v9, -0x40800000

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    .line 615
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 619
    const/high16 v9, 0x3f800000

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScale:F

    .line 620
    const/high16 v9, 0x3f800000

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    .line 621
    const/high16 v9, 0x3f800000

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScale:F

    .line 633
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    .line 639
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    .line 640
    const/4 v9, 0x0

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

    .line 676
    new-instance v9, Lcom/android/server/wm/WindowManagerService$LayoutFields;

    invoke-direct {v9, p0}, Lcom/android/server/wm/WindowManagerService$LayoutFields;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    .line 689
    new-instance v9, Landroid/util/SparseArray;

    invoke-direct {v9}, Landroid/util/SparseArray;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    .line 690
    new-instance v9, Landroid/util/SparseArray;

    invoke-direct {v9}, Landroid/util/SparseArray;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    .line 762
    const/4 v9, 0x1

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    .line 765
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    .line 767
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 774
    new-instance v9, Landroid/content/res/Configuration;

    invoke-direct {v9}, Landroid/content/res/Configuration;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    .line 4450
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissKeyguardOnNextActivity:Z

    .line 8499
    new-instance v9, Lcom/android/server/wm/InputMonitor;

    invoke-direct {v9, p0}, Lcom/android/server/wm/InputMonitor;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    .line 9852
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    .line 13263
    const/4 v9, 0x0

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissCoverUIOnNextActivity:Z

    .line 817
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    .line 818
    move/from16 v0, p5

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHaveInputMethods:Z

    .line 819
    move/from16 v0, p6

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    .line 820
    move/from16 v0, p7

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    .line 821
    invoke-virtual {p1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v9

    const v10, 0x111000e

    invoke-virtual {v9, v10}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v9

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mLimitedAlphaCompositing:Z

    .line 823
    move-object/from16 v0, p4

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    .line 824
    move-object/from16 v0, p3

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerService:Lcom/android/server/display/DisplayManagerService;

    .line 825
    invoke-virtual/range {p3 .. p3}, Lcom/android/server/display/DisplayManagerService;->isHeadless()Z

    move-result v9

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mHeadless:Z

    .line 826
    new-instance v9, Lcom/android/server/wm/DisplaySettings;

    invoke-direct {v9, p1}, Lcom/android/server/wm/DisplaySettings;-><init>(Landroid/content/Context;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    .line 827
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    invoke-virtual {v9}, Lcom/android/server/wm/DisplaySettings;->readSettingsLocked()V

    .line 829
    new-instance v9, Lcom/android/server/wm/PointerEventDispatcher;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const-string v11, "WindowManager"

    invoke-virtual {v10, v11}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    move-result-object v10

    invoke-direct {v9, v10}, Lcom/android/server/wm/PointerEventDispatcher;-><init>(Landroid/view/InputChannel;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    .line 831
    new-instance v9, Landroid/view/SurfaceSession;

    invoke-direct {v9}, Landroid/view/SurfaceSession;-><init>()V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    .line 832
    const-string v9, "display"

    invoke-virtual {p1, v9}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/hardware/display/DisplayManager;

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    .line 833
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    const/4 v10, 0x0

    invoke-virtual {v9, p0, v10}, Landroid/hardware/display/DisplayManager;->registerDisplayListener(Landroid/hardware/display/DisplayManager$DisplayListener;Landroid/os/Handler;)V

    .line 834
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v9}, Landroid/hardware/display/DisplayManager;->getDisplays()[Landroid/view/Display;

    move-result-object v3

    .line 835
    .local v3, "displays":[Landroid/view/Display;
    move-object v1, v3

    .local v1, "arr$":[Landroid/view/Display;
    array-length v6, v1

    .local v6, "len$":I
    const/4 v5, 0x0

    .local v5, "i$":I
    :goto_22a
    if-ge v5, v6, :cond_234

    aget-object v2, v1, v5

    .line 836
    .local v2, "display":Landroid/view/Display;
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    .line 835
    add-int/lit8 v5, v5, 0x1

    goto :goto_22a

    .line 839
    .end local v2    # "display":Landroid/view/Display;
    :cond_234
    new-instance v9, Lcom/android/server/wm/KeyguardDisableHandler;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-direct {v9, v10, v11}, Lcom/android/server/wm/KeyguardDisableHandler;-><init>(Landroid/content/Context;Landroid/view/WindowManagerPolicy;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    .line 841
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    .line 842
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-virtual {v9, v10}, Lcom/android/server/power/PowerManagerService;->setPolicy(Landroid/view/WindowManagerPolicy;)V

    .line 843
    const-string v9, "power"

    invoke-virtual {p1, v9}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/os/PowerManager;

    .line 844
    .local v8, "pmc":Landroid/os/PowerManager;
    const/4 v9, 0x1

    const-string v10, "SCREEN_FROZEN"

    invoke-virtual {v8, v9, v10}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v9

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    .line 845
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    const/4 v10, 0x0

    invoke-virtual {v9, v10}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 847
    new-instance v9, Lcom/android/server/wm/AppTransition;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-direct {v9, p1, v10}, Lcom/android/server/wm/AppTransition;-><init>(Landroid/content/Context;Landroid/os/Handler;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    .line 849
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v9

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    .line 850
    invoke-static {}, Lcom/android/server/am/BatteryStatsService;->getService()Lcom/android/internal/app/IBatteryStats;

    move-result-object v9

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mBatteryStats:Lcom/android/internal/app/IBatteryStats;

    .line 851
    const-string v9, "appops"

    invoke-virtual {p1, v9}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/app/AppOpsManager;

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    .line 852
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    const/16 v10, 0x18

    const/4 v11, 0x0

    new-instance v12, Lcom/android/server/wm/WindowManagerService$4;

    invoke-direct {v12, p0}, Lcom/android/server/wm/WindowManagerService$4;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v9, v10, v11, v12}, Landroid/app/AppOpsManager;->startWatchingMode(ILjava/lang/String;Landroid/app/AppOpsManager$OnOpChangedListener;)V

    .line 862
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v9

    const-string/jumbo v10, "window_animation_scale"

    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScale:F

    invoke-static {v9, v10, v11}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v9

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScale:F

    .line 864
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v9

    const-string/jumbo v10, "transition_animation_scale"

    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    invoke-static {v9, v10, v11}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v9

    iput v9, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    .line 866
    invoke-virtual {p1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v9

    const-string v10, "animator_duration_scale"

    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScale:F

    invoke-static {v9, v10, v11}, Landroid/provider/Settings$Global;->getFloat(Landroid/content/ContentResolver;Ljava/lang/String;F)F

    move-result v9

    invoke-direct {p0, v9}, Lcom/android/server/wm/WindowManagerService;->setAnimatorDurationScale(F)V

    .line 870
    new-instance v4, Landroid/content/IntentFilter;

    invoke-direct {v4}, Landroid/content/IntentFilter;-><init>()V

    .line 871
    .local v4, "filter":Landroid/content/IntentFilter;
    const-string v9, "android.app.action.DEVICE_POLICY_MANAGER_STATE_CHANGED"

    invoke-virtual {v4, v9}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 872
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;

    invoke-virtual {v9, v10, v4}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 874
    const v9, 0x2000000a

    const-string v10, "WindowManager"

    invoke-virtual {v8, v9, v10}, Landroid/os/PowerManager;->newWakeLock(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;

    move-result-object v9

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    .line 876
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    const/4 v10, 0x0

    invoke-virtual {v9, v10}, Landroid/os/PowerManager$WakeLock;->setReferenceCounted(Z)V

    .line 878
    new-instance v9, Lcom/android/server/wm/WindowAnimator;

    invoke-direct {v9, p0}, Lcom/android/server/wm/WindowAnimator;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    .line 880
    invoke-static {}, Lcom/android/server/UiThread;->getHandler()Landroid/os/Handler;

    move-result-object v9

    invoke-direct {p0, v9}, Lcom/android/server/wm/WindowManagerService;->initPolicy(Landroid/os/Handler;)V

    .line 883
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v9

    invoke-virtual {v9, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 885
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 887
    invoke-virtual {p1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v7

    .line 888
    .local v7, "packageMgr":Landroid/content/pm/PackageManager;
    const-string v9, "com.sec.feature.minimode"

    invoke-virtual {v7, v9}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v9

    if-eqz v9, :cond_324

    .line 889
    const-string v9, "WindowManager"

    const-string v10, "register TouchIntercepter"

    invoke-static {v9, v10}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 890
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const-string v10, "TouchIntercepter"

    invoke-virtual {v9, v10}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    move-result-object v9

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTouchIntercepterInputChannel:Landroid/view/InputChannel;

    .line 892
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mTouchIntercepterInputChannel:Landroid/view/InputChannel;

    const/4 v11, 0x6

    invoke-virtual {v9, v10, v11}, Lcom/android/server/input/InputManagerService;->setMonitorChannelFilter(Landroid/view/InputChannel;I)V

    .line 895
    new-instance v9, Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mTouchIntercepterInputChannel:Landroid/view/InputChannel;

    invoke-static {}, Landroid/os/Looper;->myLooper()Landroid/os/Looper;

    move-result-object v11

    invoke-direct {v9, p0, v10, v11}, Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/InputChannel;Landroid/os/Looper;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mMiniModeInputEventReceiver:Lcom/android/server/wm/WindowManagerService$MiniModeInputEventReceiver;

    .line 899
    :cond_324
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v9}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v9

    const-string v10, "com.sec.feature.hovering_ui"

    invoke-virtual {v9, v10}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v9

    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mbEnableHoveringUI:Z

    .line 903
    :try_start_332
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->createWatermarkInTransaction()V

    .line 904
    new-instance v9, Lcom/android/server/wm/FocusedStackFrame;

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v10

    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-direct {v9, v10, v11, v12, p0}, Lcom/android/server/wm/FocusedStackFrame;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;Landroid/content/Context;Lcom/android/server/wm/WindowManagerService;)V

    iput-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;
    :try_end_348
    .catchall {:try_start_332 .. :try_end_348} :catchall_34c

    .line 907
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 909
    return-void

    .line 907
    :catchall_34c
    move-exception v9

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v9
.end method

.method synthetic constructor <init>(Landroid/content/Context;Lcom/android/server/power/PowerManagerService;Lcom/android/server/display/DisplayManagerService;Lcom/android/server/input/InputManagerService;ZZZLcom/android/server/wm/WindowManagerService$1;)V
    .registers 9
    .param p1, "x0"    # Landroid/content/Context;
    .param p2, "x1"    # Lcom/android/server/power/PowerManagerService;
    .param p3, "x2"    # Lcom/android/server/display/DisplayManagerService;
    .param p4, "x3"    # Lcom/android/server/input/InputManagerService;
    .param p5, "x4"    # Z
    .param p6, "x5"    # Z
    .param p7, "x6"    # Z
    .param p8, "x7"    # Lcom/android/server/wm/WindowManagerService$1;

    .prologue
    .line 195
    invoke-direct/range {p0 .. p7}, Lcom/android/server/wm/WindowManagerService;-><init>(Landroid/content/Context;Lcom/android/server/power/PowerManagerService;Lcom/android/server/display/DisplayManagerService;Lcom/android/server/input/InputManagerService;ZZZ)V

    return-void
.end method

.method static synthetic access$000(Lcom/android/server/wm/WindowManagerService;)Lcom/android/server/wm/KeyguardDisableHandler;
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 195
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    return-object v0
.end method

.method static synthetic access$1000(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 195
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    return v0
.end method

.method static synthetic access$1002(Lcom/android/server/wm/WindowManagerService;Z)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Z

    .prologue
    .line 195
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    return p1
.end method

.method static synthetic access$1100(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 195
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyWindowsChanged()V

    return-void
.end method

.method static synthetic access$1200(Lcom/android/server/wm/WindowManagerService;II)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I

    .prologue
    .line 195
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showStrictModeViolation(II)V

    return-void
.end method

.method static synthetic access$1300(Lcom/android/server/wm/WindowManagerService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 195
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayAddedLocked(I)V

    return-void
.end method

.method static synthetic access$1400(Lcom/android/server/wm/WindowManagerService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 195
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayRemovedLocked(I)V

    return-void
.end method

.method static synthetic access$1500(Lcom/android/server/wm/WindowManagerService;I)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # I

    .prologue
    .line 195
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->handleDisplayChangedLocked(I)V

    return-void
.end method

.method static synthetic access$200(Lcom/android/server/wm/WindowManagerService;FFLandroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .registers 6
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # F
    .param p2, "x2"    # F
    .param p3, "x3"    # Landroid/os/IBinder;
    .param p4, "x4"    # Z

    .prologue
    .line 195
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/wm/WindowManagerService;->findTargetWindow(FFLandroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$300(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .registers 3
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Lcom/android/server/wm/WindowState;
    .param p2, "x2"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 195
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    return-void
.end method

.method static synthetic access$400(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowList;)V
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;
    .param p1, "x1"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 195
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    return-void
.end method

.method static synthetic access$500(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 195
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    return-void
.end method

.method static synthetic access$700(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 195
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->notifyFocusChanged()V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/wm/WindowManagerService;)Z
    .registers 2
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 195
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mbEnableHoveringUI:Z

    return v0
.end method

.method static synthetic access$900(Lcom/android/server/wm/WindowManagerService;)V
    .registers 1
    .param p0, "x0"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    .line 195
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    return-void
.end method

.method private addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I
    .registers 33
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1309
    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 1310
    .local v8, "client":Landroid/view/IWindow;
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v19, v0

    .line 1311
    .local v19, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p1

    iget-object v9, v0, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1313
    .local v9, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v28

    .line 1314
    .local v28, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 1315
    .local v3, "N":I
    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-virtual {v0, v1, v9}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v21

    .line 1316
    .local v21, "tokenWindowList":Lcom/android/server/wm/WindowList;
    const/16 v22, 0x0

    .line 1317
    .local v22, "tokenWindowsPos":I
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v27

    .line 1318
    .local v27, "windowListPos":I
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v29

    if-nez v29, :cond_c9

    .line 1322
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v29, v0

    const/16 v30, 0x1

    move/from16 v0, v29

    move/from16 v1, v30

    if-ne v0, v1, :cond_62

    .line 1324
    const/16 v29, 0x0

    move-object/from16 v0, v21

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/WindowState;

    .line 1325
    .local v12, "lowestWindow":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v12, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1326
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v29, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v29

    invoke-direct {v0, v12, v1}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v22

    .end local v12    # "lowestWindow":Lcom/android/server/wm/WindowState;
    :goto_5f
    move/from16 v23, v22

    .line 1465
    .end local v22    # "tokenWindowsPos":I
    .local v23, "tokenWindowsPos":I
    :goto_61
    return v23

    .line 1328
    .end local v23    # "tokenWindowsPos":I
    .restart local v22    # "tokenWindowsPos":I
    :cond_62
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1329
    .local v6, "atoken":Lcom/android/server/wm/AppWindowToken;
    add-int/lit8 v29, v27, -0x1

    move-object/from16 v0, v21

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/WindowState;

    .line 1330
    .local v11, "lastWindow":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_92

    iget-object v0, v6, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v29, v0

    move-object/from16 v0, v29

    if-ne v11, v0, :cond_92

    .line 1331
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v11, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1332
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v29, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v29

    invoke-direct {v0, v11, v1}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v22

    goto :goto_5f

    .line 1334
    :cond_92
    invoke-direct/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I

    move-result v14

    .line 1342
    .local v14, "newIdx":I
    add-int/lit8 v29, v14, 0x1

    move-object/from16 v0, v28

    move/from16 v1, v29

    move-object/from16 v2, p1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1343
    if-gez v14, :cond_ae

    .line 1345
    const/16 v22, 0x0

    .line 1350
    :goto_a5
    const/16 v29, 0x1

    move/from16 v0, v29

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    goto :goto_5f

    .line 1347
    :cond_ae
    move-object/from16 v0, v28

    invoke-virtual {v0, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v30, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v29

    move-object/from16 v2, v30

    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v29

    add-int/lit8 v22, v29, 0x1

    goto :goto_a5

    .line 1361
    .end local v6    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v11    # "lastWindow":Lcom/android/server/wm/WindowState;
    .end local v14    # "newIdx":I
    :cond_c9
    const/4 v15, 0x0

    .line 1363
    .local v15, "pos":Lcom/android/server/wm/WindowState;
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v18

    .line 1365
    .local v18, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/16 v20, -0x1

    .line 1366
    .local v20, "tokenNdx":I
    invoke-virtual/range {v18 .. v18}, Ljava/util/ArrayList;->size()I

    move-result v29

    add-int/lit8 v17, v29, -0x1

    .local v17, "taskNdx":I
    :goto_d6
    if-ltz v17, :cond_120

    .line 1367
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/Task;

    move-object/from16 v0, v29

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v24, v0

    .line 1368
    .local v24, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v29

    add-int/lit8 v20, v29, -0x1

    :goto_ee
    if-ltz v20, :cond_11e

    .line 1369
    move-object/from16 v0, v24

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/AppWindowToken;

    .line 1370
    .local v16, "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v16

    move-object/from16 v1, v19

    if-ne v0, v1, :cond_162

    .line 1371
    add-int/lit8 v20, v20, -0x1

    .line 1372
    if-gez v20, :cond_11e

    .line 1373
    add-int/lit8 v17, v17, -0x1

    .line 1374
    if-ltz v17, :cond_11e

    .line 1375
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/Task;

    move-object/from16 v0, v29

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v29, v0

    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v29

    add-int/lit8 v20, v29, -0x1

    .line 1389
    .end local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_11e
    if-ltz v20, :cond_188

    .line 1398
    .end local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_120
    if-eqz v15, :cond_18e

    .line 1400
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    move-object/from16 v29, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v30, v0

    invoke-interface/range {v30 .. v30}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v30

    invoke-virtual/range {v29 .. v30}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 1401
    .local v6, "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v6, :cond_157

    .line 1402
    move-object/from16 v0, p0

    invoke-virtual {v0, v6, v9}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v21

    .line 1404
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 1405
    .local v4, "NC":I
    if-lez v4, :cond_157

    .line 1406
    const/16 v29, 0x0

    move-object/from16 v0, v21

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 1407
    .local v7, "bottom":Lcom/android/server/wm/WindowState;
    iget v0, v7, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v29, v0

    if-gez v29, :cond_157

    .line 1408
    move-object v15, v7

    .line 1412
    .end local v4    # "NC":I
    .end local v7    # "bottom":Lcom/android/server/wm/WindowState;
    :cond_157
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v15, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    move/from16 v23, v22

    .line 1413
    .end local v22    # "tokenWindowsPos":I
    .restart local v23    # "tokenWindowsPos":I
    goto/16 :goto_61

    .line 1384
    .end local v6    # "atoken":Lcom/android/server/wm/WindowToken;
    .end local v23    # "tokenWindowsPos":I
    .restart local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v22    # "tokenWindowsPos":I
    .restart local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_162
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-virtual {v0, v1, v9}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v21

    .line 1385
    move-object/from16 v0, v16

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    move/from16 v29, v0

    if-nez v29, :cond_184

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v29

    if-lez v29, :cond_184

    .line 1386
    const/16 v29, 0x0

    move-object/from16 v0, v21

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "pos":Lcom/android/server/wm/WindowState;
    check-cast v15, Lcom/android/server/wm/WindowState;

    .line 1368
    .restart local v15    # "pos":Lcom/android/server/wm/WindowState;
    :cond_184
    add-int/lit8 v20, v20, -0x1

    goto/16 :goto_ee

    .line 1366
    .end local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    :cond_188
    add-int/lit8 v17, v17, -0x1

    goto/16 :goto_d6

    .line 1418
    :cond_18c
    add-int/lit8 v17, v17, -0x1

    .end local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_18e
    if-ltz v17, :cond_1c8

    .line 1419
    move-object/from16 v0, v18

    move/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/Task;

    move-object/from16 v0, v29

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v24, v0

    .line 1420
    .restart local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :goto_1a0
    if-ltz v20, :cond_1c6

    .line 1421
    move-object/from16 v0, v24

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/AppWindowToken;

    .line 1422
    .restart local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-virtual {v0, v1, v9}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v21

    .line 1423
    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    .line 1424
    .local v5, "NW":I
    if-lez v5, :cond_20b

    .line 1425
    add-int/lit8 v29, v5, -0x1

    move-object/from16 v0, v21

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "pos":Lcom/android/server/wm/WindowState;
    check-cast v15, Lcom/android/server/wm/WindowState;

    .line 1429
    .end local v5    # "NW":I
    .end local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v15    # "pos":Lcom/android/server/wm/WindowState;
    :cond_1c6
    if-ltz v20, :cond_18c

    .line 1435
    .end local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_1c8
    if-eqz v15, :cond_20e

    .line 1438
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    move-object/from16 v29, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v30, v0

    invoke-interface/range {v30 .. v30}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v30

    invoke-virtual/range {v29 .. v30}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 1439
    .restart local v6    # "atoken":Lcom/android/server/wm/WindowToken;
    if-eqz v6, :cond_200

    .line 1440
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v29, v0

    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 1441
    .restart local v4    # "NC":I
    if-lez v4, :cond_200

    .line 1442
    iget-object v0, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v29, v0

    add-int/lit8 v30, v4, -0x1

    invoke-virtual/range {v29 .. v30}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/WindowState;

    .line 1443
    .local v25, "top":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v25

    iget v0, v0, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v29, v0

    if-ltz v29, :cond_200

    .line 1444
    move-object/from16 v15, v25

    .line 1448
    .end local v4    # "NC":I
    .end local v25    # "top":Lcom/android/server/wm/WindowState;
    :cond_200
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v15, v1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    move/from16 v23, v22

    .line 1449
    .end local v22    # "tokenWindowsPos":I
    .restart local v23    # "tokenWindowsPos":I
    goto/16 :goto_61

    .line 1420
    .end local v6    # "atoken":Lcom/android/server/wm/WindowToken;
    .end local v23    # "tokenWindowsPos":I
    .restart local v5    # "NW":I
    .restart local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    .restart local v22    # "tokenWindowsPos":I
    .restart local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_20b
    add-int/lit8 v20, v20, -0x1

    goto :goto_1a0

    .line 1453
    .end local v5    # "NW":I
    .end local v16    # "t":Lcom/android/server/wm/AppWindowToken;
    .end local v24    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_20e
    move-object/from16 v0, p1

    iget v13, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    .line 1455
    .local v13, "myLayer":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_213
    if-ge v10, v3, :cond_227

    .line 1456
    move-object/from16 v0, v28

    invoke-virtual {v0, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/wm/WindowState;

    .line 1457
    .local v26, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v26

    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move/from16 v29, v0

    move/from16 v0, v29

    if-le v0, v13, :cond_23a

    .line 1463
    .end local v26    # "w":Lcom/android/server/wm/WindowState;
    :cond_227
    move-object/from16 v0, v28

    move-object/from16 v1, p1

    invoke-virtual {v0, v10, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1464
    const/16 v29, 0x1

    move/from16 v0, v29

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    move/from16 v23, v22

    .line 1465
    .end local v22    # "tokenWindowsPos":I
    .restart local v23    # "tokenWindowsPos":I
    goto/16 :goto_61

    .line 1455
    .end local v23    # "tokenWindowsPos":I
    .restart local v22    # "tokenWindowsPos":I
    .restart local v26    # "w":Lcom/android/server/wm/WindowState;
    :cond_23a
    add-int/lit8 v10, v10, 0x1

    goto :goto_213
.end method

.method private addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 15
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    .prologue
    .line 1513
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 1514
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1515
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    .line 1517
    .local v1, "attached":Lcom/android/server/wm/WindowState;
    invoke-virtual {p0, v6, v2}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 1521
    .local v7, "tokenWindowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 1522
    .local v0, "NA":I
    iget v5, p1, Lcom/android/server/wm/WindowState;->mSubLayer:I

    .line 1523
    .local v5, "sublayer":I
    const/high16 v4, -0x80000000

    .line 1524
    .local v4, "largestSublayer":I
    const/4 v10, 0x0

    .line 1526
    .local v10, "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_14
    if-ge v3, v0, :cond_33

    .line 1527
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 1528
    .local v8, "w":Lcom/android/server/wm/WindowState;
    iget v9, v8, Lcom/android/server/wm/WindowState;->mSubLayer:I

    .line 1529
    .local v9, "wSublayer":I
    if-lt v9, v4, :cond_22

    .line 1530
    move v4, v9

    .line 1531
    move-object v10, v8

    .line 1533
    :cond_22
    if-gez v5, :cond_42

    .line 1536
    if-lt v9, v5, :cond_4f

    .line 1537
    if-eqz p2, :cond_2d

    .line 1539
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1541
    :cond_2d
    if-ltz v9, :cond_30

    move-object v8, v1

    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    :cond_30
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1557
    .end local v9    # "wSublayer":I
    :cond_33
    :goto_33
    if-lt v3, v0, :cond_41

    .line 1558
    if-eqz p2, :cond_3c

    .line 1560
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 1562
    :cond_3c
    if-gez v5, :cond_52

    .line 1563
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    .line 1571
    .end local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    :cond_41
    :goto_41
    return-void

    .line 1547
    .restart local v8    # "w":Lcom/android/server/wm/WindowState;
    .restart local v9    # "wSublayer":I
    .restart local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    :cond_42
    if-le v9, v5, :cond_4f

    .line 1548
    if-eqz p2, :cond_4b

    .line 1550
    iget-object v11, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v11, v3, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1552
    :cond_4b
    invoke-direct {p0, v8, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto :goto_33

    .line 1526
    :cond_4f
    add-int/lit8 v3, v3, 0x1

    goto :goto_14

    .line 1565
    .end local v8    # "w":Lcom/android/server/wm/WindowState;
    .end local v9    # "wSublayer":I
    :cond_52
    if-ltz v4, :cond_58

    .end local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    :goto_54
    invoke-direct {p0, v10, p1}, Lcom/android/server/wm/WindowManagerService;->placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V

    goto :goto_41

    .restart local v10    # "windowWithLargestSublayer":Lcom/android/server/wm/WindowState;
    :cond_58
    move-object v10, v1

    goto :goto_54
.end method

.method private addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .registers 12
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/16 v9, 0x7dc

    const/16 v8, 0x7d8

    .line 1469
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 1473
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    const/4 v3, 0x0

    .line 1474
    .local v3, "skipWallpaper":Z
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x89b

    if-eq v6, v7, :cond_29

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x89a

    if-eq v6, v7, :cond_29

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x899

    if-eq v6, v7, :cond_29

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x7e7

    if-ne v6, v7, :cond_2a

    .line 1478
    :cond_29
    const/4 v3, 0x1

    .line 1482
    :cond_2a
    const/4 v4, 0x0

    .line 1483
    .local v4, "stopInputMethodDialog":Z
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v6, v8, :cond_32

    .line 1484
    const/4 v4, 0x1

    .line 1486
    :cond_32
    const/4 v2, 0x0

    .line 1487
    .local v2, "skipInputMethodDialog":Z
    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v6, v9, :cond_3a

    .line 1488
    const/4 v2, 0x1

    .line 1491
    :cond_3a
    iget v1, p1, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    .line 1493
    .local v1, "myLayer":I
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v6

    add-int/lit8 v0, v6, -0x1

    .local v0, "i":I
    :goto_42
    if-ltz v0, :cond_6c

    .line 1494
    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    iget v6, v6, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    if-gt v6, v1, :cond_75

    if-eqz v3, :cond_5e

    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    iget-object v6, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x7dd

    if-eq v6, v7, :cond_75

    :cond_5e
    if-eqz v2, :cond_6c

    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    iget-object v6, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    if-eq v6, v8, :cond_75

    .line 1505
    :cond_6c
    add-int/lit8 v0, v0, 0x1

    .line 1508
    invoke-virtual {v5, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1509
    const/4 v6, 0x1

    iput-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1510
    return-void

    .line 1494
    :cond_75
    if-eqz v4, :cond_83

    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    iget-object v6, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    if-eq v6, v9, :cond_6c

    .line 1493
    :cond_83
    add-int/lit8 v0, v0, -0x1

    goto :goto_42
.end method

.method private addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 15
    .param p1, "win"    # Lcom/android/server/wm/WindowState;
    .param p2, "addToToken"    # Z

    .prologue
    const/4 v9, 0x0

    const/4 v8, 0x1

    .line 1575
    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 1576
    .local v4, "token":Lcom/android/server/wm/WindowToken;
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    .line 1577
    .local v0, "attached":Lcom/android/server/wm/WindowState;
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 1578
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p0, v4, v1}, Lcom/android/server/wm/WindowManagerService;->getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 1582
    .local v5, "tokenWindowList":Lcom/android/server/wm/WindowList;
    if-nez v0, :cond_8d

    .line 1584
    const/4 v6, 0x0

    .line 1585
    .local v6, "tokenWindowsPos":I
    iget-object v10, v4, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v10, :cond_85

    .line 1586
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addAppWindowToListLocked(Lcom/android/server/wm/WindowState;)I

    move-result v6

    .line 1590
    :goto_17
    if-eqz p2, :cond_1e

    .line 1592
    iget-object v10, v4, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v10, v6, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1596
    :cond_1e
    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x834

    if-eq v10, v11, :cond_2e

    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x836

    if-ne v10, v11, :cond_35

    .line 1598
    :cond_2e
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    .line 1599
    iput-boolean v9, p0, Lcom/android/server/wm/WindowManagerService;->mSkipWidgetFocus:Z

    .line 1602
    invoke-direct {p0, v9, v8}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 1620
    :cond_35
    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v10, :cond_89

    iget-object v10, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v10, v10, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v10, :cond_89

    move v2, v8

    .line 1627
    .local v2, "isWindowAddedInConfigurationChanging":Z
    :goto_42
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v10

    invoke-virtual {p0, v10}, Lcom/android/server/wm/WindowManagerService;->getWindowListLocked(Landroid/view/Display;)Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 1628
    .local v7, "windowsOnDisplay":Lcom/android/server/wm/WindowList;
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    if-eqz v10, :cond_8b

    invoke-virtual {v7, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v10

    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v7, v11}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v11

    if-ge v10, v11, :cond_8b

    move v3, v8

    .line 1629
    .local v3, "isWindowUnderTopWidgetWindow":Z
    :goto_5b
    if-eqz v3, :cond_61

    if-nez v2, :cond_61

    .line 1630
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSkipWidgetFocus:Z

    .line 1637
    .end local v2    # "isWindowAddedInConfigurationChanging":Z
    .end local v3    # "isWindowUnderTopWidgetWindow":Z
    .end local v6    # "tokenWindowsPos":I
    .end local v7    # "windowsOnDisplay":Lcom/android/server/wm/WindowList;
    :cond_61
    :goto_61
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_6e

    if-eqz p2, :cond_6e

    .line 1638
    iget-object v9, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v9, v9, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, p1}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 1645
    :cond_6e
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v9

    if-eqz v9, :cond_84

    if-eqz v0, :cond_84

    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v9

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5, v10}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v10

    if-ge v9, v10, :cond_84

    .line 1650
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSkipWidgetFocus:Z

    .line 1653
    :cond_84
    return-void

    .line 1588
    .restart local v6    # "tokenWindowsPos":I
    :cond_85
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->addFreeWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    goto :goto_17

    :cond_89
    move v2, v9

    .line 1620
    goto :goto_42

    .restart local v2    # "isWindowAddedInConfigurationChanging":Z
    .restart local v7    # "windowsOnDisplay":Lcom/android/server/wm/WindowList;
    :cond_8b
    move v3, v9

    .line 1628
    goto :goto_5b

    .line 1634
    .end local v2    # "isWindowAddedInConfigurationChanging":Z
    .end local v6    # "tokenWindowsPos":I
    .end local v7    # "windowsOnDisplay":Lcom/android/server/wm/WindowList;
    :cond_8d
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->addAttachedWindowToListLocked(Lcom/android/server/wm/WindowState;Z)V

    goto :goto_61
.end method

.method private adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V
    .registers 8
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotation"    # I
    .param p3, "dw"    # I
    .param p4, "dh"    # I

    .prologue
    .line 8152
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p3, p4, p2}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(III)I

    move-result v1

    .line 8153
    .local v1, "width":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    if-ge v1, v2, :cond_c

    .line 8154
    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    .line 8156
    :cond_c
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    if-le v1, v2, :cond_12

    .line 8157
    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    .line 8159
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p3, p4, p2}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(III)I

    move-result v0

    .line 8160
    .local v0, "height":I
    iget v2, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    if-ge v0, v2, :cond_1e

    .line 8161
    iput v0, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    .line 8163
    :cond_1e
    iget v2, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    if-le v0, v2, :cond_24

    .line 8164
    iput v0, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    .line 8166
    :cond_24
    return-void
.end method

.method private applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZ)Z
    .registers 13
    .param p1, "atoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "transit"    # I
    .param p4, "enter"    # Z

    .prologue
    .line 4062
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v0

    if-eqz v0, :cond_3b

    .line 4063
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v7

    .line 4072
    .local v7, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->doesForceHideBySViewCover()Z

    move-result v0

    if-eqz v0, :cond_36

    .line 4073
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, v7}, Landroid/view/WindowManagerPolicy;->getSViewCoverWidth(Landroid/view/DisplayInfo;)I

    move-result v4

    .line 4074
    .local v4, "width":I
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, v7}, Landroid/view/WindowManagerPolicy;->getSViewCoverHeight(Landroid/view/DisplayInfo;)I

    move-result v5

    .line 4082
    .local v5, "height":I
    :goto_1e
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object v1, p2

    move v2, p3

    move v3, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/AppTransition;->loadAnimation(Landroid/view/WindowManager$LayoutParams;IZII)Landroid/view/animation/Animation;

    move-result-object v6

    .line 4083
    .local v6, "a":Landroid/view/animation/Animation;
    if-eqz v6, :cond_2e

    .line 4092
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v0, v6, v4, v5}, Lcom/android/server/wm/AppWindowAnimator;->setAnimation(Landroid/view/animation/Animation;II)V

    .line 4098
    .end local v4    # "width":I
    .end local v5    # "height":I
    .end local v6    # "a":Landroid/view/animation/Animation;
    .end local v7    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_2e
    :goto_2e
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v0, :cond_41

    const/4 v0, 0x1

    :goto_35
    return v0

    .line 4076
    .restart local v7    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_36
    iget v4, v7, Landroid/view/DisplayInfo;->appWidth:I

    .line 4077
    .restart local v4    # "width":I
    iget v5, v7, Landroid/view/DisplayInfo;->appHeight:I

    .restart local v5    # "height":I
    goto :goto_1e

    .line 4095
    .end local v4    # "width":I
    .end local v5    # "height":I
    .end local v7    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_3b
    iget-object v0, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    goto :goto_2e

    .line 4098
    :cond_41
    const/4 v0, 0x0

    goto :goto_35
.end method

.method private final assignLayersLocked(Lcom/android/server/wm/WindowList;)V
    .registers 14
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 9744
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 9745
    .local v0, "N":I
    const/4 v2, 0x0

    .line 9746
    .local v2, "curBaseLayer":I
    const/4 v3, 0x0

    .line 9752
    .local v3, "curLayer":I
    const/4 v1, 0x0

    .line 9754
    .local v1, "anyLayerChanged":Z
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_8
    if-ge v4, v0, :cond_8e

    .line 9755
    invoke-virtual {p1, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 9756
    .local v7, "w":Lcom/android/server/wm/WindowState;
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 9757
    .local v8, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/4 v5, 0x0

    .line 9758
    .local v5, "layerChanged":Z
    iget v6, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    .line 9759
    .local v6, "oldLayer":I
    iget v10, v7, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    if-eq v10, v2, :cond_2b

    iget-boolean v10, v7, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-nez v10, :cond_2b

    if-lez v4, :cond_23

    iget-boolean v10, v7, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-nez v10, :cond_2b

    :cond_23
    iget-object v10, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x898

    if-ne v10, v11, :cond_6b

    .line 9761
    :cond_2b
    add-int/lit8 v3, v3, 0x5

    .line 9762
    iput v3, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    .line 9767
    :goto_2f
    iget v10, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    if-eq v10, v6, :cond_35

    .line 9768
    const/4 v5, 0x1

    .line 9769
    const/4 v1, 0x1

    .line 9771
    :cond_35
    iget-object v9, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 9772
    .local v9, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget v6, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 9773
    iget-object v10, v7, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v10, :cond_71

    .line 9774
    iget v10, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    iget-object v11, v7, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v11, v11, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget v11, v11, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    add-int/2addr v10, v11

    iput v10, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 9782
    :goto_48
    iget-boolean v10, v7, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-eqz v10, :cond_82

    .line 9783
    iget v10, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodAnimLayerAdjustment:I

    add-int/2addr v10, v11

    iput v10, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 9787
    :cond_53
    :goto_53
    iget v10, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-eq v10, v6, :cond_59

    .line 9788
    const/4 v5, 0x1

    .line 9789
    const/4 v1, 0x1

    .line 9791
    :cond_59
    if-eqz v5, :cond_68

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v10

    invoke-virtual {v10, v8}, Lcom/android/server/wm/TaskStack;->isDimming(Lcom/android/server/wm/WindowStateAnimator;)Z

    move-result v10

    if-eqz v10, :cond_68

    .line 9793
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    .line 9754
    :cond_68
    add-int/lit8 v4, v4, 0x1

    goto :goto_8

    .line 9764
    .end local v9    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_6b
    iget v3, v7, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move v2, v3

    .line 9765
    iput v3, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    goto :goto_2f

    .line 9776
    .restart local v9    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_71
    if-eqz v9, :cond_7d

    .line 9777
    iget v10, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    iget-object v11, v9, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget v11, v11, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    add-int/2addr v10, v11

    iput v10, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto :goto_48

    .line 9780
    :cond_7d
    iget v10, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    iput v10, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto :goto_48

    .line 9784
    :cond_82
    iget-boolean v10, v7, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v10, :cond_53

    .line 9785
    iget v10, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    iget v11, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    add-int/2addr v10, v11

    iput v10, v8, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto :goto_53

    .line 9806
    .end local v5    # "layerChanged":Z
    .end local v6    # "oldLayer":I
    .end local v7    # "w":Lcom/android/server/wm/WindowState;
    .end local v8    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v9    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8e
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v10, :cond_ab

    if-eqz v1, :cond_ab

    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    add-int/lit8 v10, v10, -0x1

    invoke-virtual {p1, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/WindowState;

    invoke-virtual {v10}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v10

    if-nez v10, :cond_ab

    .line 9808
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayMagnifier;->onWindowLayersChangedLocked()V

    .line 9810
    :cond_ab
    return-void
.end method

.method private assignMultiWindowScaleLocked(Lcom/android/server/wm/TaskStack;)V
    .registers 15
    .param p1, "taskStack"    # Lcom/android/server/wm/TaskStack;

    .prologue
    .line 12948
    if-nez p1, :cond_3

    .line 13020
    :cond_2
    return-void

    .line 12952
    :cond_3
    invoke-virtual {p1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 12953
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v1

    .line 12957
    .local v1, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v9

    .line 12959
    .local v9, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    add-int/lit8 v3, v10, -0x1

    .local v3, "i":I
    :goto_15
    if-ltz v3, :cond_2

    .line 12960
    invoke-virtual {v9, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 12961
    .local v8, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v4

    .line 12964
    .local v4, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->getAppToken()Landroid/view/IApplicationToken;

    move-result-object v10

    if-eqz v10, :cond_5d

    invoke-virtual {v8}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v10

    if-ne v10, p1, :cond_5d

    .line 12965
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit16 v10, v10, 0x4000

    if-eqz v10, :cond_60

    const/4 v6, 0x1

    .line 12968
    .local v6, "scaledWindow":Z
    :goto_36
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-eqz v10, :cond_62

    if-nez v6, :cond_62

    .line 12969
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v11, 0x200000

    and-int/2addr v10, v11

    if-nez v10, :cond_5d

    .line 12970
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget v10, v10, Lcom/android/server/wm/WindowState;->mHScale:F

    iput v10, v8, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 12971
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget v10, v10, Lcom/android/server/wm/WindowState;->mVScale:F

    iput v10, v8, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 12972
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget v10, v10, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    iput v10, v8, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    .line 12973
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    iget v10, v10, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    iput v10, v8, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    .line 12959
    .end local v6    # "scaledWindow":Z
    :cond_5d
    :goto_5d
    add-int/lit8 v3, v3, -0x1

    goto :goto_15

    .line 12965
    :cond_60
    const/4 v6, 0x0

    goto :goto_36

    .line 12977
    .restart local v6    # "scaledWindow":Z
    :cond_62
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-nez v10, :cond_b4

    move-object v10, v8

    :goto_69
    invoke-interface {v11, v10}, Landroid/view/WindowManagerPolicy;->getFloatingWindowPadding(Landroid/view/WindowManagerPolicy$WindowState;)Landroid/graphics/Rect;

    move-result-object v5

    .line 12978
    .local v5, "padding":Landroid/graphics/Rect;
    iget-object v10, p1, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    iget-object v10, v10, Lcom/android/server/wm/StackBox;->mBounds:Landroid/graphics/Rect;

    invoke-virtual {v10}, Landroid/graphics/Rect;->width()I

    move-result v10

    int-to-float v10, v10

    iget v11, v1, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v12, v5, Landroid/graphics/Rect;->left:I

    add-int/2addr v11, v12

    iget v12, v5, Landroid/graphics/Rect;->right:I

    add-int/2addr v11, v12

    int-to-float v11, v11

    div-float v2, v10, v11

    .line 12979
    .local v2, "hScale":F
    iget-object v10, p1, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    iget-object v10, v10, Lcom/android/server/wm/StackBox;->mBounds:Landroid/graphics/Rect;

    invoke-virtual {v10}, Landroid/graphics/Rect;->height()I

    move-result v10

    int-to-float v10, v10

    iget v11, v1, Landroid/view/DisplayInfo;->logicalHeight:I

    iget v12, v5, Landroid/graphics/Rect;->top:I

    add-int/2addr v11, v12

    iget v12, v5, Landroid/graphics/Rect;->bottom:I

    add-int/2addr v11, v12

    int-to-float v11, v11

    div-float v7, v10, v11

    .line 12981
    .local v7, "vScale":F
    const/16 v10, 0x800

    invoke-virtual {v4, v10}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v10

    if-eqz v10, :cond_5d

    .line 12984
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v11, 0x200000

    and-int/2addr v10, v11

    if-nez v10, :cond_5d

    .line 12987
    const/4 v10, 0x4

    invoke-virtual {v4, v10}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v10

    if-eqz v10, :cond_b7

    .line 12988
    const/high16 v10, 0x3f800000

    iput v10, v8, Lcom/android/server/wm/WindowState;->mVScale:F

    iput v10, v8, Lcom/android/server/wm/WindowState;->mHScale:F

    goto :goto_5d

    .line 12977
    .end local v2    # "hScale":F
    .end local v5    # "padding":Landroid/graphics/Rect;
    .end local v7    # "vScale":F
    :cond_b4
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    goto :goto_69

    .line 12992
    .restart local v2    # "hScale":F
    .restart local v5    # "padding":Landroid/graphics/Rect;
    .restart local v7    # "vScale":F
    :cond_b7
    if-eqz v6, :cond_142

    .line 12995
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->width:I

    iget v11, v8, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    if-eq v10, v11, :cond_13c

    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->width:I

    int-to-float v10, v10

    iget v11, v8, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    int-to-float v11, v11

    div-float/2addr v10, v11

    :goto_ca
    iput v10, v8, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 12997
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->height:I

    iget v11, v8, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    if-eq v10, v11, :cond_13f

    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->height:I

    int-to-float v10, v10

    iget v11, v8, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    int-to-float v11, v11

    div-float/2addr v10, v11

    :goto_dd
    iput v10, v8, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 13002
    :goto_df
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget v10, v10, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    const/4 v11, 0x1

    if-ne v10, v11, :cond_ed

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget v10, v10, Landroid/content/res/Configuration;->orientation:I

    const/4 v11, 0x2

    if-eq v10, v11, :cond_fa

    :cond_ed
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget v10, v10, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    if-nez v10, :cond_12a

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget v10, v10, Landroid/content/res/Configuration;->orientation:I

    const/4 v11, 0x1

    if-ne v10, v11, :cond_12a

    .line 13004
    :cond_fa
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget v10, v10, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    invoke-virtual {v0, v10}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    move-result-object v1

    .line 13006
    iget-object v10, p1, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    iget-object v10, v10, Lcom/android/server/wm/StackBox;->mBounds:Landroid/graphics/Rect;

    invoke-virtual {v10}, Landroid/graphics/Rect;->width()I

    move-result v10

    int-to-float v10, v10

    iget v11, v1, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v12, v5, Landroid/graphics/Rect;->left:I

    add-int/2addr v11, v12

    iget v12, v5, Landroid/graphics/Rect;->right:I

    add-int/2addr v11, v12

    int-to-float v11, v11

    div-float v2, v10, v11

    .line 13007
    iget-object v10, p1, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    iget-object v10, v10, Lcom/android/server/wm/StackBox;->mBounds:Landroid/graphics/Rect;

    invoke-virtual {v10}, Landroid/graphics/Rect;->height()I

    move-result v10

    int-to-float v10, v10

    iget v11, v1, Landroid/view/DisplayInfo;->logicalHeight:I

    iget v12, v5, Landroid/graphics/Rect;->top:I

    add-int/2addr v11, v12

    iget v12, v5, Landroid/graphics/Rect;->bottom:I

    add-int/2addr v11, v12

    int-to-float v11, v11

    div-float v7, v10, v11

    .line 13009
    :cond_12a
    iput v2, v8, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    .line 13010
    iput v7, v8, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    .line 13011
    if-eqz v6, :cond_149

    .line 13012
    iget v10, v8, Lcom/android/server/wm/WindowState;->mHScale:F

    mul-float/2addr v10, v2

    iput v10, v8, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 13013
    iget v10, v8, Lcom/android/server/wm/WindowState;->mVScale:F

    mul-float/2addr v10, v7

    iput v10, v8, Lcom/android/server/wm/WindowState;->mVScale:F

    goto/16 :goto_5d

    .line 12995
    :cond_13c
    const/high16 v10, 0x3f800000

    goto :goto_ca

    .line 12997
    :cond_13f
    const/high16 v10, 0x3f800000

    goto :goto_dd

    .line 13000
    :cond_142
    const/high16 v10, 0x3f800000

    iput v10, v8, Lcom/android/server/wm/WindowState;->mVScale:F

    iput v10, v8, Lcom/android/server/wm/WindowState;->mHScale:F

    goto :goto_df

    .line 13015
    :cond_149
    iput v2, v8, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 13016
    iput v7, v8, Lcom/android/server/wm/WindowState;->mVScale:F

    goto/16 :goto_5d
.end method

.method static canBeImeTarget(Lcom/android/server/wm/WindowState;)Z
    .registers 5
    .param p0, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const v3, 0x20008

    const/4 v1, 0x0

    .line 1656
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int v0, v2, v3

    .line 1658
    .local v0, "fl":I
    if-eqz v0, :cond_15

    if-eq v0, v3, :cond_15

    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x3

    if-ne v2, v3, :cond_33

    .line 1676
    :cond_15
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v2

    const/4 v3, 0x2

    if-ne v2, v3, :cond_39

    .line 1677
    iget-object v2, p0, Lcom/android/server/wm/WindowState;->mService:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, v2, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v3, p0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v2, v3, :cond_33

    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v2

    const/4 v3, 0x4

    invoke-virtual {v2, v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v2

    if-eqz v2, :cond_34

    .line 1688
    :cond_33
    :goto_33
    return v1

    .line 1681
    :cond_34
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v1

    goto :goto_33

    .line 1686
    :cond_39
    invoke-virtual {p0}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v1

    goto :goto_33
.end method

.method private computeCompatSmallestWidth(ZLandroid/util/DisplayMetrics;II)I
    .registers 17
    .param p1, "rotated"    # Z
    .param p2, "dm"    # Landroid/util/DisplayMetrics;
    .param p3, "dw"    # I
    .param p4, "dh"    # I

    .prologue
    .line 8236
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    invoke-virtual {v0, p2}, Landroid/util/DisplayMetrics;->setTo(Landroid/util/DisplayMetrics;)V

    .line 8237
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTmpDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 8239
    .local v3, "tmpDm":Landroid/util/DisplayMetrics;
    if-eqz p1, :cond_2d

    .line 8240
    move/from16 v4, p4

    .line 8241
    .local v4, "unrotDw":I
    move v5, p3

    .line 8246
    .local v5, "unrotDh":I
    :goto_c
    const/4 v1, 0x0

    const/4 v2, 0x0

    move-object v0, p0

    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    move-result v7

    .line 8247
    .local v7, "sw":I
    const/4 v8, 0x1

    move-object v6, p0

    move-object v9, v3

    move v10, v5

    move v11, v4

    invoke-direct/range {v6 .. v11}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    move-result v7

    .line 8248
    const/4 v2, 0x2

    move-object v0, p0

    move v1, v7

    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    move-result v7

    .line 8249
    const/4 v8, 0x3

    move-object v6, p0

    move-object v9, v3

    move v10, v5

    move v11, v4

    invoke-direct/range {v6 .. v11}, Lcom/android/server/wm/WindowManagerService;->reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I

    move-result v7

    .line 8250
    return v7

    .line 8243
    .end local v4    # "unrotDw":I
    .end local v5    # "unrotDh":I
    .end local v7    # "sw":I
    :cond_2d
    move v4, p3

    .line 8244
    .restart local v4    # "unrotDw":I
    move/from16 v5, p4

    .restart local v5    # "unrotDh":I
    goto :goto_c
.end method

.method private computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .registers 6

    .prologue
    .line 11692
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-object v4, v4, Lcom/android/server/wm/WindowAnimator;->mUniverseBackground:Lcom/android/server/wm/WindowStateAnimator;

    if-eqz v4, :cond_19

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-object v4, v4, Lcom/android/server/wm/WindowAnimator;->mUniverseBackground:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v4, v4, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v4

    if-eqz v4, :cond_19

    .line 11694
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-object v4, v4, Lcom/android/server/wm/WindowAnimator;->mUniverseBackground:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v3, v4, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    .line 11705
    :cond_18
    :goto_18
    return-object v3

    .line 11697
    :cond_19
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 11698
    .local v1, "displayCount":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_20
    if-ge v2, v1, :cond_33

    .line 11699
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 11700
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 11701
    .local v3, "win":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_18

    .line 11698
    add-int/lit8 v2, v2, 0x1

    goto :goto_20

    .line 11705
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    :cond_33
    const/4 v3, 0x0

    goto :goto_18
.end method

.method private computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIFLandroid/content/res/Configuration;)V
    .registers 20
    .param p1, "displayInfo"    # Landroid/view/DisplayInfo;
    .param p2, "rotated"    # Z
    .param p3, "dw"    # I
    .param p4, "dh"    # I
    .param p5, "density"    # F
    .param p6, "outConfig"    # Landroid/content/res/Configuration;

    .prologue
    .line 8197
    if-eqz p2, :cond_61

    .line 8198
    move/from16 v5, p4

    .line 8199
    .local v5, "unrotDw":I
    move/from16 v6, p3

    .line 8204
    .local v6, "unrotDh":I
    :goto_6
    const/high16 v1, 0x40000000

    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    .line 8205
    const/high16 v1, 0x40000000

    iput v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppHeight:I

    .line 8206
    const/4 v1, 0x0

    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppWidth:I

    .line 8207
    const/4 v1, 0x0

    iput v1, p1, Landroid/view/DisplayInfo;->largestNominalAppHeight:I

    .line 8208
    const/4 v1, 0x0

    invoke-direct {p0, p1, v1, v5, v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    .line 8209
    const/4 v1, 0x1

    invoke-direct {p0, p1, v1, v6, v5}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    .line 8210
    const/4 v1, 0x2

    invoke-direct {p0, p1, v1, v5, v6}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    .line 8211
    const/4 v1, 0x3

    invoke-direct {p0, p1, v1, v6, v5}, Lcom/android/server/wm/WindowManagerService;->adjustDisplaySizeRanges(Landroid/view/DisplayInfo;III)V

    .line 8212
    move-object/from16 v0, p6

    iget v1, v0, Landroid/content/res/Configuration;->screenLayout:I

    invoke-static {v1}, Landroid/content/res/Configuration;->resetScreenLayout(I)I

    move-result v2

    .line 8213
    .local v2, "sl":I
    const/4 v3, 0x0

    move-object v1, p0

    move/from16 v4, p5

    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFII)I

    move-result v2

    .line 8214
    const/4 v9, 0x1

    move-object v7, p0

    move v8, v2

    move/from16 v10, p5

    move v11, v6

    move v12, v5

    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFII)I

    move-result v2

    .line 8215
    const/4 v3, 0x2

    move-object v1, p0

    move/from16 v4, p5

    invoke-direct/range {v1 .. v6}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFII)I

    move-result v2

    .line 8216
    const/4 v9, 0x3

    move-object v7, p0

    move v8, v2

    move/from16 v10, p5

    move v11, v6

    move v12, v5

    invoke-direct/range {v7 .. v12}, Lcom/android/server/wm/WindowManagerService;->reduceConfigLayout(IIFII)I

    move-result v2

    .line 8217
    iget v1, p1, Landroid/view/DisplayInfo;->smallestNominalAppWidth:I

    int-to-float v1, v1

    div-float v1, v1, p5

    float-to-int v1, v1

    move-object/from16 v0, p6

    iput v1, v0, Landroid/content/res/Configuration;->smallestScreenWidthDp:I

    .line 8218
    move-object/from16 v0, p6

    iput v2, v0, Landroid/content/res/Configuration;->screenLayout:I

    .line 8219
    return-void

    .line 8201
    .end local v2    # "sl":I
    .end local v5    # "unrotDw":I
    .end local v6    # "unrotDh":I
    :cond_61
    move/from16 v5, p3

    .line 8202
    .restart local v5    # "unrotDw":I
    move/from16 v6, p4

    .restart local v6    # "unrotDh":I
    goto :goto_6
.end method

.method private configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 9
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 9571
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    iget v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iget v3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    iget v4, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    invoke-interface {v0, v1, v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setInitialDisplaySize(Landroid/view/Display;III)V

    .line 9576
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v6

    .line 9577
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v1

    iget v2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    iget v3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    iget v4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    iget v5, v6, Landroid/view/DisplayInfo;->overscanBottom:I

    invoke-interface/range {v0 .. v5}, Landroid/view/WindowManagerPolicy;->setDisplayOverscan(Landroid/view/Display;IIII)V

    .line 9580
    return-void
.end method

.method private convertActivityResultToComponentName(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .registers 13
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v7, 0x0

    const/4 v10, 0x2

    .line 13215
    const/4 v4, 0x0

    .line 13216
    .local v4, "pkgName":Ljava/lang/String;
    const/4 v0, 0x0

    .line 13217
    .local v0, "className":Ljava/lang/String;
    const/4 v6, 0x0

    .line 13218
    .local v6, "returnComponent":Landroid/content/ComponentName;
    const/4 v1, 0x0

    .line 13220
    .local v1, "length":I
    if-nez p1, :cond_9

    .line 13250
    :cond_8
    :goto_8
    return-object v7

    .line 13224
    :cond_9
    invoke-virtual {p1}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v5

    .line 13225
    .local v5, "rawString":Ljava/lang/String;
    if-eqz v5, :cond_8

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v8

    const/16 v9, 0x1a

    if-le v8, v9, :cond_8

    .line 13229
    const-string v7, " "

    invoke-virtual {v5, v7}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    .line 13231
    .local v3, "parsingData":[Ljava/lang/String;
    :try_start_1d
    array-length v1, v3

    .line 13232
    if-lt v1, v10, :cond_54

    .line 13233
    add-int/lit8 v7, v1, -0x2

    aget-object v7, v3, v7

    const-string v8, "/"

    invoke-virtual {v7, v8}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v3

    .line 13235
    array-length v7, v3

    if-ne v7, v10, :cond_54

    .line 13236
    const/4 v7, 0x0

    aget-object v4, v3, v7

    .line 13237
    const/4 v7, 0x1

    aget-object v7, v3, v7

    const-string v8, "."

    invoke-virtual {v7, v8}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v7

    if-nez v7, :cond_56

    .line 13238
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const/4 v8, 0x1

    aget-object v8, v3, v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 13242
    :goto_4f
    new-instance v6, Landroid/content/ComponentName;

    .end local v6    # "returnComponent":Landroid/content/ComponentName;
    invoke-direct {v6, v4, v0}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .restart local v6    # "returnComponent":Landroid/content/ComponentName;
    :cond_54
    :goto_54
    move-object v7, v6

    .line 13250
    goto :goto_8

    .line 13240
    :cond_56
    const/4 v7, 0x1

    aget-object v0, v3, v7
    :try_end_59
    .catch Ljava/lang/NullPointerException; {:try_start_1d .. :try_end_59} :catch_5a

    goto :goto_4f

    .line 13245
    .end local v6    # "returnComponent":Landroid/content/ComponentName;
    :catch_5a
    move-exception v2

    .line 13246
    .local v2, "npe":Ljava/lang/NullPointerException;
    const-string v7, "WindowManager"

    const-string v8, "package and class name\'s parsing error"

    invoke-static {v7, v8}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 13247
    invoke-virtual {v2}, Ljava/lang/NullPointerException;->printStackTrace()V

    .line 13248
    const/4 v6, 0x0

    .restart local v6    # "returnComponent":Landroid/content/ComponentName;
    goto :goto_54
.end method

.method private createScreenFreezeSurface()V
    .registers 12

    .prologue
    .line 6262
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    if-eqz v0, :cond_c

    .line 6263
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    invoke-virtual {v0}, Lcom/android/server/wm/ScreenFreezeSurface;->kill()V

    .line 6264
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    .line 6267
    :cond_c
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    .line 6268
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v9

    .line 6272
    .local v9, "displayInfo":Landroid/view/DisplayInfo;
    iget v0, v9, Landroid/view/DisplayInfo;->rotation:I

    const/4 v1, 0x1

    if-eq v0, v1, :cond_1e

    iget v0, v9, Landroid/view/DisplayInfo;->rotation:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_49

    .line 6274
    :cond_1e
    iget v5, v9, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 6275
    .local v5, "width":I
    iget v6, v9, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 6281
    .local v6, "height":I
    :goto_22
    new-instance v0, Lcom/android/server/wm/ScreenFreezeSurface;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    const v2, 0x1e8481

    const/4 v3, 0x0

    const/4 v4, 0x0

    iget v7, v9, Landroid/view/DisplayInfo;->layerStack:I

    invoke-direct/range {v0 .. v7}, Lcom/android/server/wm/ScreenFreezeSurface;-><init>(Landroid/view/SurfaceSession;IIIIII)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    .line 6282
    iget v0, v9, Landroid/view/DisplayInfo;->rotation:I

    packed-switch v0, :pswitch_data_a4

    .line 6300
    :goto_37
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    invoke-virtual {v0}, Lcom/android/server/wm/ScreenFreezeSurface;->show()V

    .line 6305
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$5;

    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$5;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    const-wide/16 v2, 0x1f4

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->postDelayed(Ljava/lang/Runnable;J)Z

    .line 6322
    .end local v5    # "width":I
    .end local v6    # "height":I
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v9    # "displayInfo":Landroid/view/DisplayInfo;
    :goto_48
    return-void

    .line 6277
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v9    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_49
    iget v5, v9, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 6278
    .restart local v5    # "width":I
    iget v6, v9, Landroid/view/DisplayInfo;->logicalHeight:I

    .restart local v6    # "height":I
    goto :goto_22

    .line 6284
    :pswitch_4e
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ScreenFreezeSurface;->setPosition(FF)V

    .line 6285
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    const/high16 v1, 0x3f800000

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/high16 v4, 0x3f800000

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/wm/ScreenFreezeSurface;->setMatrix(FFFF)V
    :try_end_60
    .catch Landroid/view/SurfaceControl$OutOfResourcesException; {:try_start_0 .. :try_end_60} :catch_61

    goto :goto_37

    .line 6319
    .end local v5    # "width":I
    .end local v6    # "height":I
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v9    # "displayInfo":Landroid/view/DisplayInfo;
    :catch_61
    move-exception v10

    .line 6320
    .local v10, "e":Landroid/view/SurfaceControl$OutOfResourcesException;
    const-string v0, "WindowManager"

    const-string v1, "Unable to allocate screen freeze surface"

    invoke-static {v0, v1, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_48

    .line 6288
    .end local v10    # "e":Landroid/view/SurfaceControl$OutOfResourcesException;
    .restart local v5    # "width":I
    .restart local v6    # "height":I
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v9    # "displayInfo":Landroid/view/DisplayInfo;
    :pswitch_6a
    :try_start_6a
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    const/4 v1, 0x0

    int-to-float v2, v5

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ScreenFreezeSurface;->setPosition(FF)V

    .line 6289
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    const/4 v1, 0x0

    const/high16 v2, -0x40800000

    const/high16 v3, 0x3f800000

    const/4 v4, 0x0

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/wm/ScreenFreezeSurface;->setMatrix(FFFF)V

    goto :goto_37

    .line 6292
    :pswitch_7d
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    int-to-float v1, v5

    int-to-float v2, v6

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ScreenFreezeSurface;->setPosition(FF)V

    .line 6293
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    const/high16 v1, -0x40800000

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/high16 v4, -0x40800000

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/wm/ScreenFreezeSurface;->setMatrix(FFFF)V

    goto :goto_37

    .line 6296
    :pswitch_90
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    int-to-float v1, v6

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/ScreenFreezeSurface;->setPosition(FF)V

    .line 6297
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    const/4 v1, 0x0

    const/high16 v2, 0x3f800000

    const/high16 v3, -0x40800000

    const/4 v4, 0x0

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/wm/ScreenFreezeSurface;->setMatrix(FFFF)V
    :try_end_a2
    .catch Landroid/view/SurfaceControl$OutOfResourcesException; {:try_start_6a .. :try_end_a2} :catch_61

    goto :goto_37

    .line 6282
    nop

    :pswitch_data_a4
    .packed-switch 0x0
        :pswitch_4e
        :pswitch_6a
        :pswitch_7d
        :pswitch_90
    .end packed-switch
.end method

.method private createTask(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;
    .registers 12
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "userId"    # I
    .param p4, "atoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    const/4 v6, 0x1

    .line 4282
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v2, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 4283
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v0, :cond_24

    .line 4284
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "addAppToken: invalid stackId="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 4286
    :cond_24
    const/16 v2, 0x7919

    const/4 v3, 0x2

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v3, v4

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    aput-object v4, v3, v6

    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4287
    new-instance v1, Lcom/android/server/wm/Task;

    invoke-direct {v1, p4, v0, p3}, Lcom/android/server/wm/Task;-><init>(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/TaskStack;I)V

    .line 4288
    .local v1, "task":Lcom/android/server/wm/Task;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v2, p1, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 4289
    invoke-virtual {v0, v1, v6}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;Z)Z

    .line 4290
    return-object v1
.end method

.method private displayReady(I)V
    .registers 12
    .param p1, "displayId"    # I

    .prologue
    .line 8672
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 8673
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 8674
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_4d

    .line 8675
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/WindowAnimator;->addDisplayLocked(I)V

    .line 8676
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v5
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_52

    .line 8678
    :try_start_11
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v1

    .line 8679
    .local v1, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerService:Lcom/android/server/display/DisplayManagerService;

    invoke-virtual {v3, p1}, Lcom/android/server/display/DisplayManagerService;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    move-result-object v2

    .line 8680
    .local v2, "newDisplayInfo":Landroid/view/DisplayInfo;
    if-eqz v2, :cond_20

    .line 8681
    invoke-virtual {v1, v2}, Landroid/view/DisplayInfo;->copyFrom(Landroid/view/DisplayInfo;)V

    .line 8683
    :cond_20
    iget v3, v1, Landroid/view/DisplayInfo;->logicalWidth:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    .line 8684
    iget v3, v1, Landroid/view/DisplayInfo;->logicalHeight:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    .line 8685
    iget v3, v1, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    .line 8686
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 8687
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 8688
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    iput v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 8689
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayRect:Landroid/graphics/Rect;

    const/4 v6, 0x0

    const/4 v7, 0x0

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iget v9, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    invoke-virtual {v3, v6, v7, v8, v9}, Landroid/graphics/Rect;->set(IIII)V

    .line 8692
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    if-eqz v3, :cond_4c

    .line 8693
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    invoke-virtual {v3}, Lcom/android/server/wm/StackTapPointerEventListener;->init()V

    .line 8696
    :cond_4c
    monitor-exit v5
    :try_end_4d
    .catchall {:try_start_11 .. :try_end_4d} :catchall_4f

    .line 8698
    .end local v1    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v2    # "newDisplayInfo":Landroid/view/DisplayInfo;
    :cond_4d
    :try_start_4d
    monitor-exit v4
    :try_end_4e
    .catchall {:try_start_4d .. :try_end_4e} :catchall_52

    .line 8699
    return-void

    .line 8696
    :catchall_4f
    move-exception v3

    :try_start_50
    monitor-exit v5
    :try_end_51
    .catchall {:try_start_50 .. :try_end_51} :catchall_4f

    :try_start_51
    throw v3

    .line 8698
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_52
    move-exception v3

    monitor-exit v4
    :try_end_54
    .catchall {:try_start_51 .. :try_end_54} :catchall_52

    throw v3
.end method

.method private findAppWindowInsertionPointLocked(Lcom/android/server/wm/AppWindowToken;)I
    .registers 24
    .param p1, "target"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    .line 5768
    move-object/from16 v0, p1

    iget v11, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    .line 5769
    .local v11, "taskId":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    .line 5770
    .local v9, "targetTask":Lcom/android/server/wm/Task;
    if-nez v9, :cond_3f

    .line 5771
    const-string v19, "WindowManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "findAppWindowInsertionPointLocked: no Task for "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    const-string v21, " taskId="

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    invoke-virtual {v0, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5773
    const/16 v19, 0x0

    .line 5835
    :goto_3e
    return v19

    .line 5775
    :cond_3f
    invoke-virtual {v9}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    .line 5776
    .local v4, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v4, :cond_64

    .line 5777
    const-string v19, "WindowManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "findAppWindowInsertionPointLocked: no DisplayContent for "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5778
    const/16 v19, 0x0

    goto :goto_3e

    .line 5780
    :cond_64
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v17

    .line 5781
    .local v17, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 5783
    .local v2, "NW":I
    const/4 v5, 0x0

    .line 5784
    .local v5, "found":Z
    invoke-virtual {v4}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v13

    .line 5785
    .local v13, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v19

    add-int/lit8 v12, v19, -0x1

    .local v12, "taskNdx":I
    :goto_77
    if-ltz v12, :cond_122

    .line 5786
    invoke-virtual {v13, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/Task;

    .line 5787
    .local v10, "task":Lcom/android/server/wm/Task;
    if-nez v5, :cond_8c

    iget v0, v10, Lcom/android/server/wm/Task;->taskId:I

    move/from16 v19, v0

    move/from16 v0, v19

    if-eq v0, v11, :cond_8c

    .line 5785
    :cond_89
    add-int/lit8 v12, v12, -0x1

    goto :goto_77

    .line 5790
    :cond_8c
    iget-object v15, v10, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 5791
    .local v15, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v15}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v19

    add-int/lit8 v14, v19, -0x1

    .local v14, "tokenNdx":I
    :goto_94
    if-ltz v14, :cond_89

    .line 5792
    invoke-virtual {v15, v14}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/AppWindowToken;

    .line 5793
    .local v18, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v5, :cond_a5

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_a5

    .line 5794
    const/4 v5, 0x1

    .line 5796
    :cond_a5
    if-eqz v5, :cond_af

    .line 5800
    move-object/from16 v0, v18

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    move/from16 v19, v0

    if-eqz v19, :cond_b2

    .line 5791
    :cond_af
    add-int/lit8 v14, v14, -0x1

    goto :goto_94

    .line 5804
    :cond_b2
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v19

    add-int/lit8 v6, v19, -0x1

    .local v6, "i":I
    :goto_be
    if-ltz v6, :cond_af

    .line 5805
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    .line 5806
    .local v16, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v19

    add-int/lit8 v7, v19, -0x1

    .local v7, "j":I
    :goto_da
    if-ltz v7, :cond_108

    .line 5807
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 5808
    .local v3, "cwin":Lcom/android/server/wm/WindowState;
    iget v0, v3, Lcom/android/server/wm/WindowState;->mSubLayer:I

    move/from16 v19, v0

    if-ltz v19, :cond_105

    .line 5809
    add-int/lit8 v8, v2, -0x1

    .local v8, "pos":I
    :goto_f2
    if-ltz v8, :cond_105

    .line 5810
    move-object/from16 v0, v17

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v19

    move-object/from16 v0, v19

    if-ne v0, v3, :cond_102

    .line 5813
    add-int/lit8 v19, v8, 0x1

    goto/16 :goto_3e

    .line 5809
    :cond_102
    add-int/lit8 v8, v8, -0x1

    goto :goto_f2

    .line 5806
    .end local v8    # "pos":I
    :cond_105
    add-int/lit8 v7, v7, -0x1

    goto :goto_da

    .line 5818
    .end local v3    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_108
    add-int/lit8 v8, v2, -0x1

    .restart local v8    # "pos":I
    :goto_10a
    if-ltz v8, :cond_11f

    .line 5819
    move-object/from16 v0, v17

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, v16

    if-ne v0, v1, :cond_11c

    .line 5821
    add-int/lit8 v19, v8, 0x1

    goto/16 :goto_3e

    .line 5818
    :cond_11c
    add-int/lit8 v8, v8, -0x1

    goto :goto_10a

    .line 5804
    :cond_11f
    add-int/lit8 v6, v6, -0x1

    goto :goto_be

    .line 5829
    .end local v6    # "i":I
    .end local v7    # "j":I
    .end local v8    # "pos":I
    .end local v10    # "task":Lcom/android/server/wm/Task;
    .end local v14    # "tokenNdx":I
    .end local v15    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v16    # "win":Lcom/android/server/wm/WindowState;
    .end local v18    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_122
    add-int/lit8 v8, v2, -0x1

    .restart local v8    # "pos":I
    :goto_124
    if-ltz v8, :cond_13d

    .line 5830
    move-object/from16 v0, v17

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v19

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    move/from16 v19, v0

    if-eqz v19, :cond_13a

    .line 5832
    add-int/lit8 v19, v8, 0x1

    goto/16 :goto_3e

    .line 5829
    :cond_13a
    add-int/lit8 v8, v8, -0x1

    goto :goto_124

    .line 5835
    :cond_13d
    const/16 v19, 0x0

    goto/16 :goto_3e
.end method

.method private findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;
    .registers 14
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v10, 0x0

    .line 11709
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 11710
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    add-int/lit8 v0, v9, -0x1

    .local v0, "i":I
    :goto_b
    if-ltz v0, :cond_7d

    .line 11711
    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 11719
    .local v6, "win":Lcom/android/server/wm/WindowState;
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 11722
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v8, :cond_22

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-nez v9, :cond_1f

    iget-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    if-eqz v9, :cond_22

    .line 11710
    :cond_1f
    add-int/lit8 v0, v0, -0x1

    goto :goto_b

    .line 11728
    :cond_22
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v9

    if-eqz v9, :cond_1f

    .line 11734
    if-eqz v8, :cond_5b

    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v9, v9, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v11, 0x3

    if-eq v9, v11, :cond_5b

    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_5b

    .line 11736
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v2

    .line 11737
    .local v2, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v9

    add-int/lit8 v1, v9, -0x1

    .local v1, "taskNdx":I
    :goto_3f
    if-ltz v1, :cond_5b

    .line 11738
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v5, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 11739
    .local v5, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v9

    add-int/lit8 v4, v9, -0x1

    .line 11740
    .local v4, "tokenNdx":I
    :goto_4f
    if-ltz v4, :cond_59

    .line 11741
    invoke-virtual {v5, v4}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 11742
    .local v3, "token":Lcom/android/server/wm/AppWindowToken;
    if-ne v8, v3, :cond_71

    .line 11752
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_59
    if-ltz v4, :cond_7a

    .line 11761
    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5b
    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v9, :cond_70

    iget-object v9, v6, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eq v9, v11, :cond_70

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v9

    invoke-virtual {v9}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v9

    const/4 v11, 0x2

    if-eq v9, v11, :cond_1f

    .line 11780
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_70
    :goto_70
    return-object v6

    .line 11745
    .restart local v1    # "taskNdx":I
    .restart local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .restart local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "tokenNdx":I
    .restart local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .restart local v6    # "win":Lcom/android/server/wm/WindowState;
    .restart local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_71
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-ne v9, v3, :cond_77

    move-object v6, v10

    .line 11749
    goto :goto_70

    .line 11740
    :cond_77
    add-int/lit8 v4, v4, -0x1

    goto :goto_4f

    .line 11737
    .end local v3    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_7a
    add-int/lit8 v1, v1, -0x1

    goto :goto_3f

    .end local v1    # "taskNdx":I
    .end local v2    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v4    # "tokenNdx":I
    .end local v5    # "tokens":Lcom/android/server/wm/AppTokenList;
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_7d
    move-object v6, v10

    .line 11780
    goto :goto_70
.end method

.method private findIdxBasedOnAppTokens(Lcom/android/server/wm/WindowState;)I
    .registers 7
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1259
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 1260
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "j":I
    :goto_a
    if-ltz v0, :cond_1c

    .line 1261
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1262
    .local v1, "wentry":Lcom/android/server/wm/WindowState;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v4, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v3, v4, :cond_19

    .line 1266
    .end local v0    # "j":I
    .end local v1    # "wentry":Lcom/android/server/wm/WindowState;
    :goto_18
    return v0

    .line 1260
    .restart local v0    # "j":I
    .restart local v1    # "wentry":Lcom/android/server/wm/WindowState;
    :cond_19
    add-int/lit8 v0, v0, -0x1

    goto :goto_a

    .line 1266
    .end local v1    # "wentry":Lcom/android/server/wm/WindowState;
    :cond_1c
    const/4 v0, -0x1

    goto :goto_18
.end method

.method private findTargetWindow(FFLandroid/os/IBinder;)Lcom/android/server/wm/WindowState;
    .registers 5
    .param p1, "xf"    # F
    .param p2, "yf"    # F
    .param p3, "topToken"    # Landroid/os/IBinder;

    .prologue
    .line 1121
    const/4 v0, 0x0

    invoke-direct {p0, p1, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->findTargetWindow(FFLandroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method

.method private findTargetWindow(FFLandroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .registers 17
    .param p1, "xf"    # F
    .param p2, "yf"    # F
    .param p3, "topToken"    # Landroid/os/IBinder;
    .param p4, "exceptInternnalWindow"    # Z

    .prologue
    .line 1126
    const/4 v6, 0x0

    .line 1127
    .local v6, "touchedWin":Lcom/android/server/wm/WindowState;
    float-to-int v8, p1

    .line 1128
    .local v8, "x":I
    float-to-int v9, p2

    .line 1129
    .local v9, "y":I
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 1130
    .local v7, "windows":Lcom/android/server/wm/WindowList;
    new-instance v4, Landroid/graphics/Rect;

    invoke-direct {v4}, Landroid/graphics/Rect;-><init>()V

    .line 1131
    .local v4, "tmpRect":Landroid/graphics/Rect;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    add-int/lit8 v3, v10, -0x1

    .local v3, "i":I
    :goto_16
    if-ltz v3, :cond_b7

    .line 1132
    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 1133
    .local v0, "child":Lcom/android/server/wm/WindowState;
    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v10, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 1134
    .local v2, "flags":I
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v10

    if-nez v10, :cond_2b

    .line 1131
    :cond_28
    add-int/lit8 v3, v3, -0x1

    goto :goto_16

    .line 1138
    :cond_2b
    and-int/lit8 v10, v2, 0x10

    if-nez v10, :cond_28

    .line 1144
    if-eqz p4, :cond_36

    const/high16 v10, 0x10000000

    and-int/2addr v10, v2

    if-nez v10, :cond_28

    .line 1152
    :cond_36
    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x7eb

    if-eq v10, v11, :cond_28

    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v10, v10, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v11, 0x8ca

    if-eq v10, v11, :cond_28

    .line 1158
    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v4, v10}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 1159
    iget v10, v0, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    const/4 v11, 0x1

    if-ne v10, v11, :cond_b8

    .line 1164
    iget v10, v4, Landroid/graphics/Rect;->left:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->left:I

    add-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->left:I

    .line 1165
    iget v10, v4, Landroid/graphics/Rect;->top:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->top:I

    add-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->top:I

    .line 1166
    iget v10, v4, Landroid/graphics/Rect;->right:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->right:I

    sub-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->right:I

    .line 1167
    iget v10, v4, Landroid/graphics/Rect;->bottom:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->bottom:I

    sub-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->bottom:I

    .line 1188
    :cond_74
    :goto_74
    and-int/lit8 v5, v2, 0x28

    .line 1192
    .local v5, "touchFlags":I
    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v10, :cond_96

    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    if-eqz v10, :cond_96

    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v10}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v10

    const/4 v11, 0x2

    if-ne v10, v11, :cond_96

    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v10, v10, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v11, 0x4

    invoke-virtual {v10, v11}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v10

    if-nez v10, :cond_28

    .line 1197
    :cond_96
    invoke-virtual {v4, v8, v9}, Landroid/graphics/Rect;->contains(II)Z

    move-result v1

    .line 1199
    .local v1, "contains":Z
    if-nez v1, :cond_a8

    if-nez v5, :cond_a8

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v10

    invoke-virtual {v10}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v10

    if-nez v10, :cond_28

    .line 1205
    :cond_a8
    if-nez v1, :cond_ac

    if-nez v5, :cond_28

    .line 1207
    :cond_ac
    move-object v6, v0

    .line 1208
    if-eqz v6, :cond_b7

    iget-object v10, v6, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v10}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v10

    if-eq v10, p3, :cond_28

    .line 1213
    .end local v0    # "child":Lcom/android/server/wm/WindowState;
    .end local v1    # "contains":Z
    .end local v2    # "flags":I
    .end local v5    # "touchFlags":I
    :cond_b7
    return-object v6

    .line 1168
    .restart local v0    # "child":Lcom/android/server/wm/WindowState;
    .restart local v2    # "flags":I
    :cond_b8
    iget v10, v0, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    const/4 v11, 0x2

    if-ne v10, v11, :cond_e2

    .line 1173
    iget v10, v4, Landroid/graphics/Rect;->left:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->left:I

    add-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->left:I

    .line 1174
    iget v10, v4, Landroid/graphics/Rect;->top:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->top:I

    add-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->top:I

    .line 1175
    iget v10, v4, Landroid/graphics/Rect;->right:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->right:I

    sub-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->right:I

    .line 1176
    iget v10, v4, Landroid/graphics/Rect;->bottom:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->bottom:I

    sub-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->bottom:I

    goto :goto_74

    .line 1177
    :cond_e2
    iget v10, v0, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    const/4 v11, 0x3

    if-ne v10, v11, :cond_74

    .line 1182
    iget v10, v4, Landroid/graphics/Rect;->left:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->left:I

    add-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->left:I

    .line 1183
    iget v10, v4, Landroid/graphics/Rect;->top:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->top:I

    add-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->top:I

    .line 1184
    iget v10, v4, Landroid/graphics/Rect;->right:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->right:I

    sub-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->right:I

    .line 1185
    iget v10, v4, Landroid/graphics/Rect;->bottom:I

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v11, v11, Landroid/graphics/Rect;->bottom:I

    sub-int/2addr v10, v11

    iput v10, v4, Landroid/graphics/Rect;->bottom:I

    goto/16 :goto_74
.end method

.method private findWindow(I)Lcom/android/server/wm/WindowState;
    .registers 10
    .param p1, "hashCode"    # I

    .prologue
    .line 8095
    const/4 v6, -0x1

    if-ne p1, v6, :cond_8

    .line 8097
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 8114
    :goto_7
    return-object v3

    .line 8100
    :cond_8
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 8101
    :try_start_b
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 8102
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_12
    if-ge v0, v1, :cond_3e

    .line 8103
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 8104
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 8105
    .local v2, "numWindows":I
    const/4 v4, 0x0

    .local v4, "winNdx":I
    :goto_25
    if-ge v4, v2, :cond_3b

    .line 8106
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 8107
    .local v3, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v6

    if-ne v6, p1, :cond_38

    .line 8108
    monitor-exit v7

    goto :goto_7

    .line 8112
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    .end local v2    # "numWindows":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_35
    move-exception v6

    monitor-exit v7
    :try_end_37
    .catchall {:try_start_b .. :try_end_37} :catchall_35

    throw v6

    .line 8105
    .restart local v0    # "displayNdx":I
    .restart local v1    # "numDisplays":I
    .restart local v2    # "numWindows":I
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    .restart local v4    # "winNdx":I
    .restart local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_38
    add-int/lit8 v4, v4, 0x1

    goto :goto_25

    .line 8102
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_3b
    add-int/lit8 v0, v0, 0x1

    goto :goto_12

    .line 8112
    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3e
    :try_start_3e
    monitor-exit v7
    :try_end_3f
    .catchall {:try_start_3e .. :try_end_3f} :catchall_35

    .line 8114
    const/4 v3, 0x0

    goto :goto_7
.end method

.method private finishUpdateFocusedWindowAfterAssignLayersLocked(Z)V
    .registers 4
    .param p1, "updateInputWindows"    # Z

    .prologue
    .line 11688
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/InputMonitor;->setInputFocusLw(Lcom/android/server/wm/WindowState;Z)V

    .line 11689
    return-void
.end method

.method static fixScale(F)F
    .registers 2
    .param p0, "scale"    # F

    .prologue
    .line 6550
    const/4 v0, 0x0

    cmpg-float v0, p0, v0

    if-gez v0, :cond_b

    const/4 p0, 0x0

    .line 6552
    :cond_6
    :goto_6
    invoke-static {p0}, Ljava/lang/Math;->abs(F)F

    move-result v0

    return v0

    .line 6551
    :cond_b
    const/high16 v0, 0x41a00000

    cmpl-float v0, p0, v0

    if-lez v0, :cond_6

    const/high16 p0, 0x41a00000

    goto :goto_6
.end method

.method private getFocusedWindow()Lcom/android/server/wm/WindowState;
    .registers 3

    .prologue
    .line 8564
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8565
    :try_start_3
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v0

    monitor-exit v1

    return-object v0

    .line 8566
    :catchall_9
    move-exception v0

    monitor-exit v1
    :try_end_b
    .catchall {:try_start_3 .. :try_end_b} :catchall_9

    throw v0
.end method

.method private getFocusedWindowLocked()Lcom/android/server/wm/WindowState;
    .registers 2

    .prologue
    .line 8570
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    return-object v0
.end method

.method static getPropertyInt([Ljava/lang/String;IIILandroid/util/DisplayMetrics;)I
    .registers 8
    .param p0, "tokens"    # [Ljava/lang/String;
    .param p1, "index"    # I
    .param p2, "defUnits"    # I
    .param p3, "defDps"    # I
    .param p4, "dm"    # Landroid/util/DisplayMetrics;

    .prologue
    .line 11935
    array-length v2, p0

    if-ge p1, v2, :cond_13

    .line 11936
    aget-object v0, p0, p1

    .line 11937
    .local v0, "str":Ljava/lang/String;
    if-eqz v0, :cond_13

    invoke-virtual {v0}, Ljava/lang/String;->length()I

    move-result v2

    if-lez v2, :cond_13

    .line 11939
    :try_start_d
    invoke-static {v0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_10
    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_10} :catch_12

    move-result v1

    .line 11949
    .end local v0    # "str":Ljava/lang/String;
    :goto_11
    return v1

    .line 11941
    .restart local v0    # "str":Ljava/lang/String;
    :catch_12
    move-exception v2

    .line 11945
    .end local v0    # "str":Ljava/lang/String;
    :cond_13
    if-nez p2, :cond_17

    move v1, p3

    .line 11946
    goto :goto_11

    .line 11948
    :cond_17
    int-to-float v2, p3

    invoke-static {p2, v2, p4}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F

    move-result v2

    float-to-int v1, v2

    .line 11949
    .local v1, "val":I
    goto :goto_11
.end method

.method private handleAnimatingStoppedAndTransitionLocked()I
    .registers 12

    .prologue
    const/4 v10, 0x1

    .line 10456
    const/4 v0, 0x0

    .line 10458
    .local v0, "changes":I
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v9}, Lcom/android/server/wm/AppTransition;->setIdle()V

    .line 10460
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 10461
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v5

    .line 10462
    .local v5, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v2

    .line 10463
    .local v2, "numTasks":I
    const/4 v4, 0x0

    .local v4, "taskNdx":I
    :goto_14
    if-ge v4, v2, :cond_34

    .line 10464
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v7, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 10465
    .local v7, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v7}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v3

    .line 10466
    .local v3, "numTokens":I
    const/4 v6, 0x0

    .local v6, "tokenNdx":I
    :goto_23
    if-ge v6, v3, :cond_31

    .line 10467
    invoke-virtual {v7, v6}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/AppWindowToken;

    .line 10468
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    const/4 v9, 0x0

    iput-boolean v9, v8, Lcom/android/server/wm/AppWindowToken;->sendingToBottom:Z

    .line 10466
    add-int/lit8 v6, v6, 0x1

    goto :goto_23

    .line 10463
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_31
    add-int/lit8 v4, v4, 0x1

    goto :goto_14

    .line 10471
    .end local v3    # "numTokens":I
    .end local v6    # "tokenNdx":I
    .end local v7    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_34
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked()V

    .line 10474
    invoke-virtual {p0, v10}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    .line 10477
    or-int/lit8 v0, v0, 0x1

    .line 10480
    invoke-virtual {p0, v10}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 10481
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v10, v9, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 10485
    iput-boolean v10, p0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    .line 10487
    return v0
.end method

.method private handleDisplayAddedLocked(I)V
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 12758
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v1, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    move-result-object v0

    .line 12759
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_e

    .line 12760
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->createDisplayContentLocked(Landroid/view/Display;)V

    .line 12761
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    .line 12763
    :cond_e
    return-void
.end method

.method private handleDisplayChangedLocked(I)V
    .registers 3
    .param p1, "displayId"    # I

    .prologue
    .line 12793
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 12794
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_9

    .line 12795
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->updateDisplayInfo()V

    .line 12797
    :cond_9
    return-void
.end method

.method private handleDisplayRemovedLocked(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 12771
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 12772
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_31

    .line 12773
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->delete(I)V

    .line 12774
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->close()V

    .line 12775
    if-nez p1, :cond_15

    .line 12776
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    invoke-virtual {p0, v3}, Lcom/android/server/wm/WindowManagerService;->unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 12778
    :cond_15
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 12779
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    :goto_19
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_31

    .line 12780
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 12781
    .local v1, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    invoke-virtual {p0, v3, v1}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowState;)V

    goto :goto_19

    .line 12784
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    .end local v2    # "windows":Lcom/android/server/wm/WindowList;
    :cond_31
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/WindowAnimator;->removeDisplayLocked(I)V

    .line 12785
    return-void
.end method

.method private handleFlagDimBehind(Lcom/android/server/wm/WindowState;II)V
    .registers 9
    .param p1, "w"    # Lcom/android/server/wm/WindowState;
    .param p2, "innerDw"    # I
    .param p3, "innerDh"    # I

    .prologue
    .line 10667
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 10668
    .local v0, "attrs":Landroid/view/WindowManager$LayoutParams;
    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    and-int/lit8 v3, v3, 0x2

    if-eqz v3, :cond_2d

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v3

    if-eqz v3, :cond_2d

    iget-boolean v3, p1, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-nez v3, :cond_2d

    .line 10671
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 10673
    .local v2, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_2e

    .line 10674
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v1

    .line 10681
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    :goto_1c
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v3

    const/4 v4, 0x4

    invoke-virtual {v3, v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v3

    if-eqz v3, :cond_35

    .line 10683
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->resetDimmingTag()V

    .line 10684
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->stopDimmingIfNeeded()V

    .line 10700
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_2d
    :goto_2d
    return-void

    .line 10676
    .restart local v2    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_2e
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getHomeStack()Lcom/android/server/wm/TaskStack;

    move-result-object v1

    .restart local v1    # "stack":Lcom/android/server/wm/TaskStack;
    goto :goto_1c

    .line 10685
    :cond_35
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v3

    invoke-virtual {v3}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v3

    const/4 v4, 0x2

    if-ne v3, v4, :cond_54

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v3

    const/16 v4, 0x800

    invoke-virtual {v3, v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v3

    if-eqz v3, :cond_54

    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v3

    if-nez v3, :cond_2d

    .line 10691
    :cond_54
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->setDimmingTag()V

    .line 10692
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskStack;->isDimming(Lcom/android/server/wm/WindowStateAnimator;)Z

    move-result v3

    if-nez v3, :cond_2d

    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mShouldIgnoreDimEffect:Z

    if-nez v3, :cond_2d

    .line 10694
    invoke-virtual {v1, v2}, Lcom/android/server/wm/TaskStack;->startDimmingIfNeeded(Lcom/android/server/wm/WindowStateAnimator;)V

    goto :goto_2d
.end method

.method private handleNotObscuredLocked(Lcom/android/server/wm/WindowState;JII)V
    .registers 15
    .param p1, "w"    # Lcom/android/server/wm/WindowState;
    .param p2, "currentTime"    # J
    .param p4, "innerDw"    # I
    .param p5, "innerDh"    # I

    .prologue
    .line 10579
    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 10580
    .local v1, "attrs":Landroid/view/WindowManager$LayoutParams;
    iget v0, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 10581
    .local v0, "attrFlags":I
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v2

    .line 10582
    .local v2, "canBeSeen":Z
    if-eqz v2, :cond_146

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isOpaqueDrawn()Z

    move-result v5

    if-eqz v5, :cond_146

    const/4 v3, 0x1

    .line 10584
    .local v3, "opaqueDrawn":Z
    :goto_11
    if-eqz v3, :cond_1f

    invoke-virtual {p1, p4, p5}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    move-result v5

    if-eqz v5, :cond_1f

    .line 10588
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v5, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1602(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 10591
    :cond_1f
    iget-boolean v5, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v5, :cond_145

    .line 10592
    and-int/lit16 v5, v0, 0x80

    if-eqz v5, :cond_2e

    .line 10593
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mHoldScreen:Lcom/android/server/wm/Session;
    invoke-static {v5, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1702(Lcom/android/server/wm/WindowManagerService$LayoutFields;Lcom/android/server/wm/Session;)Lcom/android/server/wm/Session;

    .line 10596
    :cond_2e
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v5

    if-eqz v5, :cond_111

    .line 10598
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1800(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v5

    if-nez v5, :cond_59

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    const/4 v6, 0x0

    cmpl-float v5, v5, v6

    if-ltz v5, :cond_59

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1900(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v5

    const/4 v6, 0x0

    cmpg-float v5, v5, v6

    if-gez v5, :cond_59

    .line 10600
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->screenBrightness:F

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v5, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1902(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    .line 10602
    :cond_59
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1800(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v5

    if-nez v5, :cond_7e

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->buttonBrightness:F

    const/4 v6, 0x0

    cmpl-float v5, v5, v6

    if-ltz v5, :cond_7e

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2000(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v5

    const/4 v6, 0x0

    cmpg-float v5, v5, v6

    if-gez v5, :cond_7e

    .line 10604
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->buttonBrightness:F

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v5, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2002(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    .line 10606
    :cond_7e
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1800(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v5

    if-nez v5, :cond_a5

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v5, v5, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    const-wide/16 v7, 0x0

    cmp-long v5, v5, v7

    if-ltz v5, :cond_a5

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUserActivityTimeout:J
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2100(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v5

    const-wide/16 v7, 0x0

    cmp-long v5, v5, v7

    if-gez v5, :cond_a5

    .line 10608
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v6, v6, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUserActivityTimeout:J
    invoke-static {v5, v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2102(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 10611
    :cond_a5
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1800(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v5

    if-nez v5, :cond_cc

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v5, v5, Landroid/view/WindowManager$LayoutParams;->screenDimDuration:J

    const-wide/16 v7, 0x0

    cmp-long v5, v5, v7

    if-ltz v5, :cond_cc

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenDimDuration:J
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2200(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v5

    const-wide/16 v7, 0x0

    cmp-long v5, v5, v7

    if-gez v5, :cond_cc

    .line 10613
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v6, v6, Landroid/view/WindowManager$LayoutParams;->screenDimDuration:J

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenDimDuration:J
    invoke-static {v5, v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2202(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 10617
    :cond_cc
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1800(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v5

    if-nez v5, :cond_f3

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v5, v5, Landroid/view/WindowManager$LayoutParams;->buttonLightTimeout:J

    const-wide/16 v7, 0x0

    cmp-long v5, v5, v7

    if-ltz v5, :cond_f3

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonLightTimeout:J
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2300(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v5

    const-wide/16 v7, 0x0

    cmp-long v5, v5, v7

    if-gez v5, :cond_f3

    .line 10619
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v6, v6, Landroid/view/WindowManager$LayoutParams;->buttonLightTimeout:J

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonLightTimeout:J
    invoke-static {v5, v6, v7}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2302(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 10627
    :cond_f3
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1800(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v5

    if-nez v5, :cond_111

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-wide v5, v5, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    const-wide/16 v7, 0x146a

    cmp-long v5, v5, v7

    if-nez v5, :cond_111

    .line 10628
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    const-wide/16 v6, -0x1

    iput-wide v6, v5, Landroid/view/WindowManager$LayoutParams;->userActivityTimeout:J

    .line 10629
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    const-wide/16 v6, -0x1

    iput-wide v6, v5, Landroid/view/WindowManager$LayoutParams;->screenDimDuration:J

    .line 10636
    :cond_111
    iget v4, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    .line 10637
    .local v4, "type":I
    if-eqz v2, :cond_12b

    const/16 v5, 0x7d8

    if-eq v4, v5, :cond_125

    const/16 v5, 0x7ec

    if-eq v4, v5, :cond_125

    const/16 v5, 0x7d4

    if-eq v4, v5, :cond_125

    const/16 v5, 0x7da

    if-ne v4, v5, :cond_12b

    .line 10642
    :cond_125
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v5, v6}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1802(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 10645
    :cond_12b
    if-eqz v2, :cond_145

    .line 10648
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    iget-boolean v5, v5, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    if-eqz v5, :cond_149

    .line 10653
    const/16 v5, 0x7e7

    if-eq v4, v5, :cond_13b

    const/16 v5, 0x7d4

    if-ne v4, v5, :cond_140

    .line 10654
    :cond_13b
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x1

    iput-boolean v6, v5, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    .line 10656
    :cond_140
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x1

    iput-boolean v6, v5, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    .line 10664
    .end local v4    # "type":I
    :cond_145
    :goto_145
    return-void

    .line 10582
    .end local v3    # "opaqueDrawn":Z
    :cond_146
    const/4 v3, 0x0

    goto/16 :goto_11

    .line 10657
    .restart local v3    # "opaqueDrawn":Z
    .restart local v4    # "type":I
    :cond_149
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v5, v5, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    if-eqz v5, :cond_15b

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v5}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1600(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v5

    if-eqz v5, :cond_145

    const/16 v5, 0x7d9

    if-ne v4, v5, :cond_145

    .line 10660
    :cond_15b
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v6, 0x1

    iput-boolean v6, v5, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    goto :goto_145
.end method

.method private indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I
    .registers 6
    .param p1, "targetWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "windows"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 1294
    invoke-virtual {p2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_6
    if-ltz v0, :cond_24

    .line 1295
    invoke-virtual {p2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1296
    .local v1, "w":Lcom/android/server/wm/WindowState;
    if-ne v1, p1, :cond_11

    .line 1305
    .end local v0    # "i":I
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_10
    :goto_10
    return v0

    .line 1299
    .restart local v0    # "i":I
    .restart local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_11
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_21

    .line 1300
    iget-object v2, v1, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->indexOfWinInWindowList(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowList;)I

    move-result v2

    if-gez v2, :cond_10

    .line 1294
    :cond_21
    add-int/lit8 v0, v0, -0x1

    goto :goto_6

    .line 1305
    .end local v1    # "w":Lcom/android/server/wm/WindowState;
    :cond_24
    const/4 v0, -0x1

    goto :goto_10
.end method

.method private initPolicy(Landroid/os/Handler;)V
    .registers 5
    .param p1, "uiHandler"    # Landroid/os/Handler;

    .prologue
    .line 801
    new-instance v0, Lcom/android/server/wm/WindowManagerService$3;

    invoke-direct {v0, p0}, Lcom/android/server/wm/WindowManagerService$3;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    const-wide/16 v1, 0x0

    invoke-virtual {p1, v0, v1, v2}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 812
    return-void
.end method

.method private isSystemSecure()Z
    .registers 4

    .prologue
    .line 7803
    const-string v0, "1"

    const-string v1, "ro.secure"

    const-string v2, "1"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    const-string v0, "0"

    const-string v1, "ro.debuggable"

    const-string v2, "0"

    invoke-static {v1, v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_22

    const/4 v0, 0x1

    :goto_21
    return v0

    :cond_22
    const/4 v0, 0x0

    goto :goto_21
.end method

.method static logSurface(Landroid/view/SurfaceControl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/RuntimeException;)V
    .registers 7
    .param p0, "s"    # Landroid/view/SurfaceControl;
    .param p1, "title"    # Ljava/lang/String;
    .param p2, "msg"    # Ljava/lang/String;
    .param p3, "where"    # Ljava/lang/RuntimeException;

    .prologue
    .line 3248
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  SURFACE "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " / "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 3249
    .local v0, "str":Ljava/lang/String;
    if-eqz p3, :cond_2f

    .line 3250
    const-string v1, "WindowManager"

    invoke-static {v1, v0, p3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3254
    :goto_2e
    return-void

    .line 3252
    :cond_2f
    const-string v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2e
.end method

.method static logSurface(Lcom/android/server/wm/WindowState;Ljava/lang/String;Ljava/lang/RuntimeException;)V
    .registers 6
    .param p0, "w"    # Lcom/android/server/wm/WindowState;
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "where"    # Ljava/lang/RuntimeException;

    .prologue
    .line 3239
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "  SURFACE "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ": "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 3240
    .local v0, "str":Ljava/lang/String;
    if-eqz p2, :cond_25

    .line 3241
    const-string v1, "WindowManager"

    invoke-static {v1, v0, p2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3245
    :goto_24
    return-void

    .line 3243
    :cond_25
    const-string v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_24
.end method

.method public static main(Landroid/content/Context;Lcom/android/server/power/PowerManagerService;Lcom/android/server/display/DisplayManagerService;Lcom/android/server/input/InputManagerService;Landroid/os/Handler;ZZZ)Lcom/android/server/wm/WindowManagerService;
    .registers 17
    .param p0, "context"    # Landroid/content/Context;
    .param p1, "pm"    # Lcom/android/server/power/PowerManagerService;
    .param p2, "dm"    # Lcom/android/server/display/DisplayManagerService;
    .param p3, "im"    # Lcom/android/server/input/InputManagerService;
    .param p4, "wmHandler"    # Landroid/os/Handler;
    .param p5, "haveInputMethods"    # Z
    .param p6, "showBootMsgs"    # Z
    .param p7, "onlyCore"    # Z

    .prologue
    .line 789
    const/4 v0, 0x1

    new-array v1, v0, [Lcom/android/server/wm/WindowManagerService;

    .line 790
    .local v1, "holder":[Lcom/android/server/wm/WindowManagerService;
    new-instance v0, Lcom/android/server/wm/WindowManagerService$2;

    move-object v2, p0

    move-object v3, p1

    move-object v4, p2

    move-object v5, p3

    move v6, p5

    move v7, p6

    move/from16 v8, p7

    invoke-direct/range {v0 .. v8}, Lcom/android/server/wm/WindowManagerService$2;-><init>([Lcom/android/server/wm/WindowManagerService;Landroid/content/Context;Lcom/android/server/power/PowerManagerService;Lcom/android/server/display/DisplayManagerService;Lcom/android/server/input/InputManagerService;ZZZ)V

    const-wide/16 v2, 0x0

    invoke-virtual {p4, v0, v2, v3}, Landroid/os/Handler;->runWithScissors(Ljava/lang/Runnable;J)Z

    .line 797
    const/4 v0, 0x0

    aget-object v0, v1, v0

    return-object v0
.end method

.method private needsLayout()Z
    .registers 5

    .prologue
    .line 11449
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 11450
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v2, :cond_1a

    .line 11451
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 11452
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    if-eqz v3, :cond_17

    .line 11453
    const/4 v3, 0x1

    .line 11456
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_16
    return v3

    .line 11450
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_17
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 11456
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_1a
    const/4 v3, 0x0

    goto :goto_16
.end method

.method private newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;
    .registers 8
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 12670
    new-instance v0, Lcom/android/server/wm/DisplayContent;

    invoke-direct {v0, p1, p0}, Lcom/android/server/wm/DisplayContent;-><init>(Landroid/view/Display;Lcom/android/server/wm/WindowManagerService;)V

    .line 12671
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v1

    .line 12672
    .local v1, "displayId":I
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v1, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 12674
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v2

    .line 12675
    .local v2, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v3, Landroid/graphics/Rect;

    invoke-direct {v3}, Landroid/graphics/Rect;-><init>()V

    .line 12676
    .local v3, "rect":Landroid/graphics/Rect;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    iget-object v5, v2, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    invoke-virtual {v4, v5, v3}, Lcom/android/server/wm/DisplaySettings;->getOverscanLocked(Ljava/lang/String;Landroid/graphics/Rect;)V

    .line 12677
    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v5

    .line 12678
    :try_start_21
    iget v4, v3, Landroid/graphics/Rect;->left:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanLeft:I

    .line 12679
    iget v4, v3, Landroid/graphics/Rect;->top:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanTop:I

    .line 12680
    iget v4, v3, Landroid/graphics/Rect;->right:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanRight:I

    .line 12681
    iget v4, v3, Landroid/graphics/Rect;->bottom:I

    iput v4, v2, Landroid/view/DisplayInfo;->overscanBottom:I

    .line 12682
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerService:Lcom/android/server/display/DisplayManagerService;

    invoke-virtual {v4, v1, v2}, Lcom/android/server/display/DisplayManagerService;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    .line 12684
    monitor-exit v5
    :try_end_37
    .catchall {:try_start_21 .. :try_end_37} :catchall_49

    .line 12685
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 12688
    if-nez v1, :cond_48

    .line 12689
    new-instance v4, Lcom/android/server/wm/StackTapPointerEventListener;

    invoke-direct {v4, p0, v0}, Lcom/android/server/wm/StackTapPointerEventListener;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/DisplayContent;)V

    iput-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    .line 12690
    iget-object v4, v0, Lcom/android/server/wm/DisplayContent;->mTapDetector:Lcom/android/server/wm/StackTapPointerEventListener;

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 12693
    :cond_48
    return-object v0

    .line 12684
    :catchall_49
    move-exception v4

    :try_start_4a
    monitor-exit v5
    :try_end_4b
    .catchall {:try_start_4a .. :try_end_4b} :catchall_49

    throw v4
.end method

.method private notifyFocusChanged()V
    .registers 6

    .prologue
    .line 8081
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 8082
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_d

    .line 8083
    monitor-exit v4

    .line 8092
    :cond_c
    return-void

    .line 8085
    :cond_d
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 8086
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 8087
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_2a

    .line 8088
    array-length v0, v2

    .line 8089
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_20
    if-ge v1, v0, :cond_c

    .line 8090
    aget-object v3, v2, v1

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->focusChanged()V

    .line 8089
    add-int/lit8 v1, v1, 0x1

    goto :goto_20

    .line 8087
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_2a
    move-exception v3

    :try_start_2b
    monitor-exit v4
    :try_end_2c
    .catchall {:try_start_2b .. :try_end_2c} :catchall_2a

    throw v3
.end method

.method private notifyWindowsChanged()V
    .registers 6

    .prologue
    .line 8066
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 8067
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_d

    .line 8068
    monitor-exit v4

    .line 8077
    :cond_c
    return-void

    .line 8070
    :cond_d
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    new-array v2, v3, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 8071
    .local v2, "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    check-cast v2, [Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .line 8072
    .restart local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    monitor-exit v4
    :try_end_1e
    .catchall {:try_start_3 .. :try_end_1e} :catchall_2a

    .line 8073
    array-length v0, v2

    .line 8074
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_20
    if-ge v1, v0, :cond_c

    .line 8075
    aget-object v3, v2, v1

    invoke-interface {v3}, Lcom/android/server/wm/WindowManagerService$WindowChangeListener;->windowsChanged()V

    .line 8074
    add-int/lit8 v1, v1, 0x1

    goto :goto_20

    .line 8072
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windowChangeListeners":[Lcom/android/server/wm/WindowManagerService$WindowChangeListener;
    :catchall_2a
    move-exception v3

    :try_start_2b
    monitor-exit v4
    :try_end_2c
    .catchall {:try_start_2b .. :try_end_2c} :catchall_2a

    throw v3
.end method

.method private final performLayoutAndPlaceSurfacesLocked()V
    .registers 5

    .prologue
    const/4 v3, 0x0

    .line 9842
    const/4 v0, 0x6

    .line 9844
    .local v0, "loopCount":I
    :cond_2
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    .line 9845
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLockedLoop()V

    .line 9846
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v2, 0x4

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 9847
    add-int/lit8 v0, v0, -0x1

    .line 9848
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    if-eqz v1, :cond_15

    if-gtz v0, :cond_2

    .line 9849
    :cond_15
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v3, v1, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperActionPending:Z

    .line 9850
    return-void
.end method

.method private final performLayoutAndPlaceSurfacesLockedInner(Z)V
    .registers 58
    .param p1, "recoveringMemory"    # Z

    .prologue
    .line 10734
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 10738
    .local v4, "currentTime":J
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    if-eqz v2, :cond_16

    .line 10739
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    .line 10740
    const/4 v2, 0x3

    const/4 v8, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 10745
    :cond_16
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v43

    .line 10746
    .local v43, "numDisplays":I
    const/16 v33, 0x0

    .local v33, "displayNdx":I
    :goto_20
    move/from16 v0, v33

    move/from16 v1, v43

    if-ge v0, v1, :cond_71

    .line 10747
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v33

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/DisplayContent;

    .line 10748
    .local v29, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v29

    iget-object v2, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v39, v2, -0x1

    .local v39, "i":I
    :goto_3c
    if-ltz v39, :cond_50

    .line 10749
    move-object/from16 v0, v29

    iget-object v2, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    move/from16 v0, v39

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    const/4 v8, 0x0

    iput-boolean v8, v2, Lcom/android/server/wm/WindowToken;->hasVisible:Z

    .line 10748
    add-int/lit8 v39, v39, -0x1

    goto :goto_3c

    .line 10753
    :cond_50
    move-object/from16 v0, v29

    iget-object v2, v0, Lcom/android/server/wm/DisplayContent;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v2

    add-int/lit8 v39, v2, -0x1

    :goto_5a
    if-ltz v39, :cond_6e

    .line 10754
    move-object/from16 v0, v29

    iget-object v2, v0, Lcom/android/server/wm/DisplayContent;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    move/from16 v0, v39

    invoke-virtual {v2, v0}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/AppWindowToken;

    const/4 v8, 0x0

    iput-boolean v8, v2, Lcom/android/server/wm/AppWindowToken;->hasVisible:Z

    .line 10753
    add-int/lit8 v39, v39, -0x1

    goto :goto_5a

    .line 10746
    :cond_6e
    add-int/lit8 v33, v33, 0x1

    goto :goto_20

    .line 10758
    .end local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v39    # "i":I
    :cond_71
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v8, 0x0

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mHoldScreen:Lcom/android/server/wm/Session;
    invoke-static {v2, v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1702(Lcom/android/server/wm/WindowManagerService$LayoutFields;Lcom/android/server/wm/Session;)Lcom/android/server/wm/Session;

    .line 10759
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/high16 v8, -0x40800000

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v2, v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1902(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    .line 10760
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/high16 v8, -0x40800000

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v2, v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2002(Lcom/android/server/wm/WindowManagerService$LayoutFields;F)F

    .line 10761
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const-wide/16 v8, -0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUserActivityTimeout:J
    invoke-static {v2, v8, v9}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2102(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 10762
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const-wide/16 v8, -0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenDimDuration:J
    invoke-static {v2, v8, v9}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2202(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 10763
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const-wide/16 v8, -0x1

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonLightTimeout:J
    invoke-static {v2, v8, v9}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2302(Lcom/android/server/wm/WindowManagerService$LayoutFields;J)J

    .line 10764
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v8, 0x0

    iput-boolean v8, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscureApplicationContentOnSecondaryDisplays:Z

    .line 10766
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    .line 10768
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v23

    .line 10769
    .local v23, "defaultDisplay":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v25

    .line 10770
    .local v25, "defaultInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v24, v0

    .line 10771
    .local v24, "defaultDw":I
    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v22, v0

    .line 10774
    .local v22, "defaultDh":I
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mShouldIgnoreDimEffect:Z

    .line 10779
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 10782
    :try_start_d3
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    if-eqz v2, :cond_e4

    .line 10783
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    move/from16 v0, v24

    move/from16 v1, v22

    invoke-virtual {v2, v0, v1}, Lcom/android/server/wm/Watermark;->positionSurface(II)V

    .line 10785
    :cond_e4
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    if-eqz v2, :cond_f5

    .line 10786
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    move/from16 v0, v24

    move/from16 v1, v22

    invoke-virtual {v2, v0, v1}, Lcom/android/server/wm/StrictModeFlash;->positionSurface(II)V

    .line 10789
    :cond_f5
    const/16 v38, 0x0

    .line 10791
    .local v38, "focusDisplayed":Z
    const/16 v33, 0x0

    :goto_f9
    move/from16 v0, v33

    move/from16 v1, v43

    if-ge v0, v1, :cond_56c

    .line 10792
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v33

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/DisplayContent;

    .line 10793
    .restart local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    const/16 v49, 0x0

    .line 10794
    .local v49, "updateAllDrawn":Z
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v53

    .line 10795
    .local v53, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v31

    .line 10796
    .local v31, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v30

    .line 10797
    .local v30, "displayId":I
    move-object/from16 v0, v31

    iget v0, v0, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v34, v0

    .line 10798
    .local v34, "dw":I
    move-object/from16 v0, v31

    iget v0, v0, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v27, v0

    .line 10799
    .local v27, "dh":I
    move-object/from16 v0, v31

    iget v6, v0, Landroid/view/DisplayInfo;->appWidth:I

    .line 10800
    .local v6, "innerDw":I
    move-object/from16 v0, v31

    iget v7, v0, Landroid/view/DisplayInfo;->appHeight:I

    .line 10801
    .local v7, "innerDh":I
    if-nez v30, :cond_315

    const/16 v41, 0x1

    .line 10804
    .local v41, "isDefaultDisplay":Z
    :goto_131
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v8, 0x0

    iput-boolean v8, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    .line 10806
    const/16 v45, 0x0

    .line 10808
    .local v45, "repeats":I
    :cond_13a
    add-int/lit8 v45, v45, 0x1

    .line 10809
    const/4 v2, 0x6

    move/from16 v0, v45

    if-le v0, v2, :cond_319

    .line 10810
    const-string v2, "WindowManager"

    const-string v8, "Animation repeat aborted after too many iterations"

    invoke-static {v2, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10811
    const/4 v2, 0x0

    move-object/from16 v0, v29

    iput-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 10877
    :goto_14d
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v8, 0x0

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v2, v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1602(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 10878
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v8, 0x0

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mSyswin:Z
    invoke-static {v2, v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1802(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 10879
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/DisplayContent;->resetDimming()V

    .line 10882
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_52a

    const/16 v46, 0x1

    .line 10884
    .local v46, "someoneLosingFocus":Z
    :goto_16c
    invoke-virtual/range {v53 .. v53}, Lcom/android/server/wm/WindowList;->size()I

    move-result v17

    .line 10885
    .local v17, "N":I
    add-int/lit8 v39, v17, -0x1

    .restart local v39    # "i":I
    :goto_172
    if-ltz v39, :cond_544

    .line 10886
    move-object/from16 v0, v53

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 10888
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v2, v3, Lcom/android/server/wm/WindowState;->mObscured:Z

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1600(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v8

    if-eq v2, v8, :cond_52e

    const/16 v44, 0x1

    .line 10891
    .local v44, "obscuredChanged":Z
    :goto_18c
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1600(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v2

    iput-boolean v2, v3, Lcom/android/server/wm/WindowState;->mObscured:Z

    .line 10892
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mObscured:Z
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1600(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v2

    if-nez v2, :cond_1a5

    move-object/from16 v2, p0

    .line 10893
    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->handleNotObscuredLocked(Lcom/android/server/wm/WindowState;JII)V

    .line 10896
    :cond_1a5
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getStack()Lcom/android/server/wm/TaskStack;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->testDimmingTag()Z

    move-result v2

    if-nez v2, :cond_1b4

    .line 10897
    move-object/from16 v0, p0

    invoke-direct {v0, v3, v6, v7}, Lcom/android/server/wm/WindowManagerService;->handleFlagDimBehind(Lcom/android/server/wm/WindowState;II)V

    .line 10900
    :cond_1b4
    if-eqz v41, :cond_1c7

    if-eqz v44, :cond_1c7

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-ne v2, v3, :cond_1c7

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v2

    if-eqz v2, :cond_1c7

    .line 10905
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperVisibilityLocked()V

    .line 10908
    :cond_1c7
    iget-object v0, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v52, v0

    .line 10913
    .local v52, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v2, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v2, :cond_20e

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->shouldAnimateMove()Z

    move-result v2

    if-eqz v2, :cond_20e

    .line 10917
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const v8, 0x10a00a7

    invoke-static {v2, v8}, Landroid/view/animation/AnimationUtils;->loadAnimation(Landroid/content/Context;I)Landroid/view/animation/Animation;

    move-result-object v18

    .line 10919
    .local v18, "a":Landroid/view/animation/Animation;
    move-object/from16 v0, v52

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowStateAnimator;->setAnimation(Landroid/view/animation/Animation;)V

    .line 10920
    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget v2, v2, Landroid/graphics/Rect;->left:I

    iget-object v8, v3, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v8, v8, Landroid/graphics/Rect;->left:I

    sub-int/2addr v2, v8

    move-object/from16 v0, v52

    iput v2, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimDw:I

    .line 10921
    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget v2, v2, Landroid/graphics/Rect;->top:I

    iget-object v8, v3, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v8, v8, Landroid/graphics/Rect;->top:I

    sub-int/2addr v2, v8

    move-object/from16 v0, v52

    iput v2, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimDh:I
    :try_end_201
    .catch Ljava/lang/RuntimeException; {:try_start_d3 .. :try_end_201} :catch_3f9
    .catchall {:try_start_d3 .. :try_end_201} :catchall_53f

    .line 10923
    :try_start_201
    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    iget-object v8, v3, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v8, v8, Landroid/graphics/Rect;->left:I

    iget-object v9, v3, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v9, v9, Landroid/graphics/Rect;->top:I

    invoke-interface {v2, v8, v9}, Landroid/view/IWindow;->moved(II)V
    :try_end_20e
    .catch Landroid/os/RemoteException; {:try_start_201 .. :try_end_20e} :catch_953
    .catch Ljava/lang/RuntimeException; {:try_start_201 .. :try_end_20e} :catch_3f9
    .catchall {:try_start_201 .. :try_end_20e} :catchall_53f

    .line 10929
    .end local v18    # "a":Landroid/view/animation/Animation;
    :cond_20e
    :goto_20e
    const/4 v2, 0x0

    :try_start_20f
    iput-boolean v2, v3, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    .line 10932
    iget-boolean v2, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v2, :cond_2fa

    .line 10934
    move-object/from16 v0, v52

    invoke-virtual {v0, v4, v5}, Lcom/android/server/wm/WindowStateAnimator;->commitFinishDrawingLocked(J)Z

    move-result v20

    .line 10936
    .local v20, "committed":Z
    if-eqz v41, :cond_262

    if-eqz v20, :cond_262

    .line 10937
    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x7e7

    if-ne v2, v8, :cond_23c

    .line 10942
    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v2, v2, 0x1

    move-object/from16 v0, v29

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 10945
    const-string v2, "dream and commitFinishDrawingLocked true"

    move-object/from16 v0, v29

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 10950
    :cond_23c
    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v8, 0x100000

    and-int/2addr v2, v8

    if-eqz v2, :cond_262

    .line 10953
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v8, 0x1

    iput-boolean v8, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 10954
    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v2, v2, 0x4

    move-object/from16 v0, v29

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 10957
    const-string/jumbo v2, "wallpaper and commitFinishDrawingLocked true"

    move-object/from16 v0, v29

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 10966
    :cond_262
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v2

    invoke-virtual {v2}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v2

    const/4 v8, 0x2

    if-ne v2, v8, :cond_276

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v2

    if-nez v2, :cond_276

    .line 10968
    invoke-virtual/range {v52 .. v52}, Lcom/android/server/wm/WindowStateAnimator;->computeShownFrameLocked()V

    .line 10971
    :cond_276
    move-object/from16 v0, v52

    move/from16 v1, p1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowStateAnimator;->setSurfaceBoundariesLocked(Z)V

    .line 10973
    iget-object v0, v3, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    .line 10980
    .local v19, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v19, :cond_2fa

    move-object/from16 v0, v19

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-eqz v2, :cond_291

    move-object/from16 v0, v19

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v2, v2, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v2, :cond_2fa

    .line 10982
    :cond_291
    move-object/from16 v0, v19

    iget-wide v8, v0, Lcom/android/server/wm/AppWindowToken;->lastTransactionSequence:J

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    int-to-long v0, v2

    move-wide/from16 v54, v0

    cmp-long v2, v8, v54

    if-eqz v2, :cond_2b7

    .line 10983
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    int-to-long v8, v2

    move-object/from16 v0, v19

    iput-wide v8, v0, Lcom/android/server/wm/AppWindowToken;->lastTransactionSequence:J

    .line 10984
    const/4 v2, 0x0

    move-object/from16 v0, v19

    iput v2, v0, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    move-object/from16 v0, v19

    iput v2, v0, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    .line 10985
    const/4 v2, 0x0

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    .line 10987
    :cond_2b7
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v2

    if-nez v2, :cond_2c4

    move-object/from16 v0, v52

    iget v2, v0, Lcom/android/server/wm/WindowStateAnimator;->mAttrType:I

    const/4 v8, 0x1

    if-ne v2, v8, :cond_2fa

    :cond_2c4
    iget-boolean v2, v3, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-nez v2, :cond_2fa

    iget-boolean v2, v3, Lcom/android/server/wm/WindowState;->mDestroying:Z

    if-nez v2, :cond_2fa

    .line 11001
    move-object/from16 v0, v19

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-eq v3, v2, :cond_532

    .line 11002
    move-object/from16 v0, v19

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v2, v2, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v2, :cond_2de

    iget-boolean v2, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-nez v2, :cond_2fa

    .line 11003
    :cond_2de
    move-object/from16 v0, v19

    iget v2, v0, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, v19

    iput v2, v0, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    .line 11004
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v2

    if-eqz v2, :cond_2fa

    .line 11005
    move-object/from16 v0, v19

    iget v2, v0, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, v19

    iput v2, v0, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    .line 11010
    const/16 v49, 0x1

    .line 11020
    .end local v19    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v20    # "committed":Z
    :cond_2fa
    :goto_2fa
    if-eqz v41, :cond_30c

    if-eqz v46, :cond_30c

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-ne v3, v2, :cond_30c

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v2

    if-eqz v2, :cond_30c

    .line 11022
    const/16 v38, 0x1

    .line 11025
    :cond_30c
    move-object/from16 v0, p0

    invoke-direct {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateResizingWindows(Lcom/android/server/wm/WindowState;)V

    .line 10885
    add-int/lit8 v39, v39, -0x1

    goto/16 :goto_172

    .line 10801
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    .end local v17    # "N":I
    .end local v39    # "i":I
    .end local v41    # "isDefaultDisplay":Z
    .end local v44    # "obscuredChanged":Z
    .end local v45    # "repeats":I
    .end local v46    # "someoneLosingFocus":Z
    .end local v52    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_315
    const/16 v41, 0x0

    goto/16 :goto_131

    .line 10815
    .restart local v41    # "isDefaultDisplay":Z
    .restart local v45    # "repeats":I
    :cond_319
    const-string v2, "On entry to LockedInner"

    move-object/from16 v0, v29

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 10818
    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    and-int/lit8 v2, v2, 0x4

    if-eqz v2, :cond_340

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->adjustWallpaperWindowsLocked()I

    move-result v2

    and-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_340

    .line 10822
    move-object/from16 v0, p0

    move-object/from16 v1, v53

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 10823
    const/4 v2, 0x1

    move-object/from16 v0, v29

    iput-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 10826
    :cond_340
    if-eqz v41, :cond_361

    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    and-int/lit8 v2, v2, 0x2

    if-eqz v2, :cond_361

    .line 10829
    const/4 v2, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v2

    if-eqz v2, :cond_361

    .line 10830
    const/4 v2, 0x1

    move-object/from16 v0, v29

    iput-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 10831
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v8, 0x12

    invoke-virtual {v2, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 10835
    :cond_361
    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    and-int/lit8 v2, v2, 0x1

    if-eqz v2, :cond_36e

    .line 10837
    const/4 v2, 0x1

    move-object/from16 v0, v29

    iput-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 10841
    :cond_36e
    const/4 v2, 0x4

    move/from16 v0, v45

    if-ge v0, v2, :cond_3f1

    .line 10842
    const/4 v2, 0x1

    move/from16 v0, v45

    if-ne v0, v2, :cond_3ef

    const/4 v2, 0x1

    :goto_379
    const/4 v8, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v29

    invoke-direct {v0, v1, v2, v8}, Lcom/android/server/wm/WindowManagerService;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 10850
    :goto_381
    const/4 v2, 0x0

    move-object/from16 v0, v29

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 10852
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "loop number "

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I

    invoke-virtual {v2, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, v29

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 10855
    if-eqz v41, :cond_522

    .line 10856
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move/from16 v0, v34

    move/from16 v1, v27

    invoke-interface {v2, v0, v1}, Landroid/view/WindowManagerPolicy;->beginPostLayoutPolicyLw(II)V

    .line 10857
    invoke-virtual/range {v53 .. v53}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    add-int/lit8 v39, v2, -0x1

    .restart local v39    # "i":I
    :goto_3b9
    if-ltz v39, :cond_506

    .line 10858
    move-object/from16 v0, v53

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 10859
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    iget-boolean v2, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v2, :cond_3d2

    .line 10860
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v8, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-interface {v2, v3, v8}, Landroid/view/WindowManagerPolicy;->applyPostLayoutPolicyLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)V

    .line 10863
    :cond_3d2
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mShouldIgnoreDimEffect:Z

    if-nez v2, :cond_3ec

    .line 10864
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v2

    if-eqz v2, :cond_3ec

    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v8, 0x30000

    and-int/2addr v2, v8

    if-eqz v2, :cond_3ec

    .line 10866
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mShouldIgnoreDimEffect:Z

    .line 10857
    :cond_3ec
    add-int/lit8 v39, v39, -0x1

    goto :goto_3b9

    .line 10842
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    .end local v39    # "i":I
    :cond_3ef
    const/4 v2, 0x0

    goto :goto_379

    .line 10845
    :cond_3f1
    const-string v2, "WindowManager"

    const-string v8, "Layout repeat skipped after too many iterations"

    invoke-static {v2, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3f8
    .catch Ljava/lang/RuntimeException; {:try_start_20f .. :try_end_3f8} :catch_3f9
    .catchall {:try_start_20f .. :try_end_3f8} :catchall_53f

    goto :goto_381

    .line 11047
    .end local v6    # "innerDw":I
    .end local v7    # "innerDh":I
    .end local v27    # "dh":I
    .end local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "displayId":I
    .end local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v34    # "dw":I
    .end local v38    # "focusDisplayed":Z
    .end local v41    # "isDefaultDisplay":Z
    .end local v45    # "repeats":I
    .end local v49    # "updateAllDrawn":Z
    .end local v53    # "windows":Lcom/android/server/wm/WindowList;
    :catch_3f9
    move-exception v35

    .line 11048
    .local v35, "e":Ljava/lang/RuntimeException;
    :try_start_3fa
    const-string v2, "WindowManager"

    const-string v8, "Unhandled exception in Window Manager"

    move-object/from16 v0, v35

    invoke-static {v2, v8, v0}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_403
    .catchall {:try_start_3fa .. :try_end_403} :catchall_53f

    .line 11050
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 11055
    .end local v35    # "e":Ljava/lang/RuntimeException;
    :goto_406
    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v26

    .line 11060
    .local v26, "defaultWindows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v2

    if-eqz v2, :cond_430

    .line 11061
    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;)I

    move-result v8

    or-int/2addr v2, v8

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 11062
    const-string v2, "after handleAppTransitionReadyLocked"

    move-object/from16 v0, v23

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 11066
    :cond_430
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v2, v2, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    if-nez v2, :cond_45a

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isRunning()Z

    move-result v2

    if-eqz v2, :cond_45a

    .line 11073
    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->handleAnimatingStoppedAndTransitionLocked()I

    move-result v8

    or-int/2addr v2, v8

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 11074
    const-string v2, "after handleAnimStopAndXitionLock"

    move-object/from16 v0, v23

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 11078
    :cond_45a
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v2, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    if-eqz v2, :cond_487

    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    if-nez v2, :cond_487

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isReady()Z

    move-result v2

    if-nez v2, :cond_487

    .line 11086
    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v2, v2, 0x1

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 11087
    const-string v2, "after animateAwayWallpaperLocked"

    move-object/from16 v0, v23

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 11090
    :cond_487
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v8, 0x0

    iput-boolean v8, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    .line 11092
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v2, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    if-eqz v2, :cond_4ab

    .line 11094
    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v2, v2, 0x4

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 11096
    const-string v2, "WallpaperMayChange"

    move-object/from16 v0, v23

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 11100
    :cond_4ab
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    if-eqz v2, :cond_4ca

    .line 11101
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    .line 11102
    const/4 v2, 0x2

    const/4 v8, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v2

    if-eqz v2, :cond_4ca

    .line 11104
    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v2, v2, 0x8

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 11108
    :cond_4ca
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    move-result v2

    if-eqz v2, :cond_4e5

    .line 11109
    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v2, v2, 0x1

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 11110
    const-string v2, "mLayoutNeeded"

    move-object/from16 v0, v23

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 11114
    :cond_4e5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v39, v2, -0x1

    .restart local v39    # "i":I
    :goto_4ef
    if-ltz v39, :cond_62a

    .line 11115
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    move/from16 v0, v39

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v51

    check-cast v51, Lcom/android/server/wm/WindowState;

    .line 11116
    .local v51, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v51

    iget-boolean v2, v0, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-eqz v2, :cond_582

    .line 11114
    :goto_503
    add-int/lit8 v39, v39, -0x1

    goto :goto_4ef

    .line 10871
    .end local v26    # "defaultWindows":Lcom/android/server/wm/WindowList;
    .end local v51    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "innerDw":I
    .restart local v7    # "innerDh":I
    .restart local v27    # "dh":I
    .restart local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "displayId":I
    .restart local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v34    # "dw":I
    .restart local v38    # "focusDisplayed":Z
    .restart local v41    # "isDefaultDisplay":Z
    .restart local v45    # "repeats":I
    .restart local v49    # "updateAllDrawn":Z
    .restart local v53    # "windows":Lcom/android/server/wm/WindowList;
    :cond_506
    :try_start_506
    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v8}, Landroid/view/WindowManagerPolicy;->finishPostLayoutPolicyLw()I

    move-result v8

    or-int/2addr v2, v8

    move-object/from16 v0, v29

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 10872
    const-string v2, "after finishPostLayoutPolicyLw"

    move-object/from16 v0, v29

    iget v8, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v8}, Lcom/android/server/wm/WindowManagerService;->debugLayoutRepeats(Ljava/lang/String;I)V

    .line 10875
    .end local v39    # "i":I
    :cond_522
    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    if-nez v2, :cond_13a

    goto/16 :goto_14d

    .line 10882
    :cond_52a
    const/16 v46, 0x0

    goto/16 :goto_16c

    .line 10888
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    .restart local v17    # "N":I
    .restart local v39    # "i":I
    .restart local v46    # "someoneLosingFocus":Z
    :cond_52e
    const/16 v44, 0x0

    goto/16 :goto_18c

    .line 11013
    .restart local v19    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v20    # "committed":Z
    .restart local v44    # "obscuredChanged":Z
    .restart local v52    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_532
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v2

    if-eqz v2, :cond_2fa

    .line 11014
    const/4 v2, 0x1

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z
    :try_end_53d
    .catch Ljava/lang/RuntimeException; {:try_start_506 .. :try_end_53d} :catch_3f9
    .catchall {:try_start_506 .. :try_end_53d} :catchall_53f

    goto/16 :goto_2fa

    .line 11050
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    .end local v6    # "innerDw":I
    .end local v7    # "innerDh":I
    .end local v17    # "N":I
    .end local v19    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v20    # "committed":Z
    .end local v27    # "dh":I
    .end local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "displayId":I
    .end local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v34    # "dw":I
    .end local v38    # "focusDisplayed":Z
    .end local v39    # "i":I
    .end local v41    # "isDefaultDisplay":Z
    .end local v44    # "obscuredChanged":Z
    .end local v45    # "repeats":I
    .end local v46    # "someoneLosingFocus":Z
    .end local v49    # "updateAllDrawn":Z
    .end local v52    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .end local v53    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_53f
    move-exception v2

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v2

    .line 11028
    .restart local v6    # "innerDw":I
    .restart local v7    # "innerDh":I
    .restart local v17    # "N":I
    .restart local v27    # "dh":I
    .restart local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "displayId":I
    .restart local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v34    # "dw":I
    .restart local v38    # "focusDisplayed":Z
    .restart local v39    # "i":I
    .restart local v41    # "isDefaultDisplay":Z
    .restart local v45    # "repeats":I
    .restart local v46    # "someoneLosingFocus":Z
    .restart local v49    # "updateAllDrawn":Z
    .restart local v53    # "windows":Lcom/android/server/wm/WindowList;
    :cond_544
    :try_start_544
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerService:Lcom/android/server/display/DisplayManagerService;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v8, v8, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mDisplayHasContent:Z

    const/4 v9, 0x1

    move/from16 v0, v30

    invoke-virtual {v2, v0, v8, v9}, Lcom/android/server/display/DisplayManagerService;->setDisplayHasContent(IZZ)V

    .line 11032
    move-object/from16 v0, p0

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->stopDimmingIfNeeded()V

    .line 11034
    if-eqz v49, :cond_568

    .line 11035
    move-object/from16 v0, p0

    move-object/from16 v1, v29

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->updateAllDrawnLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 10791
    :cond_568
    add-int/lit8 v33, v33, 0x1

    goto/16 :goto_f9

    .line 11039
    .end local v6    # "innerDw":I
    .end local v7    # "innerDh":I
    .end local v17    # "N":I
    .end local v27    # "dh":I
    .end local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v30    # "displayId":I
    .end local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v34    # "dw":I
    .end local v39    # "i":I
    .end local v41    # "isDefaultDisplay":Z
    .end local v45    # "repeats":I
    .end local v46    # "someoneLosingFocus":Z
    .end local v49    # "updateAllDrawn":Z
    .end local v53    # "windows":Lcom/android/server/wm/WindowList;
    :cond_56c
    if-eqz v38, :cond_576

    .line 11040
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v8, 0x3

    invoke-virtual {v2, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 11045
    :cond_576
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerService:Lcom/android/server/display/DisplayManagerService;

    invoke-virtual {v2}, Lcom/android/server/display/DisplayManagerService;->performTraversalInTransactionFromWindowManager()V
    :try_end_57d
    .catch Ljava/lang/RuntimeException; {:try_start_544 .. :try_end_57d} :catch_3f9
    .catchall {:try_start_544 .. :try_end_57d} :catchall_53f

    .line 11050
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    goto/16 :goto_406

    .line 11120
    .end local v38    # "focusDisplayed":Z
    .restart local v26    # "defaultWindows":Lcom/android/server/wm/WindowList;
    .restart local v39    # "i":I
    .restart local v51    # "win":Lcom/android/server/wm/WindowState;
    :cond_582
    move-object/from16 v0, v51

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v52, v0

    .line 11124
    .restart local v52    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    const/16 v28, 0x0

    .line 11125
    .local v28, "diff":I
    :try_start_58a
    invoke-virtual/range {v51 .. v51}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v21

    .line 11133
    .local v21, "configChanged":Z
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v51

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowState;->setConfiguration(Landroid/content/res/Configuration;)V

    .line 11137
    move-object/from16 v0, v51

    iget-object v10, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    .line 11138
    .local v10, "client":Landroid/view/IWindow;
    move-object/from16 v0, v51

    iget-object v11, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    .line 11139
    .local v11, "frame":Landroid/graphics/Rect;
    move-object/from16 v0, v51

    iget-object v12, v0, Lcom/android/server/wm/WindowState;->mLastOverscanInsets:Landroid/graphics/Rect;

    .line 11140
    .local v12, "overscanInsets":Landroid/graphics/Rect;
    move-object/from16 v0, v51

    iget-object v13, v0, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    .line 11141
    .local v13, "contentInsets":Landroid/graphics/Rect;
    move-object/from16 v0, v51

    iget-object v14, v0, Lcom/android/server/wm/WindowState;->mLastVisibleInsets:Landroid/graphics/Rect;

    .line 11142
    .local v14, "visibleInsets":Landroid/graphics/Rect;
    move-object/from16 v0, v52

    iget v2, v0, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    const/4 v8, 0x1

    if-ne v2, v8, :cond_606

    const/4 v2, 0x1

    move v8, v2

    :goto_5b4
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindow:Z

    if-eqz v2, :cond_609

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindows:Ljava/util/ArrayList;

    move-object/from16 v0, v51

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_609

    const/4 v2, 0x1

    :goto_5c7
    or-int v15, v8, v2

    .line 11147
    .local v15, "reportDraw":Z
    if-eqz v21, :cond_60b

    move-object/from16 v0, v51

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v16, v0

    .line 11148
    .local v16, "newConfig":Landroid/content/res/Configuration;
    :goto_5d1
    move-object/from16 v0, v51

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    instance-of v2, v2, Landroid/view/IWindow$Stub;

    if-eqz v2, :cond_60e

    .line 11150
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    new-instance v8, Lcom/android/server/wm/WindowManagerService$8;

    move-object/from16 v9, p0

    invoke-direct/range {v8 .. v16}, Lcom/android/server/wm/WindowManagerService$8;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IWindow;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZLandroid/content/res/Configuration;)V

    invoke-virtual {v2, v8}, Lcom/android/server/wm/WindowManagerService$H;->post(Ljava/lang/Runnable;)Z

    .line 11165
    :goto_5e7
    const/4 v2, 0x0

    move-object/from16 v0, v51

    iput-boolean v2, v0, Lcom/android/server/wm/WindowState;->mOverscanInsetsChanged:Z

    .line 11166
    const/4 v2, 0x0

    move-object/from16 v0, v51

    iput-boolean v2, v0, Lcom/android/server/wm/WindowState;->mContentInsetsChanged:Z

    .line 11167
    const/4 v2, 0x0

    move-object/from16 v0, v51

    iput-boolean v2, v0, Lcom/android/server/wm/WindowState;->mVisibleInsetsChanged:Z

    .line 11168
    const/4 v2, 0x0

    move-object/from16 v0, v52

    iput-boolean v2, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z
    :try_end_5fb
    .catch Landroid/os/RemoteException; {:try_start_58a .. :try_end_5fb} :catch_612

    .line 11174
    .end local v10    # "client":Landroid/view/IWindow;
    .end local v11    # "frame":Landroid/graphics/Rect;
    .end local v12    # "overscanInsets":Landroid/graphics/Rect;
    .end local v13    # "contentInsets":Landroid/graphics/Rect;
    .end local v14    # "visibleInsets":Landroid/graphics/Rect;
    .end local v15    # "reportDraw":Z
    .end local v16    # "newConfig":Landroid/content/res/Configuration;
    .end local v21    # "configChanged":Z
    :goto_5fb
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    move/from16 v0, v39

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    goto/16 :goto_503

    .line 11142
    .restart local v10    # "client":Landroid/view/IWindow;
    .restart local v11    # "frame":Landroid/graphics/Rect;
    .restart local v12    # "overscanInsets":Landroid/graphics/Rect;
    .restart local v13    # "contentInsets":Landroid/graphics/Rect;
    .restart local v14    # "visibleInsets":Landroid/graphics/Rect;
    .restart local v21    # "configChanged":Z
    :cond_606
    const/4 v2, 0x0

    move v8, v2

    goto :goto_5b4

    :cond_609
    const/4 v2, 0x0

    goto :goto_5c7

    .line 11147
    .restart local v15    # "reportDraw":Z
    :cond_60b
    const/16 v16, 0x0

    goto :goto_5d1

    .line 11162
    .restart local v16    # "newConfig":Landroid/content/res/Configuration;
    :cond_60e
    :try_start_60e
    invoke-interface/range {v10 .. v16}, Landroid/view/IWindow;->resized(Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;ZLandroid/content/res/Configuration;)V
    :try_end_611
    .catch Landroid/os/RemoteException; {:try_start_60e .. :try_end_611} :catch_612

    goto :goto_5e7

    .line 11169
    .end local v10    # "client":Landroid/view/IWindow;
    .end local v11    # "frame":Landroid/graphics/Rect;
    .end local v12    # "overscanInsets":Landroid/graphics/Rect;
    .end local v13    # "contentInsets":Landroid/graphics/Rect;
    .end local v14    # "visibleInsets":Landroid/graphics/Rect;
    .end local v15    # "reportDraw":Z
    .end local v16    # "newConfig":Landroid/content/res/Configuration;
    .end local v21    # "configChanged":Z
    :catch_612
    move-exception v35

    .line 11170
    .local v35, "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, v51

    iput-boolean v2, v0, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 11171
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v8

    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    move-wide/from16 v54, v0

    sub-long v8, v8, v54

    long-to-int v2, v8

    move-object/from16 v0, v51

    iput v2, v0, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    goto :goto_5fb

    .line 11180
    .end local v28    # "diff":I
    .end local v35    # "e":Landroid/os/RemoteException;
    .end local v51    # "win":Lcom/android/server/wm/WindowState;
    .end local v52    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_62a
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v2, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    if-eqz v2, :cond_653

    .line 11181
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    if-eqz v2, :cond_650

    .line 11182
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    .line 11183
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v2, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mLastWindowFreezeSource:Ljava/lang/Object;

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 11184
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v8, 0xb

    invoke-virtual {v2, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 11186
    :cond_650
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    .line 11190
    :cond_653
    const/16 v50, 0x0

    .line 11191
    .local v50, "wallpaperDestroyed":Z
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v39

    .line 11192
    if-lez v39, :cond_699

    .line 11194
    :cond_65f
    add-int/lit8 v39, v39, -0x1

    .line 11195
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    move/from16 v0, v39

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v51

    check-cast v51, Lcom/android/server/wm/WindowState;

    .line 11196
    .restart local v51    # "win":Lcom/android/server/wm/WindowState;
    const/4 v2, 0x0

    move-object/from16 v0, v51

    iput-boolean v2, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    .line 11197
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v51

    if-ne v2, v0, :cond_67f

    .line 11198
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 11200
    :cond_67f
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v0, v51

    if-ne v0, v2, :cond_689

    .line 11201
    const/16 v50, 0x1

    .line 11203
    :cond_689
    move-object/from16 v0, v51

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    .line 11204
    if-gtz v39, :cond_65f

    .line 11205
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 11209
    .end local v51    # "win":Lcom/android/server/wm/WindowState;
    :cond_699
    const/16 v33, 0x0

    :goto_69b
    move/from16 v0, v33

    move/from16 v1, v43

    if-ge v0, v1, :cond_74d

    .line 11210
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v33

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/DisplayContent;

    .line 11211
    .restart local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v29

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    move-object/from16 v37, v0

    .line 11212
    .local v37, "exitingTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    invoke-virtual/range {v37 .. v37}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v39, v2, -0x1

    :goto_6b9
    if-ltz v39, :cond_6e6

    .line 11213
    move-object/from16 v0, v37

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v48

    check-cast v48, Lcom/android/server/wm/WindowToken;

    .line 11214
    .local v48, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, v48

    iget-boolean v2, v0, Lcom/android/server/wm/WindowToken;->hasVisible:Z

    if-nez v2, :cond_6e3

    .line 11215
    move-object/from16 v0, v37

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 11216
    move-object/from16 v0, v48

    iget v2, v0, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v8, 0x7dd

    if-ne v2, v8, :cond_6e3

    .line 11217
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    move-object/from16 v0, v48

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 11212
    :cond_6e3
    add-int/lit8 v39, v39, -0x1

    goto :goto_6b9

    .line 11223
    .end local v48    # "token":Lcom/android/server/wm/WindowToken;
    :cond_6e6
    move-object/from16 v0, v29

    iget-object v0, v0, Lcom/android/server/wm/DisplayContent;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v36, v0

    .line 11224
    .local v36, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v2

    add-int/lit8 v39, v2, -0x1

    :goto_6f2
    if-ltz v39, :cond_749

    .line 11225
    move-object/from16 v0, v36

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v48

    check-cast v48, Lcom/android/server/wm/AppWindowToken;

    .line 11226
    .local v48, "token":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v48

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hasVisible:Z

    if-nez v2, :cond_746

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    move-object/from16 v0, v48

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_746

    .line 11230
    move-object/from16 v0, v48

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    .line 11231
    move-object/from16 v0, v48

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v8, 0x0

    iput-boolean v8, v2, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    .line 11234
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v0, v48

    iget v8, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    invoke-virtual {v2, v8}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v47

    check-cast v47, Lcom/android/server/wm/Task;

    .line 11235
    .local v47, "task":Lcom/android/server/wm/Task;
    if-eqz v47, :cond_73f

    invoke-virtual/range {v47 .. v48}, Lcom/android/server/wm/Task;->removeAppToken(Lcom/android/server/wm/AppWindowToken;)Z

    move-result v2

    if-eqz v2, :cond_73f

    .line 11236
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v0, v48

    iget v8, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    invoke-virtual {v2, v8}, Landroid/util/SparseArray;->delete(I)V

    .line 11238
    :cond_73f
    move-object/from16 v0, v36

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->remove(I)Ljava/lang/Object;

    .line 11224
    .end local v47    # "task":Lcom/android/server/wm/Task;
    :cond_746
    add-int/lit8 v39, v39, -0x1

    goto :goto_6f2

    .line 11209
    .end local v48    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_749
    add-int/lit8 v33, v33, 0x1

    goto/16 :goto_69b

    .line 11243
    .end local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v36    # "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    .end local v37    # "exitingTokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowToken;>;"
    :cond_74d
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v2, v2, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    if-nez v2, :cond_786

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mRelayoutWhileAnimating:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_786

    .line 11244
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mRelayoutWhileAnimating:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v42, v2, -0x1

    .local v42, "j":I
    :goto_769
    if-ltz v42, :cond_77f

    .line 11246
    :try_start_76b
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mRelayoutWhileAnimating:Ljava/util/ArrayList;

    move/from16 v0, v42

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v2}, Landroid/view/IWindow;->doneAnimating()V
    :try_end_77c
    .catch Landroid/os/RemoteException; {:try_start_76b .. :try_end_77c} :catch_950

    .line 11244
    :goto_77c
    add-int/lit8 v42, v42, -0x1

    goto :goto_769

    .line 11250
    :cond_77f
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mRelayoutWhileAnimating:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 11253
    .end local v42    # "j":I
    :cond_786
    if-eqz v50, :cond_797

    .line 11254
    move-object/from16 v0, v23

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v2, v2, 0x4

    move-object/from16 v0, v23

    iput v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 11256
    const/4 v2, 0x1

    move-object/from16 v0, v23

    iput-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 11259
    :cond_797
    const/16 v33, 0x0

    :goto_799
    move/from16 v0, v33

    move/from16 v1, v43

    if-ge v0, v1, :cond_7b9

    .line 11260
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move/from16 v0, v33

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/DisplayContent;

    .line 11261
    .restart local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, v29

    iget v2, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    if-eqz v2, :cond_7b6

    .line 11262
    const/4 v2, 0x1

    move-object/from16 v0, v29

    iput-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 11259
    :cond_7b6
    add-int/lit8 v33, v33, 0x1

    goto :goto_799

    .line 11267
    .end local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_7b9
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v8, 0x1

    invoke-virtual {v2, v8}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 11269
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mHoldScreen:Lcom/android/server/wm/Session;
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1700(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Lcom/android/server/wm/Session;

    move-result-object v2

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->setHoldScreenLocked(Lcom/android/server/wm/Session;)V

    .line 11270
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v2, :cond_847

    .line 11271
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1900(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v2

    const/4 v8, 0x0

    cmpg-float v2, v2, v8

    if-ltz v2, :cond_7ef

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1900(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v2

    const/high16 v8, 0x3f800000

    cmpl-float v2, v2, v8

    if-lez v2, :cond_8ef

    .line 11272
    :cond_7ef
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    const/4 v8, -0x1

    invoke-virtual {v2, v8}, Lcom/android/server/power/PowerManagerService;->setScreenBrightnessOverrideFromWindowManager(I)V

    .line 11277
    :goto_7f7
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2000(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v2

    const/4 v8, 0x0

    cmpg-float v2, v2, v8

    if-ltz v2, :cond_812

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2000(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v2

    const/high16 v8, 0x3f800000

    cmpl-float v2, v2, v8

    if-lez v2, :cond_906

    .line 11278
    :cond_812
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    const/4 v8, -0x1

    invoke-virtual {v2, v8}, Lcom/android/server/power/PowerManagerService;->setButtonBrightnessOverrideFromWindowManager(I)V

    .line 11283
    :goto_81a
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUserActivityTimeout:J
    invoke-static {v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2100(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v8

    invoke-virtual {v2, v8, v9}, Lcom/android/server/power/PowerManagerService;->setUserActivityTimeoutOverrideFromWindowManager(J)V

    .line 11286
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenDimDuration:J
    invoke-static {v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2200(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v8

    invoke-virtual {v2, v8, v9}, Lcom/android/server/power/PowerManagerService;->setScreenDimDurationOverrideFromWindowManager(J)V

    .line 11290
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonLightTimeout:J
    invoke-static {v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2300(Lcom/android/server/wm/WindowManagerService$LayoutFields;)J

    move-result-wide v8

    invoke-virtual {v2, v8, v9}, Lcom/android/server/power/PowerManagerService;->setButtonTimeoutOverrideFromWindowManager(J)V

    .line 11295
    :cond_847
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mTurnOnScreen:Z

    if-eqz v2, :cond_85d

    .line 11297
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    invoke-virtual {v2, v8, v9}, Lcom/android/server/power/PowerManagerService;->wakeUp(J)V

    .line 11298
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mTurnOnScreen:Z

    .line 11301
    :cond_85d
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUpdateRotation:Z
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2400(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v2

    if-eqz v2, :cond_879

    .line 11303
    const/4 v2, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v2

    if-eqz v2, :cond_91d

    .line 11304
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v8, 0x12

    invoke-virtual {v2, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 11310
    :cond_879
    :goto_879
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-boolean v2, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    if-eqz v2, :cond_894

    move-object/from16 v0, v23

    iget-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    if-nez v2, :cond_894

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUpdateRotation:Z
    invoke-static {v2}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2400(Lcom/android/server/wm/WindowManagerService$LayoutFields;)Z

    move-result v2

    if-nez v2, :cond_894

    .line 11312
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->checkDrawnWindowsLocked()V

    .line 11315
    :cond_894
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v17

    .line 11316
    .restart local v17    # "N":I
    if-lez v17, :cond_946

    .line 11317
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    array-length v2, v2

    move/from16 v0, v17

    if-ge v2, v0, :cond_8af

    .line 11318
    add-int/lit8 v2, v17, 0xa

    new-array v2, v2, [Lcom/android/server/wm/WindowState;

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    .line 11320
    :cond_8af
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    invoke-virtual {v2, v8}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 11321
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 11322
    new-instance v32, Lcom/android/server/wm/DisplayContentList;

    invoke-direct/range {v32 .. v32}, Lcom/android/server/wm/DisplayContentList;-><init>()V

    .line 11323
    .local v32, "displayList":Lcom/android/server/wm/DisplayContentList;
    const/16 v39, 0x0

    :goto_8c8
    move/from16 v0, v39

    move/from16 v1, v17

    if-ge v0, v1, :cond_927

    .line 11324
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPendingRemoveTmp:[Lcom/android/server/wm/WindowState;

    aget-object v3, v2, v39

    .line 11325
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowState;)V

    .line 11326
    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    move-object/from16 v0, v32

    invoke-virtual {v0, v2}, Lcom/android/server/wm/DisplayContentList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_8ec

    .line 11327
    iget-object v2, v3, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    move-object/from16 v0, v32

    invoke-virtual {v0, v2}, Lcom/android/server/wm/DisplayContentList;->add(Ljava/lang/Object;)Z

    .line 11323
    :cond_8ec
    add-int/lit8 v39, v39, 0x1

    goto :goto_8c8

    .line 11274
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    .end local v17    # "N":I
    .end local v32    # "displayList":Lcom/android/server/wm/DisplayContentList;
    :cond_8ef
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mScreenBrightness:F
    invoke-static {v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$1900(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v8

    move-object/from16 v0, p0

    invoke-direct {v0, v8}, Lcom/android/server/wm/WindowManagerService;->toBrightnessOverride(F)I

    move-result v8

    invoke-virtual {v2, v8}, Lcom/android/server/power/PowerManagerService;->setScreenBrightnessOverrideFromWindowManager(I)V

    goto/16 :goto_7f7

    .line 11280
    :cond_906
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # getter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mButtonBrightness:F
    invoke-static {v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2000(Lcom/android/server/wm/WindowManagerService$LayoutFields;)F

    move-result v8

    move-object/from16 v0, p0

    invoke-direct {v0, v8}, Lcom/android/server/wm/WindowManagerService;->toBrightnessOverride(F)I

    move-result v8

    invoke-virtual {v2, v8}, Lcom/android/server/power/PowerManagerService;->setButtonBrightnessOverrideFromWindowManager(I)V

    goto/16 :goto_81a

    .line 11306
    :cond_91d
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v8, 0x0

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUpdateRotation:Z
    invoke-static {v2, v8}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2402(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    goto/16 :goto_879

    .line 11331
    .restart local v17    # "N":I
    .restart local v32    # "displayList":Lcom/android/server/wm/DisplayContentList;
    :cond_927
    invoke-virtual/range {v32 .. v32}, Lcom/android/server/wm/DisplayContentList;->iterator()Ljava/util/Iterator;

    move-result-object v40

    .local v40, "i$":Ljava/util/Iterator;
    :goto_92b
    invoke-interface/range {v40 .. v40}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_946

    invoke-interface/range {v40 .. v40}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/wm/DisplayContent;

    .line 11332
    .restart local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v29 .. v29}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    move-object/from16 v0, p0

    invoke-direct {v0, v2}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 11333
    const/4 v2, 0x1

    move-object/from16 v0, v29

    iput-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    goto :goto_92b

    .line 11337
    .end local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v32    # "displayList":Lcom/android/server/wm/DisplayContentList;
    .end local v40    # "i$":Ljava/util/Iterator;
    :cond_946
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->setFocusedStackFrame()V

    .line 11341
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->enableScreenIfNeededLocked()V

    .line 11343
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    .line 11349
    return-void

    .line 11247
    .end local v17    # "N":I
    .restart local v42    # "j":I
    :catch_950
    move-exception v2

    goto/16 :goto_77c

    .line 10924
    .end local v26    # "defaultWindows":Lcom/android/server/wm/WindowList;
    .end local v42    # "j":I
    .end local v50    # "wallpaperDestroyed":Z
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    .restart local v6    # "innerDw":I
    .restart local v7    # "innerDh":I
    .restart local v17    # "N":I
    .restart local v18    # "a":Landroid/view/animation/Animation;
    .restart local v27    # "dh":I
    .restart local v29    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v30    # "displayId":I
    .restart local v31    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v34    # "dw":I
    .restart local v38    # "focusDisplayed":Z
    .restart local v41    # "isDefaultDisplay":Z
    .restart local v44    # "obscuredChanged":Z
    .restart local v45    # "repeats":I
    .restart local v46    # "someoneLosingFocus":Z
    .restart local v49    # "updateAllDrawn":Z
    .restart local v52    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    .restart local v53    # "windows":Lcom/android/server/wm/WindowList;
    :catch_953
    move-exception v2

    goto/16 :goto_20e
.end method

.method private final performLayoutAndPlaceSurfacesLockedLoop()V
    .registers 12

    .prologue
    const-wide/16 v9, 0x20

    const/4 v8, 0x0

    .line 9854
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    if-eqz v5, :cond_25

    .line 9858
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "performLayoutAndPlaceSurfacesLocked called while in layout. Callers="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const/4 v7, 0x3

    invoke-static {v7}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9928
    :cond_24
    :goto_24
    return-void

    .line 9863
    :cond_25
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    if-nez v5, :cond_24

    .line 9870
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v5, :cond_24

    .line 9875
    const-string/jumbo v5, "wmLayout"

    invoke-static {v9, v10, v5}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 9876
    const/4 v5, 0x1

    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    .line 9877
    const/4 v2, 0x0

    .line 9880
    .local v2, "recoveringMemory":Z
    :try_start_37
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    if-eqz v5, :cond_83

    .line 9881
    const/4 v2, 0x1

    .line 9883
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_3d
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v1, v5, :cond_6d

    .line 9884
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 9885
    .local v4, "ws":Lcom/android/server/wm/WindowState;
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Force removing: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9886
    iget-object v5, v4, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    invoke-direct {p0, v5, v4}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowState;)V

    .line 9883
    add-int/lit8 v1, v1, 0x1

    goto :goto_3d

    .line 9888
    .end local v4    # "ws":Lcom/android/server/wm/WindowState;
    :cond_6d
    const/4 v5, 0x0

    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    .line 9889
    const-string v5, "WindowManager"

    const-string v6, "Due to memory failure, waiting a bit for next layout"

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9890
    new-instance v3, Ljava/lang/Object;

    invoke-direct {v3}, Ljava/lang/Object;-><init>()V

    .line 9891
    .local v3, "tmp":Ljava/lang/Object;
    monitor-enter v3
    :try_end_7d
    .catch Ljava/lang/RuntimeException; {:try_start_37 .. :try_end_7d} :catch_bd

    .line 9893
    const-wide/16 v5, 0xfa

    :try_start_7f
    invoke-virtual {v3, v5, v6}, Ljava/lang/Object;->wait(J)V
    :try_end_82
    .catch Ljava/lang/InterruptedException; {:try_start_7f .. :try_end_82} :catch_e0
    .catchall {:try_start_7f .. :try_end_82} :catchall_ba

    .line 9896
    :goto_82
    :try_start_82
    monitor-exit v3
    :try_end_83
    .catchall {:try_start_82 .. :try_end_83} :catchall_ba

    .line 9903
    .end local v1    # "i":I
    .end local v3    # "tmp":Ljava/lang/Object;
    :cond_83
    :goto_83
    :try_start_83
    invoke-direct {p0, v2}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLockedInner(Z)V

    .line 9905
    const/4 v5, 0x0

    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    .line 9907
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    move-result v5

    if-eqz v5, :cond_dc

    .line 9908
    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I

    add-int/lit8 v5, v5, 0x1

    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I

    const/4 v6, 0x6

    if-ge v5, v6, :cond_c6

    .line 9909
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V

    .line 9918
    :goto_9b
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    if-eqz v5, :cond_b5

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v5

    if-nez v5, :cond_b5

    .line 9919
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0x13

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 9920
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0x13

    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z
    :try_end_b5
    .catch Ljava/lang/RuntimeException; {:try_start_83 .. :try_end_b5} :catch_d1

    .line 9927
    :cond_b5
    :goto_b5
    invoke-static {v9, v10}, Landroid/os/Trace;->traceEnd(J)V

    goto/16 :goto_24

    .line 9896
    .restart local v1    # "i":I
    .restart local v3    # "tmp":Ljava/lang/Object;
    :catchall_ba
    move-exception v5

    :try_start_bb
    monitor-exit v3
    :try_end_bc
    .catchall {:try_start_bb .. :try_end_bc} :catchall_ba

    :try_start_bc
    throw v5
    :try_end_bd
    .catch Ljava/lang/RuntimeException; {:try_start_bc .. :try_end_bd} :catch_bd

    .line 9898
    .end local v1    # "i":I
    .end local v3    # "tmp":Ljava/lang/Object;
    :catch_bd
    move-exception v0

    .line 9899
    .local v0, "e":Ljava/lang/RuntimeException;
    const-string v5, "WindowManager"

    const-string v6, "Unhandled exception while force removing for memory"

    invoke-static {v5, v6, v0}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_83

    .line 9911
    .end local v0    # "e":Ljava/lang/RuntimeException;
    :cond_c6
    :try_start_c6
    const-string v5, "WindowManager"

    const-string v6, "Performed 6 layouts in a row. Skipping"

    invoke-static {v5, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 9912
    const/4 v5, 0x0

    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I
    :try_end_d0
    .catch Ljava/lang/RuntimeException; {:try_start_c6 .. :try_end_d0} :catch_d1

    goto :goto_9b

    .line 9922
    :catch_d1
    move-exception v0

    .line 9923
    .restart local v0    # "e":Ljava/lang/RuntimeException;
    iput-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    .line 9924
    const-string v5, "WindowManager"

    const-string v6, "Unhandled exception while laying out windows"

    invoke-static {v5, v6, v0}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_b5

    .line 9915
    .end local v0    # "e":Ljava/lang/RuntimeException;
    :cond_dc
    const/4 v5, 0x0

    :try_start_dd
    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I
    :try_end_df
    .catch Ljava/lang/RuntimeException; {:try_start_dd .. :try_end_df} :catch_d1

    goto :goto_9b

    .line 9894
    .restart local v1    # "i":I
    .restart local v3    # "tmp":Ljava/lang/Object;
    :catch_e0
    move-exception v5

    goto :goto_82
.end method

.method private final performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V
    .registers 32
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "initial"    # Z
    .param p3, "updateInputWindows"    # Z

    .prologue
    .line 9932
    move-object/from16 v0, p1

    iget-boolean v0, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    move/from16 v25, v0

    if-nez v25, :cond_9

    .line 10137
    :goto_8
    return-void

    .line 9935
    :cond_9
    const/16 v25, 0x0

    move/from16 v0, v25

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9936
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v24

    .line 9937
    .local v24, "windows":Lcom/android/server/wm/WindowList;
    move-object/from16 v0, p1

    iget-boolean v15, v0, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    .line 9939
    .local v15, "isDefaultDisplay":Z
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v10

    .line 9940
    .local v10, "displayInfo":Landroid/view/DisplayInfo;
    iget v12, v10, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 9941
    .local v12, "dw":I
    iget v9, v10, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 9943
    .local v9, "dh":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFakeWindows:Ljava/util/ArrayList;

    move-object/from16 v25, v0

    invoke-virtual/range {v25 .. v25}, Ljava/util/ArrayList;->size()I

    move-result v5

    .line 9944
    .local v5, "NFW":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_2c
    if-ge v14, v5, :cond_44

    .line 9945
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFakeWindows:Ljava/util/ArrayList;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/FakeWindowImpl;

    move-object/from16 v0, v25

    invoke-virtual {v0, v12, v9}, Lcom/android/server/wm/FakeWindowImpl;->layout(II)V

    .line 9944
    add-int/lit8 v14, v14, 0x1

    goto :goto_2c

    .line 9948
    :cond_44
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 9957
    .local v4, "N":I
    const/16 v20, 0x0

    .line 9959
    .local v20, "universeBackground":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    move/from16 v26, v0

    move-object/from16 v0, v25

    move/from16 v1, v26

    invoke-interface {v0, v15, v12, v9, v1}, Landroid/view/WindowManagerPolicy;->beginLayoutLw(ZIII)V

    .line 9960
    if-eqz v15, :cond_82

    .line 9962
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    invoke-interface/range {v25 .. v25}, Landroid/view/WindowManagerPolicy;->getSystemDecorLayerLw()I

    move-result v25

    move/from16 v0, v25

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    .line 9963
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    move-object/from16 v25, v0

    const/16 v26, 0x0

    const/16 v27, 0x0

    move-object/from16 v0, v25

    move/from16 v1, v26

    move/from16 v2, v27

    invoke-virtual {v0, v1, v2, v12, v9}, Landroid/graphics/Rect;->set(IIII)V

    .line 9966
    :cond_82
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTmpContentRect:Landroid/graphics/Rect;

    move-object/from16 v26, v0

    invoke-interface/range {v25 .. v26}, Landroid/view/WindowManagerPolicy;->getContentRectLw(Landroid/graphics/Rect;)V

    .line 9967
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTmpContentRect:Landroid/graphics/Rect;

    move-object/from16 v25, v0

    move-object/from16 v0, p1

    move-object/from16 v1, v25

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->setStackBoxSize(Landroid/graphics/Rect;)Z

    .line 9969
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    move/from16 v25, v0

    add-int/lit8 v17, v25, 0x1

    .line 9970
    .local v17, "seq":I
    if-gez v17, :cond_aa

    const/16 v17, 0x0

    .line 9971
    :cond_aa
    move/from16 v0, v17

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    .line 9973
    const/4 v7, 0x0

    .line 9977
    .local v7, "behindDream":Z
    const/16 v19, -0x1

    .line 9978
    .local v19, "topAttached":I
    add-int/lit8 v14, v4, -0x1

    :goto_b5
    if-ltz v14, :cond_2ab

    .line 9979
    move-object/from16 v0, v24

    invoke-virtual {v0, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/WindowState;

    .line 9984
    .local v22, "win":Lcom/android/server/wm/WindowState;
    if-eqz v7, :cond_d9

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v26, v0

    move-object/from16 v0, v25

    move-object/from16 v1, v22

    move-object/from16 v2, v26

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManagerPolicy;->canBeForceHidden(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v25

    if-nez v25, :cond_df

    :cond_d9
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->isGoneForLayoutLw()Z

    move-result v25

    if-eqz v25, :cond_298

    :cond_df
    const/4 v13, 0x1

    .line 9988
    .local v13, "gone":Z
    :goto_e0
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    move-object/from16 v1, v22

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->isNeedLayoutCoverApplication(Landroid/view/WindowManagerPolicy$WindowState;)Z

    move-result v16

    .line 9989
    .local v16, "isNeedLayoutCoverApplication":Z
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    invoke-interface/range {v25 .. v25}, Landroid/view/WindowManagerPolicy;->doesForceHideBySViewCover()Z

    move-result v11

    .line 9990
    .local v11, "doesForceHideBySviewCover":Z
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v26, v0

    move-object/from16 v0, v25

    move-object/from16 v1, v22

    move-object/from16 v2, v26

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManagerPolicy;->canBeForceHiddenBySViewCover(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v8

    .line 9991
    .local v8, "canBeForceHiddenBySViewCover":Z
    if-eqz v11, :cond_29b

    if-eqz v8, :cond_29b

    const/16 v23, 0x1

    .line 9992
    .local v23, "windowHiddenByCover":Z
    :goto_114
    if-eqz v11, :cond_29f

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x7d4

    move/from16 v0, v25

    move/from16 v1, v26

    if-ne v0, v1, :cond_29f

    const/16 v18, 0x1

    .line 10020
    .local v18, "skipLayout":Z
    :goto_12c
    if-eqz v13, :cond_18a

    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHaveFrame:Z

    move/from16 v25, v0

    if-eqz v25, :cond_18a

    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    move/from16 v25, v0

    if-nez v25, :cond_18a

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v25

    if-nez v25, :cond_14a

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->setInsetsChanged()Z

    move-result v25

    if-eqz v25, :cond_174

    :cond_14a
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x7d4

    move/from16 v0, v25

    move/from16 v1, v26

    if-eq v0, v1, :cond_18a

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v25, v0

    if-eqz v25, :cond_174

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    move/from16 v25, v0

    if-nez v25, :cond_18a

    :cond_174
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x7e9

    move/from16 v0, v25

    move/from16 v1, v26

    if-eq v0, v1, :cond_18a

    if-eqz v16, :cond_270

    :cond_18a
    if-nez v23, :cond_270

    .line 10029
    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutAttached:Z

    move/from16 v25, v0

    if-nez v25, :cond_2a6

    .line 10030
    if-eqz p2, :cond_19e

    .line 10032
    const/16 v25, 0x0

    move/from16 v0, v25

    move-object/from16 v1, v22

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    .line 10034
    :cond_19e
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x7e7

    move/from16 v0, v25

    move/from16 v1, v26

    if-ne v0, v1, :cond_1b3

    .line 10038
    const/4 v7, 0x1

    .line 10040
    :cond_1b3
    const/16 v25, 0x0

    move/from16 v0, v25

    move-object/from16 v1, v22

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 10041
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->prelayout()V

    .line 10044
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v25, v0

    if-eqz v25, :cond_2a3

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x1

    move/from16 v0, v25

    move/from16 v1, v26

    if-ne v0, v1, :cond_206

    move-object/from16 v0, v22

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v25, v0

    if-nez v25, :cond_206

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v25, v0

    and-int/lit8 v25, v25, 0x4

    if-nez v25, :cond_206

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v25

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v26

    invoke-virtual/range {v25 .. v26}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v25

    if-eqz v25, :cond_238

    :cond_206
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x3e8

    move/from16 v0, v25

    move/from16 v1, v26

    if-eq v0, v1, :cond_22e

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x3e9

    move/from16 v0, v25

    move/from16 v1, v26

    if-ne v0, v1, :cond_2a3

    :cond_22e
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v25

    if-eqz v25, :cond_2a3

    :cond_238
    const/16 v21, 0x1

    .line 10053
    .local v21, "updateCenterbarOrder":Z
    :goto_23a
    if-nez v18, :cond_255

    .line 10055
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v26, v0

    const/16 v27, 0x0

    move-object/from16 v0, v25

    move-object/from16 v1, v22

    move-object/from16 v2, v26

    move-object/from16 v3, v27

    invoke-interface {v0, v1, v2, v3}, Landroid/view/WindowManagerPolicy;->layoutWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 10060
    :cond_255
    if-eqz v21, :cond_26a

    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v25

    if-nez v25, :cond_26a

    .line 10061
    const/16 v25, 0x1

    move-object/from16 v0, p0

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    .line 10064
    :cond_26a
    move/from16 v0, v17

    move-object/from16 v1, v22

    iput v0, v1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    .line 10073
    .end local v21    # "updateCenterbarOrder":Z
    :cond_270
    :goto_270
    move-object/from16 v0, v22

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v25, v0

    if-nez v25, :cond_294

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x7e9

    move/from16 v0, v25

    move/from16 v1, v26

    if-ne v0, v1, :cond_294

    if-nez v20, :cond_294

    .line 10076
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v20, v0

    .line 9978
    :cond_294
    add-int/lit8 v14, v14, -0x1

    goto/16 :goto_b5

    .line 9984
    .end local v8    # "canBeForceHiddenBySViewCover":Z
    .end local v11    # "doesForceHideBySviewCover":Z
    .end local v13    # "gone":Z
    .end local v16    # "isNeedLayoutCoverApplication":Z
    .end local v18    # "skipLayout":Z
    .end local v23    # "windowHiddenByCover":Z
    :cond_298
    const/4 v13, 0x0

    goto/16 :goto_e0

    .line 9991
    .restart local v8    # "canBeForceHiddenBySViewCover":Z
    .restart local v11    # "doesForceHideBySviewCover":Z
    .restart local v13    # "gone":Z
    .restart local v16    # "isNeedLayoutCoverApplication":Z
    :cond_29b
    const/16 v23, 0x0

    goto/16 :goto_114

    .line 9992
    .restart local v23    # "windowHiddenByCover":Z
    :cond_29f
    const/16 v18, 0x0

    goto/16 :goto_12c

    .line 10044
    .restart local v18    # "skipLayout":Z
    :cond_2a3
    const/16 v21, 0x0

    goto :goto_23a

    .line 10070
    :cond_2a6
    if-gez v19, :cond_270

    move/from16 v19, v14

    goto :goto_270

    .line 10080
    .end local v8    # "canBeForceHiddenBySViewCover":Z
    .end local v11    # "doesForceHideBySviewCover":Z
    .end local v13    # "gone":Z
    .end local v16    # "isNeedLayoutCoverApplication":Z
    .end local v18    # "skipLayout":Z
    .end local v22    # "win":Lcom/android/server/wm/WindowState;
    .end local v23    # "windowHiddenByCover":Z
    :cond_2ab
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowAnimator;->mUniverseBackground:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    move-object/from16 v1, v20

    if-eq v0, v1, :cond_2d1

    .line 10081
    const/16 v25, 0x1

    move/from16 v0, v25

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    .line 10082
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v25, v0

    move-object/from16 v0, v20

    move-object/from16 v1, v25

    iput-object v0, v1, Lcom/android/server/wm/WindowAnimator;->mUniverseBackground:Lcom/android/server/wm/WindowStateAnimator;

    .line 10085
    :cond_2d1
    const/4 v6, 0x0

    .line 10091
    .local v6, "attachedBehindDream":Z
    move/from16 v14, v19

    :goto_2d4
    if-ltz v14, :cond_378

    .line 10092
    move-object/from16 v0, v24

    invoke-virtual {v0, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/WindowState;

    .line 10094
    .restart local v22    # "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutAttached:Z

    move/from16 v25, v0

    if-eqz v25, :cond_362

    .line 10104
    if-eqz v6, :cond_303

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v26, v0

    move-object/from16 v0, v25

    move-object/from16 v1, v22

    move-object/from16 v2, v26

    invoke-interface {v0, v1, v2}, Landroid/view/WindowManagerPolicy;->canBeForceHidden(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)Z

    move-result v25

    if-eqz v25, :cond_303

    .line 10091
    :cond_300
    :goto_300
    add-int/lit8 v14, v14, -0x1

    goto :goto_2d4

    .line 10107
    :cond_303
    move-object/from16 v0, v22

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v25, v0

    const/16 v26, 0x8

    move/from16 v0, v25

    move/from16 v1, v26

    if-eq v0, v1, :cond_319

    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    move/from16 v25, v0

    if-nez v25, :cond_329

    :cond_319
    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHaveFrame:Z

    move/from16 v25, v0

    if-eqz v25, :cond_329

    move-object/from16 v0, v22

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    move/from16 v25, v0

    if-eqz v25, :cond_300

    .line 10109
    :cond_329
    if-eqz p2, :cond_333

    .line 10111
    const/16 v25, 0x0

    move/from16 v0, v25

    move-object/from16 v1, v22

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mContentChanged:Z

    .line 10113
    :cond_333
    const/16 v25, 0x0

    move/from16 v0, v25

    move-object/from16 v1, v22

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 10114
    invoke-virtual/range {v22 .. v22}, Lcom/android/server/wm/WindowState;->prelayout()V

    .line 10115
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v26, v0

    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v27, v0

    move-object/from16 v0, v25

    move-object/from16 v1, v22

    move-object/from16 v2, v26

    move-object/from16 v3, v27

    invoke-interface {v0, v1, v2, v3}, Landroid/view/WindowManagerPolicy;->layoutWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 10116
    move/from16 v0, v17

    move-object/from16 v1, v22

    iput v0, v1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    goto :goto_300

    .line 10122
    :cond_362
    move-object/from16 v0, v22

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    const/16 v26, 0x7e7

    move/from16 v0, v25

    move/from16 v1, v26

    if-ne v0, v1, :cond_300

    .line 10126
    move v6, v7

    goto :goto_300

    .line 10131
    .end local v22    # "win":Lcom/android/server/wm/WindowState;
    :cond_378
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v25, v0

    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 10132
    if-eqz p3, :cond_38e

    .line 10133
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v25, v0

    const/16 v26, 0x0

    invoke-virtual/range {v25 .. v26}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 10136
    :cond_38e
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v25, v0

    invoke-interface/range {v25 .. v25}, Landroid/view/WindowManagerPolicy;->finishLayoutLw()V

    goto/16 :goto_8
.end method

.method private placeWindowAfter(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .registers 6
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1233
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 1234
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    .line 1238
    .local v0, "i":I
    add-int/lit8 v2, v0, 0x1

    invoke-virtual {v1, v2, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1239
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1240
    return-void
.end method

.method private placeWindowBefore(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)V
    .registers 8
    .param p1, "pos"    # Lcom/android/server/wm/WindowState;
    .param p2, "window"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1243
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    .line 1244
    .local v1, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    .line 1248
    .local v0, "i":I
    if-gez v0, :cond_2d

    .line 1249
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "placeWindowBefore: Unable to find "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " in "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 1250
    const/4 v0, 0x0

    .line 1252
    :cond_2d
    invoke-virtual {v1, v0, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1253
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1254
    return-void
.end method

.method private final reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I
    .registers 8
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "index"    # I
    .param p3, "token"    # Lcom/android/server/wm/WindowToken;

    .prologue
    .line 5871
    iget-object v3, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 5872
    .local v0, "NW":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_7
    if-ge v1, v0, :cond_1c

    .line 5873
    iget-object v3, p3, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 5874
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    if-ne v3, p1, :cond_19

    .line 5875
    invoke-direct {p0, p2, v2}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result p2

    .line 5872
    :cond_19
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 5878
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_1c
    return p2
.end method

.method private final reAddWindowLocked(ILcom/android/server/wm/WindowState;)I
    .registers 10
    .param p1, "index"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v6, 0x0

    .line 5839
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 5840
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 5841
    .local v0, "NCW":I
    const/4 v1, 0x0

    .line 5842
    .local v1, "added":Z
    const/4 v3, 0x0

    .local v3, "j":I
    :goto_d
    if-ge v3, v0, :cond_2f

    .line 5843
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 5844
    .local v2, "cwin":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_25

    iget v5, v2, Lcom/android/server/wm/WindowState;->mSubLayer:I

    if-ltz v5, :cond_25

    .line 5847
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 5848
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 5849
    add-int/lit8 p1, p1, 0x1

    .line 5850
    const/4 v1, 0x1

    .line 5854
    :cond_25
    iput-boolean v6, v2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 5855
    invoke-virtual {v4, p1, v2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 5856
    add-int/lit8 p1, p1, 0x1

    .line 5842
    add-int/lit8 v3, v3, 0x1

    goto :goto_d

    .line 5858
    .end local v2    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_2f
    if-nez v1, :cond_38

    .line 5861
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 5862
    invoke-virtual {v4, p1, p2}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 5863
    add-int/lit8 p1, p1, 0x1

    .line 5865
    :cond_38
    const/4 v5, 0x1

    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 5866
    return p1
.end method

.method private reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V
    .registers 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1991
    const/4 v2, 0x0

    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 1995
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v0

    .line 1996
    .local v0, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v1

    .line 1997
    .local v1, "wpos":I
    if-ltz v1, :cond_17

    .line 1999
    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 2000
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 2001
    invoke-direct {p0, v1, p1}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 2003
    :cond_17
    return-void
.end method

.method private readForcedDisplaySizeAndDensityLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 13
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v10, 0x0

    const/16 v8, 0x2c

    .line 9375
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v6

    const-string v7, "display_size_forced"

    invoke-static {v6, v7}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    .line 9377
    .local v4, "sizeStr":Ljava/lang/String;
    if-eqz v4, :cond_17

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v6

    if-nez v6, :cond_1d

    .line 9378
    :cond_17
    const-string v6, "ro.config.size_override"

    invoke-static {v6, v10}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    .line 9380
    :cond_1d
    if-eqz v4, :cond_77

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v6

    if-lez v6, :cond_77

    .line 9381
    invoke-virtual {v4, v8}, Ljava/lang/String;->indexOf(I)I

    move-result v3

    .line 9382
    .local v3, "pos":I
    if-lez v3, :cond_77

    invoke-virtual {v4, v8}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v6

    if-ne v6, v3, :cond_77

    .line 9385
    const/4 v6, 0x0

    :try_start_32
    invoke-virtual {v4, v6, v3}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v5

    .line 9386
    .local v5, "width":I
    add-int/lit8 v6, v3, 0x1

    invoke-virtual {v4, v6}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v2

    .line 9387
    .local v2, "height":I
    iget-object v7, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v7
    :try_end_47
    .catch Ljava/lang/NumberFormatException; {:try_start_32 .. :try_end_47} :catch_c3

    .line 9388
    :try_start_47
    iget v6, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    if-ne v6, v5, :cond_4f

    iget v6, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    if-eq v6, v2, :cond_76

    .line 9390
    :cond_4f
    const-string v6, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "FORCED DISPLAY SIZE: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string/jumbo v9, "x"

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9391
    iput v5, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 9392
    iput v2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 9394
    :cond_76
    monitor-exit v7
    :try_end_77
    .catchall {:try_start_47 .. :try_end_77} :catchall_c0

    .line 9399
    .end local v2    # "height":I
    .end local v3    # "pos":I
    .end local v5    # "width":I
    :cond_77
    :goto_77
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v6

    const-string v7, "display_density_forced"

    invoke-static {v6, v7}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 9401
    .local v1, "densityStr":Ljava/lang/String;
    if-eqz v1, :cond_8b

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v6

    if-nez v6, :cond_91

    .line 9402
    :cond_8b
    const-string v6, "ro.config.density_override"

    invoke-static {v6, v10}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    .line 9404
    :cond_91
    if-eqz v1, :cond_bf

    invoke-virtual {v1}, Ljava/lang/String;->length()I

    move-result v6

    if-lez v6, :cond_bf

    .line 9407
    :try_start_99
    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v0

    .line 9408
    .local v0, "density":I
    iget-object v7, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v7
    :try_end_a0
    .catch Ljava/lang/NumberFormatException; {:try_start_99 .. :try_end_a0} :catch_c8

    .line 9409
    :try_start_a0
    iget v6, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    if-eq v6, v0, :cond_be

    .line 9410
    const-string v6, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "FORCED DISPLAY DENSITY: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9411
    iput v0, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 9413
    :cond_be
    monitor-exit v7
    :try_end_bf
    .catchall {:try_start_a0 .. :try_end_bf} :catchall_c5

    .line 9417
    .end local v0    # "density":I
    :cond_bf
    :goto_bf
    return-void

    .line 9394
    .end local v1    # "densityStr":Ljava/lang/String;
    .restart local v2    # "height":I
    .restart local v3    # "pos":I
    .restart local v5    # "width":I
    :catchall_c0
    move-exception v6

    :try_start_c1
    monitor-exit v7
    :try_end_c2
    .catchall {:try_start_c1 .. :try_end_c2} :catchall_c0

    :try_start_c2
    throw v6
    :try_end_c3
    .catch Ljava/lang/NumberFormatException; {:try_start_c2 .. :try_end_c3} :catch_c3

    .line 9395
    .end local v2    # "height":I
    .end local v5    # "width":I
    :catch_c3
    move-exception v6

    goto :goto_77

    .line 9413
    .end local v3    # "pos":I
    .restart local v0    # "density":I
    .restart local v1    # "densityStr":Ljava/lang/String;
    :catchall_c5
    move-exception v6

    :try_start_c6
    monitor-exit v7
    :try_end_c7
    .catchall {:try_start_c6 .. :try_end_c7} :catchall_c5

    :try_start_c7
    throw v6
    :try_end_c8
    .catch Ljava/lang/NumberFormatException; {:try_start_c7 .. :try_end_c8} :catch_c8

    .line 9414
    .end local v0    # "density":I
    :catch_c8
    move-exception v6

    goto :goto_bf
.end method

.method private rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 29
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 9662
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v20

    .line 9663
    .local v20, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    .line 9665
    .local v4, "NW":I
    const/4 v8, -0x1

    .line 9666
    .local v8, "lastBelow":I
    const/4 v9, 0x0

    .line 9668
    .local v9, "numRemoved":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    array-length v0, v0

    move/from16 v23, v0

    move/from16 v0, v23

    if-ge v0, v4, :cond_27

    .line 9669
    add-int/lit8 v23, v4, 0xa

    move/from16 v0, v23

    new-array v0, v0, [Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    .line 9673
    :cond_27
    const/4 v6, 0x0

    .line 9674
    .local v6, "i":I
    :goto_28
    if-ge v6, v4, :cond_91

    .line 9675
    move-object/from16 v0, v20

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/WindowState;

    .line 9676
    .local v18, "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v23, v0

    if-eqz v23, :cond_5f

    .line 9677
    move-object/from16 v0, v20

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/wm/WindowState;

    .line 9678
    .local v19, "win":Lcom/android/server/wm/WindowState;
    const/16 v23, 0x1

    move/from16 v0, v23

    move-object/from16 v1, v19

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    .line 9679
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    aput-object v19, v23, v9

    .line 9680
    const/16 v23, 0x1

    move/from16 v0, v23

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 9682
    add-int/lit8 v4, v4, -0x1

    .line 9683
    add-int/lit8 v9, v9, 0x1

    .line 9684
    goto :goto_28

    .line 9685
    .end local v19    # "win":Lcom/android/server/wm/WindowState;
    :cond_5f
    add-int/lit8 v23, v6, -0x1

    move/from16 v0, v23

    if-ne v8, v0, :cond_8e

    .line 9686
    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v23, v0

    const/16 v24, 0x7dd

    move/from16 v0, v23

    move/from16 v1, v24

    if-eq v0, v1, :cond_8d

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v23, v0

    const/16 v24, 0x7e9

    move/from16 v0, v23

    move/from16 v1, v24

    if-ne v0, v1, :cond_8e

    .line 9687
    :cond_8d
    move v8, v6

    .line 9690
    :cond_8e
    add-int/lit8 v6, v6, 0x1

    .line 9691
    goto :goto_28

    .line 9695
    .end local v18    # "w":Lcom/android/server/wm/WindowState;
    :cond_91
    add-int/lit8 v8, v8, 0x1

    .line 9696
    move v6, v8

    .line 9702
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/wm/DisplayContent;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 9703
    .local v5, "exitingAppTokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v5}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v3

    .line 9704
    .local v3, "NT":I
    const/4 v7, 0x0

    .local v7, "j":I
    :goto_9d
    if-ge v7, v3, :cond_b2

    .line 9705
    invoke-virtual {v5, v7}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/wm/WindowToken;

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v23

    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    move-result v6

    .line 9704
    add-int/lit8 v7, v7, 0x1

    goto :goto_9d

    .line 9709
    :cond_b2
    invoke-virtual/range {p1 .. p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v15

    .line 9710
    .local v15, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 9711
    .local v10, "numTasks":I
    const/4 v14, 0x0

    .local v14, "taskNdx":I
    :goto_bb
    if-ge v14, v10, :cond_ed

    .line 9712
    invoke-virtual {v15, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/wm/Task;

    move-object/from16 v0, v23

    iget-object v0, v0, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    move-object/from16 v17, v0

    .line 9713
    .local v17, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v11

    .line 9714
    .local v11, "numTokens":I
    const/16 v16, 0x0

    .local v16, "tokenNdx":I
    :goto_cf
    move/from16 v0, v16

    if-ge v0, v11, :cond_ea

    .line 9715
    move-object/from16 v0, v17

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/wm/AppWindowToken;

    .line 9716
    .local v22, "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v22

    invoke-direct {v0, v1, v6, v2}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    move-result v6

    .line 9714
    add-int/lit8 v16, v16, 0x1

    goto :goto_cf

    .line 9711
    .end local v22    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_ea
    add-int/lit8 v14, v14, 0x1

    goto :goto_bb

    .line 9720
    .end local v11    # "numTokens":I
    .end local v16    # "tokenNdx":I
    .end local v17    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_ed
    sub-int/2addr v6, v8

    .line 9721
    if-eq v6, v9, :cond_19b

    .line 9722
    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "Rebuild removed "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    const-string v25, " windows but added "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    new-instance v25, Ljava/lang/RuntimeException;

    const-string v26, "here"

    invoke-direct/range {v25 .. v26}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual/range {v25 .. v25}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v25

    invoke-static/range {v23 .. v25}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 9724
    const/4 v6, 0x0

    :goto_122
    if-ge v6, v9, :cond_187

    .line 9725
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRebuildTmp:[Lcom/android/server/wm/WindowState;

    move-object/from16 v23, v0

    aget-object v21, v23, v6

    .line 9726
    .local v21, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v21

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRebuilding:Z

    move/from16 v23, v0

    if-eqz v23, :cond_184

    .line 9727
    new-instance v13, Ljava/io/StringWriter;

    invoke-direct {v13}, Ljava/io/StringWriter;-><init>()V

    .line 9728
    .local v13, "sw":Ljava/io/StringWriter;
    new-instance v12, Lcom/android/internal/util/FastPrintWriter;

    const/16 v23, 0x0

    const/16 v24, 0x400

    move/from16 v0, v23

    move/from16 v1, v24

    invoke-direct {v12, v13, v0, v1}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 9729
    .local v12, "pw":Ljava/io/PrintWriter;
    const-string v23, ""

    const/16 v24, 0x1

    move-object/from16 v0, v21

    move-object/from16 v1, v23

    move/from16 v2, v24

    invoke-virtual {v0, v12, v1, v2}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 9730
    invoke-virtual {v12}, Ljava/io/PrintWriter;->flush()V

    .line 9731
    const-string v23, "WindowManager"

    new-instance v24, Ljava/lang/StringBuilder;

    invoke-direct/range {v24 .. v24}, Ljava/lang/StringBuilder;-><init>()V

    const-string v25, "This window was lost: "

    invoke-virtual/range {v24 .. v25}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v24

    move-object/from16 v0, v24

    move-object/from16 v1, v21

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v24

    invoke-virtual/range {v24 .. v24}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9732
    const-string v23, "WindowManager"

    invoke-virtual {v13}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9733
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V

    .line 9724
    .end local v12    # "pw":Ljava/io/PrintWriter;
    .end local v13    # "sw":Ljava/io/StringWriter;
    :cond_184
    add-int/lit8 v6, v6, 0x1

    goto :goto_122

    .line 9736
    .end local v21    # "ws":Lcom/android/server/wm/WindowState;
    :cond_187
    const-string v23, "WindowManager"

    const-string v24, "Current app token list:"

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9737
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpAppTokensLocked()V

    .line 9738
    const-string v23, "WindowManager"

    const-string v24, "Final window list:"

    invoke-static/range {v23 .. v24}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9739
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked()V

    .line 9741
    :cond_19b
    return-void
.end method

.method private reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    const/4 v4, 0x1

    const/4 v3, 0x0

    .line 9549
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9550
    iput-boolean v4, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 9552
    invoke-virtual {p0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v0

    .line 9553
    .local v0, "configChanged":Z
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v1}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 9554
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget v2, v2, Landroid/content/res/Configuration;->fontScale:F

    iput v2, v1, Landroid/content/res/Configuration;->fontScale:F

    .line 9555
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)Z

    move-result v1

    if-eqz v1, :cond_2b

    .line 9556
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v1, v2}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    move-result v1

    if-eqz v1, :cond_2b

    .line 9557
    const/4 v0, 0x1

    .line 9561
    :cond_2b
    if-eqz v0, :cond_39

    .line 9562
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 9563
    invoke-direct {p0, v3, v3, v3}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 9564
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x12

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 9567
    :cond_39
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 9568
    return-void
.end method

.method private reduceCompatConfigWidthSize(IILandroid/util/DisplayMetrics;II)I
    .registers 10
    .param p1, "curSize"    # I
    .param p2, "rotation"    # I
    .param p3, "dm"    # Landroid/util/DisplayMetrics;
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    .prologue
    .line 8224
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    move-result v2

    iput v2, p3, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    .line 8225
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    move-result v2

    iput v2, p3, Landroid/util/DisplayMetrics;->noncompatHeightPixels:I

    .line 8226
    const/4 v2, 0x0

    invoke-static {p3, v2}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    move-result v0

    .line 8227
    .local v0, "scale":F
    iget v2, p3, Landroid/util/DisplayMetrics;->noncompatWidthPixels:I

    int-to-float v2, v2

    div-float/2addr v2, v0

    iget v3, p3, Landroid/util/DisplayMetrics;->density:F

    div-float/2addr v2, v3

    const/high16 v3, 0x3f000000

    add-float/2addr v2, v3

    float-to-int v1, v2

    .line 8228
    .local v1, "size":I
    if-eqz p1, :cond_24

    if-ge v1, p1, :cond_25

    .line 8229
    :cond_24
    move p1, v1

    .line 8231
    :cond_25
    return p1
.end method

.method private reduceConfigLayout(IIFII)I
    .registers 12
    .param p1, "curLayout"    # I
    .param p2, "rotation"    # I
    .param p3, "density"    # F
    .param p4, "dw"    # I
    .param p5, "dh"    # I

    .prologue
    .line 8172
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    move-result v4

    .line 8173
    .local v4, "w":I
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, p4, p5, p2}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    move-result v0

    .line 8176
    .local v0, "h":I
    move v1, v4

    .line 8177
    .local v1, "longSize":I
    move v2, v0

    .line 8178
    .local v2, "shortSize":I
    if-ge v1, v2, :cond_13

    .line 8179
    move v3, v1

    .line 8180
    .local v3, "tmp":I
    move v1, v2

    .line 8181
    move v2, v3

    .line 8183
    .end local v3    # "tmp":I
    :cond_13
    int-to-float v5, v1

    div-float/2addr v5, p3

    float-to-int v1, v5

    .line 8184
    int-to-float v5, v2

    div-float/2addr v5, p3

    float-to-int v2, v5

    .line 8185
    invoke-static {p1, v1, v2}, Landroid/content/res/Configuration;->reduceScreenLayout(III)I

    move-result v5

    return v5
.end method

.method private removeWindowInnerLocked(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowState;)V
    .registers 14
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 3080
    iget-boolean v7, p2, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-eqz v7, :cond_5

    .line 3218
    :goto_4
    return-void

    .line 3085
    :cond_5
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v3, v7, -0x1

    .local v3, "i":I
    :goto_d
    if-ltz v3, :cond_41

    .line 3086
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 3087
    .local v2, "cwin":Lcom/android/server/wm/WindowState;
    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Force-removing child win "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " from container "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3089
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    invoke-direct {p0, v7, v2}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowState;)V

    .line 3085
    add-int/lit8 v3, v3, -0x1

    goto :goto_d

    .line 3092
    .end local v2    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_41
    const/4 v7, 0x1

    iput-boolean v7, p2, Lcom/android/server/wm/WindowState;->mRemoved:Z

    .line 3095
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    if-ne v7, p2, :cond_4c

    .line 3096
    const/4 v7, 0x0

    invoke-virtual {p0, v7}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    .line 3100
    :cond_4c
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-ne v7, p2, :cond_54

    .line 3101
    const/4 v7, 0x0

    invoke-virtual {p0, v7}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 3110
    :cond_54
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v7, p2}, Landroid/view/WindowManagerPolicy;->removeWindowLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 3111
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->removeLocked()V

    .line 3114
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    iget-object v8, p2, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v8}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 3115
    iget v7, p2, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v8, -0x1

    if-eq v7, v8, :cond_7b

    .line 3116
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    iget v8, p2, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v9

    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v7, v8, v9, v10}, Landroid/app/AppOpsManager;->finishOp(IILjava/lang/String;)V

    .line 3119
    :cond_7b
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 3120
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6, p2}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 3121
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v7, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 3122
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v7, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 3124
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindows:Ljava/util/ArrayList;

    invoke-virtual {v7, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 3126
    const/4 v7, 0x1

    iput-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 3129
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v7, p2, :cond_11d

    .line 3130
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 3143
    :cond_9b
    :goto_9b
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 3144
    .local v5, "token":Lcom/android/server/wm/WindowToken;
    iget-object v1, p2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 3146
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v7, v5, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, p2}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 3147
    if-eqz v1, :cond_ab

    .line 3148
    iget-object v7, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, p2}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 3154
    :cond_ab
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x834

    if-eq v7, v8, :cond_bb

    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x836

    if-ne v7, v8, :cond_c8

    .line 3155
    :cond_bb
    iget v7, p0, Lcom/android/server/wm/WindowManagerService;->mWidgetWindowCount:I

    add-int/lit8 v7, v7, -0x1

    iput v7, p0, Lcom/android/server/wm/WindowManagerService;->mWidgetWindowCount:I

    .line 3156
    iget v7, p0, Lcom/android/server/wm/WindowManagerService;->mWidgetWindowCount:I

    if-gtz v7, :cond_147

    .line 3157
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    .line 3174
    :cond_c8
    :goto_c8
    iget-object v7, v5, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-nez v7, :cond_db

    .line 3175
    iget-boolean v7, v5, Lcom/android/server/wm/WindowToken;->explicit:Z

    if-nez v7, :cond_16f

    .line 3176
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    iget-object v8, v5, Lcom/android/server/wm/WindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v7, v8}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 3182
    :cond_db
    :goto_db
    if-eqz v1, :cond_e7

    .line 3183
    iget-object v7, v1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-ne v7, p2, :cond_176

    .line 3185
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->removeStartingWindowTimeout(Lcom/android/server/wm/AppWindowToken;)V

    .line 3186
    const/4 v7, 0x0

    iput-object v7, v1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 3199
    :cond_e7
    :goto_e7
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x7dd

    if-ne v7, v8, :cond_199

    .line 3200
    const-wide/16 v7, 0x0

    iput-wide v7, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperTimeoutTime:J

    .line 3201
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    iget v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v8, v8, 0x4

    iput v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 3208
    :cond_fd
    :goto_fd
    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mInLayout:Z

    if-nez v7, :cond_115

    .line 3209
    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 3210
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v8, 0x1

    iput-boolean v8, v7, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3211
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 3212
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_115

    .line 3213
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v7}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 3217
    :cond_115
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v8, 0x1

    invoke-virtual {v7, v8}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    goto/16 :goto_4

    .line 3131
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v5    # "token":Lcom/android/server/wm/WindowToken;
    :cond_11d
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x7dc

    if-ne v7, v8, :cond_12c

    .line 3132
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v7, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto/16 :goto_9b

    .line 3134
    :cond_12c
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    if-ne v7, p2, :cond_135

    .line 3135
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    goto/16 :goto_9b

    .line 3136
    :cond_135
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

    if-ne v7, p2, :cond_13e

    .line 3137
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

    goto/16 :goto_9b

    .line 3138
    :cond_13e
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    if-ne v7, p2, :cond_9b

    .line 3139
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    goto/16 :goto_9b

    .line 3159
    .restart local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v5    # "token":Lcom/android/server/wm/WindowToken;
    :cond_147
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 3160
    .local v0, "N":I
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    .line 3161
    add-int/lit8 v4, v0, -0x1

    .local v4, "j":I
    :goto_150
    if-ltz v4, :cond_c8

    .line 3162
    invoke-virtual {v6, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object p2

    .end local p2    # "win":Lcom/android/server/wm/WindowState;
    check-cast p2, Lcom/android/server/wm/WindowState;

    .line 3163
    .restart local p2    # "win":Lcom/android/server/wm/WindowState;
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x834

    if-eq v7, v8, :cond_16b

    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v8, 0x836

    if-eq v7, v8, :cond_16b

    .line 3161
    add-int/lit8 v4, v4, -0x1

    goto :goto_150

    .line 3167
    :cond_16b
    iput-object p2, p0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    goto/16 :goto_c8

    .line 3177
    .end local v0    # "N":I
    .end local v4    # "j":I
    :cond_16f
    if-eqz v1, :cond_db

    .line 3178
    const/4 v7, 0x0

    iput-boolean v7, v1, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    goto/16 :goto_db

    .line 3187
    :cond_176
    iget-object v7, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-nez v7, :cond_187

    iget-object v7, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v7, :cond_187

    .line 3191
    const/4 v7, 0x0

    iput-object v7, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    goto/16 :goto_e7

    .line 3192
    :cond_187
    iget-object v7, v1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    const/4 v8, 0x1

    if-ne v7, v8, :cond_e7

    iget-object v7, v1, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    if-eqz v7, :cond_e7

    .line 3195
    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindow(Lcom/android/server/wm/AppWindowToken;)V

    goto/16 :goto_e7

    .line 3203
    :cond_199
    iget-object v7, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v8, 0x100000

    and-int/2addr v7, v8

    if-eqz v7, :cond_fd

    .line 3204
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    iget v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v8, v8, 0x4

    iput v8, v7, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto/16 :goto_fd
.end method

.method private sendScreenStatusToClientsLocked()V
    .registers 8

    .prologue
    .line 8707
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPowerManager:Lcom/android/server/power/PowerManagerService;

    invoke-virtual {v6}, Lcom/android/server/power/PowerManagerService;->isScreenOn()Z

    move-result v3

    .line 8708
    .local v3, "on":Z
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 8709
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_d
    if-ge v0, v1, :cond_33

    .line 8710
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 8711
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 8712
    .local v2, "numWindows":I
    const/4 v4, 0x0

    .local v4, "winNdx":I
    :goto_20
    if-ge v4, v2, :cond_30

    .line 8714
    :try_start_22
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    iget-object v6, v6, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v6, v3}, Landroid/view/IWindow;->dispatchScreenState(Z)V
    :try_end_2d
    .catch Landroid/os/RemoteException; {:try_start_22 .. :try_end_2d} :catch_34

    .line 8712
    :goto_2d
    add-int/lit8 v4, v4, 0x1

    goto :goto_20

    .line 8709
    :cond_30
    add-int/lit8 v0, v0, 0x1

    goto :goto_d

    .line 8720
    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_33
    return-void

    .line 8715
    .restart local v2    # "numWindows":I
    .restart local v4    # "winNdx":I
    .restart local v5    # "windows":Lcom/android/server/wm/WindowList;
    :catch_34
    move-exception v6

    goto :goto_2d
.end method

.method private setAnimatorDurationScale(F)V
    .registers 2
    .param p1, "scale"    # F

    .prologue
    .line 6597
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScale:F

    .line 6598
    invoke-static {p1}, Landroid/animation/ValueAnimator;->setDurationScale(F)V

    .line 6599
    return-void
.end method

.method private setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V
    .registers 6
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "density"    # I

    .prologue
    .line 9511
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Using new display density: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9513
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 9514
    :try_start_1b
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    .line 9515
    monitor-exit v1
    :try_end_1e
    .catchall {:try_start_1b .. :try_end_1e} :catchall_22

    .line 9516
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9517
    return-void

    .line 9515
    :catchall_22
    move-exception v0

    :try_start_23
    monitor-exit v1
    :try_end_24
    .catchall {:try_start_23 .. :try_end_24} :catchall_22

    throw v0
.end method

.method private setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V
    .registers 7
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "width"    # I
    .param p3, "height"    # I

    .prologue
    .line 9421
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Using new display size: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "x"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9423
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 9424
    :try_start_26
    iput p2, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    .line 9425
    iput p3, p1, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    .line 9426
    monitor-exit v1
    :try_end_2b
    .catchall {:try_start_26 .. :try_end_2b} :catchall_2f

    .line 9427
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9428
    return-void

    .line 9426
    :catchall_2f
    move-exception v0

    :try_start_30
    monitor-exit v1
    :try_end_31
    .catchall {:try_start_30 .. :try_end_31} :catchall_2f

    throw v0
.end method

.method private setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V
    .registers 13
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    .prologue
    .line 9605
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v6

    .line 9606
    .local v6, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v1, p1, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v1

    .line 9607
    :try_start_7
    iput p2, v6, Landroid/view/DisplayInfo;->overscanLeft:I

    .line 9608
    iput p3, v6, Landroid/view/DisplayInfo;->overscanTop:I

    .line 9609
    iput p4, v6, Landroid/view/DisplayInfo;->overscanRight:I

    .line 9610
    iput p5, v6, Landroid/view/DisplayInfo;->overscanBottom:I

    .line 9611
    monitor-exit v1
    :try_end_10
    .catchall {:try_start_7 .. :try_end_10} :catchall_24

    .line 9613
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    iget-object v1, v6, Landroid/view/DisplayInfo;->name:Ljava/lang/String;

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/DisplaySettings;->setOverscanLocked(Ljava/lang/String;IIII)V

    .line 9614
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplaySettings:Lcom/android/server/wm/DisplaySettings;

    invoke-virtual {v0}, Lcom/android/server/wm/DisplaySettings;->writeSettingsLocked()V

    .line 9616
    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->reconfigureDisplayLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9617
    return-void

    .line 9611
    :catchall_24
    move-exception v0

    :try_start_25
    monitor-exit v1
    :try_end_26
    .catchall {:try_start_25 .. :try_end_26} :catchall_24

    throw v0
.end method

.method private showStrictModeViolation(II)V
    .registers 15
    .param p1, "arg"    # I
    .param p2, "pid"    # I

    .prologue
    .line 7072
    if-eqz p1, :cond_3b

    const/4 v4, 0x1

    .line 7073
    .local v4, "on":Z
    :goto_3
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v9

    .line 7077
    if-eqz v4, :cond_44

    .line 7078
    const/4 v1, 0x0

    .line 7079
    .local v1, "isVisible":Z
    :try_start_9
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 7080
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_10
    if-ge v0, v2, :cond_40

    .line 7081
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 7082
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 7083
    .local v3, "numWindows":I
    const/4 v5, 0x0

    .local v5, "winNdx":I
    :goto_23
    if-ge v5, v3, :cond_38

    .line 7084
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 7085
    .local v7, "ws":Lcom/android/server/wm/WindowState;
    iget-object v8, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget v8, v8, Lcom/android/server/wm/Session;->mPid:I

    if-ne v8, p2, :cond_3d

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v8

    if-eqz v8, :cond_3d

    .line 7086
    const/4 v1, 0x1

    .line 7080
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_38
    add-int/lit8 v0, v0, 0x1

    goto :goto_10

    .line 7072
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    .end local v3    # "numWindows":I
    .end local v4    # "on":Z
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3b
    const/4 v4, 0x0

    goto :goto_3

    .line 7083
    .restart local v0    # "displayNdx":I
    .restart local v1    # "isVisible":Z
    .restart local v2    # "numDisplays":I
    .restart local v3    # "numWindows":I
    .restart local v4    # "on":Z
    .restart local v5    # "winNdx":I
    .restart local v6    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_3d
    add-int/lit8 v5, v5, 0x1

    goto :goto_23

    .line 7091
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    .end local v7    # "ws":Lcom/android/server/wm/WindowState;
    :cond_40
    if-nez v1, :cond_44

    .line 7092
    monitor-exit v9

    .line 7112
    .end local v0    # "displayNdx":I
    .end local v1    # "isVisible":Z
    .end local v2    # "numDisplays":I
    :goto_43
    return-void

    .line 7098
    :cond_44
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V
    :try_end_47
    .catchall {:try_start_9 .. :try_end_47} :catchall_66

    .line 7101
    :try_start_47
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    if-nez v8, :cond_5c

    .line 7102
    new-instance v8, Lcom/android/server/wm/StrictModeFlash;

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v10

    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    invoke-direct {v8, v10, v11}, Lcom/android/server/wm/StrictModeFlash;-><init>(Landroid/view/Display;Landroid/view/SurfaceSession;)V

    iput-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    .line 7105
    :cond_5c
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mStrictModeFlash:Lcom/android/server/wm/StrictModeFlash;

    invoke-virtual {v8, v4}, Lcom/android/server/wm/StrictModeFlash;->setVisibility(Z)V
    :try_end_61
    .catchall {:try_start_47 .. :try_end_61} :catchall_69

    .line 7107
    :try_start_61
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 7111
    monitor-exit v9

    goto :goto_43

    :catchall_66
    move-exception v8

    monitor-exit v9
    :try_end_68
    .catchall {:try_start_61 .. :try_end_68} :catchall_66

    throw v8

    .line 7107
    :catchall_69
    move-exception v8

    :try_start_6a
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v8
    :try_end_6e
    .catchall {:try_start_6a .. :try_end_6e} :catchall_66
.end method

.method private startFreezingDisplayLocked(ZII)V
    .registers 12
    .param p1, "inTransaction"    # Z
    .param p2, "exitAnim"    # I
    .param p3, "enterAnim"    # I

    .prologue
    const/4 v5, 0x0

    .line 11784
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-eqz v1, :cond_6

    .line 11835
    :cond_5
    :goto_5
    return-void

    .line 11788
    :cond_6
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v1, :cond_5

    .line 11794
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v1}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 11796
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 11797
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    .line 11798
    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 11800
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1}, Lcom/android/server/wm/InputMonitor;->freezeInputDispatchingLw()V

    .line 11805
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1, v5, v5}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 11807
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v1

    if-eqz v1, :cond_31

    .line 11808
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v1}, Lcom/android/server/wm/AppTransition;->freeze()V

    .line 11817
    :cond_31
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    .line 11818
    iput p3, p0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    .line 11819
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    .line 11820
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v7

    .line 11821
    .local v7, "displayId":I
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, v7}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v0

    .line 11823
    .local v0, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v0, :cond_48

    .line 11824
    invoke-virtual {v0}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 11828
    :cond_48
    new-instance v0, Lcom/android/server/wm/ScreenRotationAnimation;

    .end local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4}, Landroid/view/WindowManagerPolicy;->isDefaultOrientationForced()Z

    move-result v5

    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findForceLocalOrientationWindowLayer(Lcom/android/server/wm/DisplayContent;)I

    move-result v6

    move v4, p1

    invoke-direct/range {v0 .. v6}, Lcom/android/server/wm/ScreenRotationAnimation;-><init>(Landroid/content/Context;Lcom/android/server/wm/DisplayContent;Landroid/view/SurfaceSession;ZZI)V

    .line 11833
    .restart local v0    # "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v1, v7, v0}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    goto :goto_5
.end method

.method private stopFreezingDisplayLocked()V
    .registers 18

    .prologue
    .line 11838
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v2, :cond_7

    .line 11931
    :cond_6
    :goto_6
    return-void

    .line 11842
    :cond_7
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    if-nez v2, :cond_6

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    if-gtz v2, :cond_6

    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    if-nez v2, :cond_6

    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-nez v2, :cond_6

    .line 11852
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    .line 11853
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v2

    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    sub-long/2addr v2, v4

    long-to-int v2, v2

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    .line 11854
    new-instance v15, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v15, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 11855
    .local v15, "sb":Ljava/lang/StringBuilder;
    const-string v2, "Screen frozen for "

    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11856
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v2, v2

    invoke-static {v2, v3, v15}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 11857
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v2, :cond_58

    .line 11858
    const-string v2, " due to "

    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11859
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    invoke-virtual {v15, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    .line 11861
    :cond_58
    const-string v2, "WindowManager"

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11862
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x11

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 11863
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x1e

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 11868
    const/16 v16, 0x0

    .line 11870
    .local v16, "updateRotation":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v11

    .line 11871
    .local v11, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v12

    .line 11872
    .local v12, "displayId":I
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v2, v12}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v1

    .line 11874
    .local v1, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v1, :cond_11d

    invoke-virtual {v1}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v2

    if-eqz v2, :cond_11d

    .line 11878
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v13

    .line 11880
    .local v13, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v14

    .line 11881
    .local v14, "isDimming":Z
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    invoke-interface {v2, v3, v4, v14}, Landroid/view/WindowManagerPolicy;->validateRotationAnimationLw(IIZ)Z

    move-result v2

    if-nez v2, :cond_b0

    .line 11882
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    .line 11884
    :cond_b0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v3, 0x2710

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    iget v6, v13, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v7, v13, Landroid/view/DisplayInfo;->logicalHeight:I

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mExitAnimId:I

    move-object/from16 v0, p0

    iget v9, v0, Lcom/android/server/wm/WindowManagerService;->mEnterAnimId:I

    invoke-virtual/range {v1 .. v9}, Lcom/android/server/wm/ScreenRotationAnimation;->dismiss(Landroid/view/SurfaceSession;JFIIII)Z

    move-result v2

    if-eqz v2, :cond_10f

    .line 11887
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    .line 11903
    .end local v13    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v14    # "isDimming":Z
    :goto_cf
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v2}, Lcom/android/server/wm/InputMonitor;->thawInputDispatchingLw()V

    .line 11911
    const/4 v2, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v10

    .line 11918
    .local v10, "configChanged":Z
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0xf

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 11919
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0xf

    const-wide/16 v4, 0x7d0

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 11921
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mScreenFrozenLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    .line 11923
    if-eqz v16, :cond_102

    .line 11925
    const/4 v2, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v2

    or-int/2addr v10, v2

    .line 11928
    :cond_102
    if-eqz v10, :cond_6

    .line 11929
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x12

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    goto/16 :goto_6

    .line 11889
    .end local v10    # "configChanged":Z
    .restart local v13    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v14    # "isDimming":Z
    :cond_10f
    invoke-virtual {v1}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 11890
    const/4 v1, 0x0

    .line 11891
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v2, v12, v1}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 11892
    const/16 v16, 0x1

    goto :goto_cf

    .line 11895
    .end local v13    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v14    # "isDimming":Z
    :cond_11d
    if-eqz v1, :cond_12a

    .line 11896
    invoke-virtual {v1}, Lcom/android/server/wm/ScreenRotationAnimation;->kill()V

    .line 11897
    const/4 v1, 0x0

    .line 11898
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    invoke-virtual {v2, v12, v1}, Lcom/android/server/wm/WindowAnimator;->setScreenRotationAnimationLocked(ILcom/android/server/wm/ScreenRotationAnimation;)V

    .line 11900
    :cond_12a
    const/16 v16, 0x1

    goto :goto_cf
.end method

.method private tmpRemoveAppWindowsLocked(Lcom/android/server/wm/WindowToken;)Z
    .registers 9
    .param p1, "token"    # Lcom/android/server/wm/WindowToken;

    .prologue
    const/4 v5, 0x1

    .line 5719
    iget-object v6, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 5720
    .local v0, "NW":I
    if-lez v0, :cond_b

    .line 5721
    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 5723
    :cond_b
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_c
    if-ge v2, v0, :cond_3a

    .line 5724
    iget-object v6, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v6, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 5726
    .local v4, "win":Lcom/android/server/wm/WindowState;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    invoke-virtual {v6, v4}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 5727
    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 5728
    .local v3, "j":I
    :goto_23
    if-lez v3, :cond_37

    .line 5729
    add-int/lit8 v3, v3, -0x1

    .line 5730
    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 5733
    .local v1, "cwin":Lcom/android/server/wm/WindowState;
    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    invoke-virtual {v6, v1}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    goto :goto_23

    .line 5723
    .end local v1    # "cwin":Lcom/android/server/wm/WindowState;
    :cond_37
    add-int/lit8 v2, v2, 0x1

    goto :goto_c

    .line 5736
    .end local v3    # "j":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_3a
    if-lez v0, :cond_3d

    :goto_3c
    return v5

    :cond_3d
    const/4 v5, 0x0

    goto :goto_3c
.end method

.method private tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I
    .registers 9
    .param p1, "interestingPos"    # I
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1967
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 1968
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3, p2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v4

    .line 1969
    .local v4, "wpos":I
    if-ltz v4, :cond_34

    .line 1970
    if-ge v4, p1, :cond_e

    add-int/lit8 p1, p1, -0x1

    .line 1972
    :cond_e
    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 1973
    const/4 v5, 0x1

    iput-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1974
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 1975
    .local v0, "NC":I
    :cond_1a
    :goto_1a
    if-lez v0, :cond_34

    .line 1976
    add-int/lit8 v0, v0, -0x1

    .line 1977
    iget-object v5, p2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v5, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 1978
    .local v2, "cw":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v1

    .line 1979
    .local v1, "cpos":I
    if-ltz v1, :cond_1a

    .line 1980
    if-ge v1, p1, :cond_30

    add-int/lit8 p1, p1, -0x1

    .line 1983
    :cond_30
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    goto :goto_1a

    .line 1987
    .end local v0    # "NC":I
    .end local v1    # "cpos":I
    .end local v2    # "cw":Lcom/android/server/wm/WindowState;
    :cond_34
    return p1
.end method

.method private toBrightnessOverride(F)I
    .registers 3
    .param p1, "value"    # F

    .prologue
    .line 11352
    const/high16 v0, 0x437f0000

    mul-float/2addr v0, p1

    float-to-int v0, v0

    return v0
.end method

.method private updateAllDrawnLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 13
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 10705
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v4

    .line 10706
    .local v4, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 10707
    .local v1, "numTasks":I
    const/4 v3, 0x0

    .local v3, "taskNdx":I
    :goto_9
    if-ge v3, v1, :cond_42

    .line 10708
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/Task;

    iget-object v6, v8, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 10709
    .local v6, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v2

    .line 10710
    .local v2, "numTokens":I
    const/4 v5, 0x0

    .local v5, "tokenNdx":I
    :goto_18
    if-ge v5, v2, :cond_3f

    .line 10711
    invoke-virtual {v6, v5}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/AppWindowToken;

    .line 10712
    .local v7, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v8, v7, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-nez v8, :cond_3c

    .line 10713
    iget v0, v7, Lcom/android/server/wm/AppWindowToken;->numInterestingWindows:I

    .line 10714
    .local v0, "numInteresting":I
    if-lez v0, :cond_3c

    iget v8, v7, Lcom/android/server/wm/AppWindowToken;->numDrawnWindows:I

    if-lt v8, v0, :cond_3c

    .line 10719
    const/4 v8, 0x1

    iput-boolean v8, v7, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 10720
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v9, 0x20

    iget-object v10, v7, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v8, v9, v10}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v8

    invoke-virtual {v8}, Landroid/os/Message;->sendToTarget()V

    .line 10710
    .end local v0    # "numInteresting":I
    :cond_3c
    add-int/lit8 v5, v5, 0x1

    goto :goto_18

    .line 10707
    .end local v7    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_3f
    add-int/lit8 v3, v3, 0x1

    goto :goto_9

    .line 10725
    .end local v2    # "numTokens":I
    .end local v5    # "tokenNdx":I
    .end local v6    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_42
    return-void
.end method

.method private updateFocusedWindowLocked(IZ)Z
    .registers 15
    .param p1, "mode"    # I
    .param p2, "updateInputWindows"    # Z

    .prologue
    const-wide/16 v10, 0x20

    const/4 v9, 0x3

    const/4 v5, 0x0

    const/4 v8, 0x2

    const/4 v6, 0x1

    .line 11626
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 11627
    .local v3, "newFocus":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eq v7, v3, :cond_70

    .line 11628
    const-string/jumbo v7, "wmUpdateFocus"

    invoke-static {v10, v11, v7}, Landroid/os/Trace;->traceBegin(JLjava/lang/String;)V

    .line 11631
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 11632
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 11635
    invoke-virtual {p0, v6}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    .line 11639
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 11640
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eq p1, v6, :cond_2a

    if-eq p1, v9, :cond_2a

    move v5, v6

    :cond_2a
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v2

    .line 11643
    .local v2, "imWindowChanged":Z
    if-eqz v2, :cond_36

    .line 11644
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 11645
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->computeFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v3

    .line 11650
    :cond_36
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 11651
    .local v4, "oldFocus":Lcom/android/server/wm/WindowState;
    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    .line 11652
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 11653
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v5, v4, v3}, Landroid/view/WindowManagerPolicy;->focusChangedLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)I

    move-result v1

    .line 11655
    .local v1, "focusChanged":I
    if-eqz v2, :cond_52

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eq v4, v5, :cond_52

    .line 11657
    if-ne p1, v8, :cond_66

    .line 11658
    invoke-direct {p0, v0, v6, p2}, Lcom/android/server/wm/WindowManagerService;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 11659
    and-int/lit8 v1, v1, -0x2

    .line 11667
    :cond_52
    :goto_52
    and-int/lit8 v5, v1, 0x1

    if-eqz v5, :cond_5d

    .line 11669
    iput-boolean v6, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 11670
    if-ne p1, v8, :cond_5d

    .line 11671
    invoke-direct {p0, v0, v6, p2}, Lcom/android/server/wm/WindowManagerService;->performLayoutLockedInner(Lcom/android/server/wm/DisplayContent;ZZ)V

    .line 11675
    :cond_5d
    if-eq p1, v6, :cond_62

    .line 11678
    invoke-direct {p0, p2}, Lcom/android/server/wm/WindowManagerService;->finishUpdateFocusedWindowAfterAssignLayersLocked(Z)V

    .line 11681
    :cond_62
    invoke-static {v10, v11}, Landroid/os/Trace;->traceEnd(J)V

    .line 11684
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "focusChanged":I
    .end local v2    # "imWindowChanged":Z
    .end local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :goto_65
    return v6

    .line 11660
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v1    # "focusChanged":I
    .restart local v2    # "imWindowChanged":Z
    .restart local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :cond_66
    if-ne p1, v9, :cond_52

    .line 11663
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    invoke-direct {p0, v5}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    goto :goto_52

    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "focusChanged":I
    .end local v2    # "imWindowChanged":Z
    .end local v4    # "oldFocus":Lcom/android/server/wm/WindowState;
    :cond_70
    move v6, v5

    .line 11684
    goto :goto_65
.end method

.method private updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .registers 11
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    .prologue
    const/4 v7, 0x1

    const/4 v6, 0x0

    .line 4624
    const/4 v2, 0x0

    .line 4626
    .local v2, "config":Landroid/content/res/Configuration;
    invoke-virtual {p0, v6}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v4

    if-eqz v4, :cond_1b

    .line 4627
    if-eqz p2, :cond_16

    .line 4628
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 4629
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_16

    .line 4630
    const/16 v4, 0x80

    invoke-virtual {p0, v1, v4}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;I)V

    .line 4633
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_16
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;

    move-result-object v2

    .line 4659
    :cond_1a
    :goto_1a
    return-object v2

    .line 4635
    :cond_1b
    if-eqz p1, :cond_1a

    .line 4640
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v4}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 4641
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    iget v5, p1, Landroid/content/res/Configuration;->fontScale:F

    iput v5, v4, Landroid/content/res/Configuration;->fontScale:F

    .line 4642
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)Z

    move-result v4

    if-eqz v4, :cond_1a

    .line 4643
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p1, v4}, Landroid/content/res/Configuration;->diff(Landroid/content/res/Configuration;)I

    move-result v4

    if-eqz v4, :cond_1a

    .line 4644
    iput-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 4645
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4646
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    iput-boolean v7, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 4647
    const/4 v4, 0x2

    new-array v0, v4, [I

    .line 4648
    .local v0, "anim":[I
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v4

    if-eqz v4, :cond_5c

    .line 4649
    aput v6, v0, v7

    aput v6, v0, v6

    .line 4653
    :goto_4d
    aget v4, v0, v6

    aget v5, v0, v7

    invoke-direct {p0, v6, v4, v5}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 4654
    new-instance v2, Landroid/content/res/Configuration;

    .end local v2    # "config":Landroid/content/res/Configuration;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTempConfiguration:Landroid/content/res/Configuration;

    invoke-direct {v2, v4}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .restart local v2    # "config":Landroid/content/res/Configuration;
    goto :goto_1a

    .line 4651
    :cond_5c
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4, v0}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    goto :goto_4d
.end method

.method private updateResizingWindows(Lcom/android/server/wm/WindowState;)V
    .registers 9
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v3, 0x1

    const/4 v4, 0x0

    .line 10491
    iget-object v2, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 10492
    .local v2, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    iget-boolean v5, p1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v5, :cond_e

    iget v5, p1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    if-eq v5, v6, :cond_28

    :cond_e
    iget v5, p1, Lcom/android/server/wm/WindowState;->mLayoutSeq:I

    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    if-ne v5, v6, :cond_92

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mConfiguration:Landroid/content/res/Configuration;

    if-eqz v5, :cond_92

    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v5

    if-eqz v5, :cond_92

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_92

    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v5, v5, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    if-eqz v5, :cond_92

    .line 10496
    :cond_28
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->setInsetsChanged()Z

    .line 10497
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v0

    .line 10507
    .local v0, "configChanged":Z
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v6, 0x30000

    and-int/2addr v5, v6

    if-eqz v5, :cond_39

    .line 10510
    const/4 v0, 0x0

    .line 10513
    :cond_39
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v5, v6}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_93

    move v1, v3

    .line 10515
    .local v1, "frameChanaged":Z
    :goto_44
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mLastFrame:Landroid/graphics/Rect;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {v5, v6}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 10516
    iget-boolean v5, p1, Lcom/android/server/wm/WindowState;->mContentInsetsChanged:Z

    if-nez v5, :cond_5b

    iget-boolean v5, p1, Lcom/android/server/wm/WindowState;->mVisibleInsetsChanged:Z

    if-nez v5, :cond_5b

    iget-boolean v5, v2, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceResized:Z

    if-nez v5, :cond_5b

    if-nez v0, :cond_5b

    if-eqz v1, :cond_95

    .line 10531
    :cond_5b
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mLastOverscanInsets:Landroid/graphics/Rect;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    invoke-virtual {v5, v6}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 10532
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mLastContentInsets:Landroid/graphics/Rect;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v5, v6}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 10533
    iget-object v5, p1, Lcom/android/server/wm/WindowState;->mLastVisibleInsets:Landroid/graphics/Rect;

    iget-object v6, p1, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v5, v6}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 10534
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V

    .line 10540
    iget-boolean v5, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-eqz v5, :cond_85

    .line 10544
    iput v3, v2, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    .line 10545
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_85

    .line 10546
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-boolean v4, v3, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 10547
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-boolean v4, v3, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 10550
    :cond_85
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v3, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_92

    .line 10554
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v3, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10567
    .end local v0    # "configChanged":Z
    .end local v1    # "frameChanaged":Z
    :cond_92
    :goto_92
    return-void

    .restart local v0    # "configChanged":Z
    :cond_93
    move v1, v4

    .line 10513
    goto :goto_44

    .line 10556
    .restart local v1    # "frameChanaged":Z
    :cond_95
    iget-boolean v3, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-eqz v3, :cond_92

    .line 10557
    invoke-virtual {p1}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v3

    if-eqz v3, :cond_92

    .line 10561
    iput-boolean v4, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 10562
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v3

    iget-wide v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    sub-long/2addr v3, v5

    long-to-int v3, v3

    iput v3, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    goto :goto_92
.end method


# virtual methods
.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZII)V
    .registers 21
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showWhenLocked"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I

    .prologue
    .line 4297
    const/4 v10, 0x0

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    invoke-virtual/range {v0 .. v10}, Lcom/android/server/wm/WindowManagerService;->addAppToken(ILandroid/view/IApplicationToken;IIIZZIILcom/samsung/android/multiwindow/MultiWindowStyle;)V

    .line 4299
    return-void
.end method

.method public addAppToken(ILandroid/view/IApplicationToken;IIIZZIILcom/samsung/android/multiwindow/MultiWindowStyle;)V
    .registers 21
    .param p1, "addPos"    # I
    .param p2, "token"    # Landroid/view/IApplicationToken;
    .param p3, "taskId"    # I
    .param p4, "stackId"    # I
    .param p5, "requestedOrientation"    # I
    .param p6, "fullscreen"    # Z
    .param p7, "showWhenLocked"    # Z
    .param p8, "userId"    # I
    .param p9, "configChanges"    # I
    .param p10, "currentMultiWindowStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .prologue
    .line 4304
    const-string v6, "android.permission.MANAGE_APP_TOKENS"

    const-string v7, "addAppToken()"

    invoke-virtual {p0, v6, v7}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-nez v6, :cond_12

    .line 4306
    new-instance v6, Ljava/lang/SecurityException;

    const-string v7, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 4317
    :cond_12
    :try_start_12
    invoke-interface {p2}, Landroid/view/IApplicationToken;->getKeyDispatchingTimeout()J
    :try_end_15
    .catch Landroid/os/RemoteException; {:try_start_12 .. :try_end_15} :catch_42

    move-result-wide v6

    const-wide/32 v8, 0xf4240

    mul-long v3, v6, v8

    .line 4323
    .local v3, "inputDispatchingTimeoutNanos":J
    :goto_1b
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 4324
    :try_start_1e
    invoke-interface {p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    invoke-virtual {p0, v6}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 4325
    .local v1, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v1, :cond_50

    .line 4326
    const-string v6, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Attempted to add existing app token: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4327
    monitor-exit v7
    :try_end_41
    .catchall {:try_start_1e .. :try_end_41} :catchall_91

    .line 4358
    :goto_41
    return-void

    .line 4318
    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v3    # "inputDispatchingTimeoutNanos":J
    :catch_42
    move-exception v2

    .line 4319
    .local v2, "ex":Landroid/os/RemoteException;
    const-string v6, "WindowManager"

    const-string v7, "Could not get dispatching timeout."

    invoke-static {v6, v7, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4320
    const-wide v3, 0x12a05f200L

    .restart local v3    # "inputDispatchingTimeoutNanos":J
    goto :goto_1b

    .line 4329
    .end local v2    # "ex":Landroid/os/RemoteException;
    .restart local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_50
    :try_start_50
    new-instance v1, Lcom/android/server/wm/AppWindowToken;

    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    invoke-direct {v1, p0, p2}, Lcom/android/server/wm/AppWindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IApplicationToken;)V

    .line 4330
    .restart local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    iput-wide v3, v1, Lcom/android/server/wm/AppWindowToken;->inputDispatchingTimeoutNanos:J

    .line 4331
    iput p3, v1, Lcom/android/server/wm/AppWindowToken;->groupId:I

    .line 4332
    move/from16 v0, p6

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 4333
    move/from16 v0, p7

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->showWhenLocked:Z

    .line 4334
    iput p5, v1, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 4335
    move/from16 v0, p9

    and-int/lit16 v6, v0, 0x480

    if-eqz v6, :cond_94

    const/4 v6, 0x1

    :goto_6a
    iput-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->layoutConfigChanges:Z

    .line 4338
    move-object/from16 v0, p10

    iput-object v0, v1, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .line 4343
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v6, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/Task;

    .line 4344
    .local v5, "task":Lcom/android/server/wm/Task;
    if-nez v5, :cond_96

    .line 4345
    move/from16 v0, p8

    invoke-direct {p0, p3, p4, v0, v1}, Lcom/android/server/wm/WindowManagerService;->createTask(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;

    move-result-object v5

    .line 4350
    :goto_80
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-interface {p2}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    invoke-virtual {v6, v8, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4353
    const/4 v6, 0x1

    iput-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 4354
    const/4 v6, 0x1

    iput-boolean v6, v1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    .line 4357
    monitor-exit v7

    goto :goto_41

    .end local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v5    # "task":Lcom/android/server/wm/Task;
    :catchall_91
    move-exception v6

    monitor-exit v7
    :try_end_93
    .catchall {:try_start_50 .. :try_end_93} :catchall_91

    throw v6

    .line 4335
    .restart local v1    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_94
    const/4 v6, 0x0

    goto :goto_6a

    .line 4347
    .restart local v5    # "task":Lcom/android/server/wm/Task;
    :cond_96
    :try_start_96
    invoke-virtual {v5, p1, v1}, Lcom/android/server/wm/Task;->addAppToken(ILcom/android/server/wm/AppWindowToken;)V
    :try_end_99
    .catchall {:try_start_96 .. :try_end_99} :catchall_91

    goto :goto_80
.end method

.method public addFakeWindow(Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;Ljava/lang/String;IIIZZZ)Landroid/view/WindowManagerPolicy$FakeWindow;
    .registers 23
    .param p1, "looper"    # Landroid/os/Looper;
    .param p2, "inputEventReceiverFactory"    # Landroid/view/InputEventReceiver$Factory;
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "windowType"    # I
    .param p5, "layoutParamsFlags"    # I
    .param p6, "layoutParamsPrivateFlags"    # I
    .param p7, "canReceiveKeys"    # Z
    .param p8, "hasFocus"    # Z
    .param p9, "touchFullscreen"    # Z

    .prologue
    .line 12067
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v12

    .line 12068
    :try_start_3
    new-instance v0, Lcom/android/server/wm/FakeWindowImpl;

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    move/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    move/from16 v10, p9

    invoke-direct/range {v0 .. v10}, Lcom/android/server/wm/FakeWindowImpl;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/Looper;Landroid/view/InputEventReceiver$Factory;Ljava/lang/String;IIIZZZ)V

    .line 12072
    .local v0, "fw":Lcom/android/server/wm/FakeWindowImpl;
    const/4 v11, 0x0

    .line 12073
    .local v11, "i":I
    :cond_1a
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFakeWindows:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-ge v11, v1, :cond_30

    .line 12074
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFakeWindows:Ljava/util/ArrayList;

    invoke-virtual {v1, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/FakeWindowImpl;

    iget v1, v1, Lcom/android/server/wm/FakeWindowImpl;->mWindowLayer:I

    iget v2, v0, Lcom/android/server/wm/FakeWindowImpl;->mWindowLayer:I

    if-gt v1, v2, :cond_1a

    .line 12078
    :cond_30
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFakeWindows:Ljava/util/ArrayList;

    invoke-virtual {v1, v11, v0}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 12079
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v2, 0x1

    invoke-virtual {v1, v2}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 12080
    monitor-exit v12

    return-object v0

    .line 12081
    .end local v0    # "fw":Lcom/android/server/wm/FakeWindowImpl;
    .end local v11    # "i":I
    :catchall_3d
    move-exception v1

    monitor-exit v12
    :try_end_3f
    .catchall {:try_start_3 .. :try_end_3f} :catchall_3d

    throw v1
.end method

.method addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V
    .registers 5
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v2, 0x1

    .line 1923
    invoke-virtual {p0, v2}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v0

    .line 1924
    .local v0, "pos":I
    if-ltz v0, :cond_1c

    .line 1925
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v1, v1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1929
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v1

    invoke-virtual {v1, v0, p1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 1930
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 1931
    add-int/lit8 v1, v0, 0x1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    .line 1937
    :goto_1b
    return-void

    .line 1934
    :cond_1c
    const/4 v1, 0x0

    iput-object v1, p1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 1935
    invoke-direct {p0, p1, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 1936
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    goto :goto_1b
.end method

.method public addTask(IIZ)V
    .registers 5
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    .prologue
    .line 6194
    const/4 v0, 0x1

    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->addTask(IIZZ)V

    .line 6195
    return-void
.end method

.method public addTask(IIZZ)V
    .registers 10
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z
    .param p4, "layoutNeeded"    # Z

    .prologue
    .line 6201
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 6202
    :try_start_3
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/Task;

    .line 6203
    .local v2, "task":Lcom/android/server/wm/Task;
    if-nez v2, :cond_f

    .line 6204
    monitor-exit v4

    .line 6219
    :goto_e
    return-void

    .line 6206
    :cond_f
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 6207
    .local v1, "stack":Lcom/android/server/wm/TaskStack;
    if-nez v1, :cond_1e

    .line 6208
    monitor-exit v4

    goto :goto_e

    .line 6218
    .end local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :catchall_1b
    move-exception v3

    monitor-exit v4
    :try_end_1d
    .catchall {:try_start_3 .. :try_end_1d} :catchall_1b

    throw v3

    .line 6210
    .restart local v1    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v2    # "task":Lcom/android/server/wm/Task;
    :cond_1e
    :try_start_1e
    invoke-virtual {v1, v2, p3}, Lcom/android/server/wm/TaskStack;->addTask(Lcom/android/server/wm/Task;Z)Z

    .line 6212
    if-eqz p4, :cond_2d

    .line 6214
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 6215
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v3, 0x1

    iput-boolean v3, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 6216
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 6218
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2d
    monitor-exit v4
    :try_end_2e
    .catchall {:try_start_1e .. :try_end_2e} :catchall_1b

    goto :goto_e
.end method

.method public addWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IILandroid/graphics/Rect;Landroid/view/InputChannel;)I
    .registers 37
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "viewVisibility"    # I
    .param p6, "displayId"    # I
    .param p7, "outContentInsets"    # Landroid/graphics/Rect;
    .param p8, "outInputChannel"    # Landroid/view/InputChannel;

    .prologue
    .line 2702
    const/4 v3, 0x1

    new-array v14, v3, [I

    .line 2703
    .local v14, "appOp":[I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    invoke-interface {v3, v0, v14}, Landroid/view/WindowManagerPolicy;->checkAddPermission(Landroid/view/WindowManager$LayoutParams;[I)I

    move-result v24

    .line 2704
    .local v24, "res":I
    if-eqz v24, :cond_12

    move/from16 v3, v24

    .line 2986
    :goto_11
    return v3

    .line 2708
    :cond_12
    const/16 v23, 0x0

    .line 2709
    .local v23, "reportNewConfig":Z
    const/4 v7, 0x0

    .line 2710
    .local v7, "attachedWindow":Lcom/android/server/wm/WindowState;
    const/16 v26, 0x0

    .line 2712
    .local v26, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v25, v0

    .line 2714
    .local v25, "type":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v27, v0

    monitor-enter v27

    .line 2715
    :try_start_24
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-nez v3, :cond_37

    .line 2716
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Display has not been initialialized"

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_32
    .catchall {:try_start_24 .. :try_end_32} :catchall_32

    .line 2978
    :catchall_32
    move-exception v3

    move-object/from16 v2, v26

    .end local v26    # "win":Lcom/android/server/wm/WindowState;
    .local v2, "win":Lcom/android/server/wm/WindowState;
    :goto_35
    :try_start_35
    monitor-exit v27
    :try_end_36
    .catchall {:try_start_35 .. :try_end_36} :catchall_265

    throw v3

    .line 2719
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .restart local v26    # "win":Lcom/android/server/wm/WindowState;
    :cond_37
    :try_start_37
    move-object/from16 v0, p0

    move/from16 v1, p6

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v12

    .line 2720
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v12, :cond_65

    .line 2721
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window to a display that does not exist: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p6

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2723
    const/16 v3, -0x9

    monitor-exit v27

    goto :goto_11

    .line 2725
    :cond_65
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/wm/Session;->mUid:I

    invoke-virtual {v12, v3}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v3

    if-nez v3, :cond_94

    .line 2726
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window to a display for which the application does not have access: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p6

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2728
    const/16 v3, -0x9

    monitor-exit v27

    goto/16 :goto_11

    .line 2731
    :cond_94
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_c6

    .line 2732
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Window "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " is already added"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2733
    const/4 v3, -0x5

    monitor-exit v27

    goto/16 :goto_11

    .line 2736
    :cond_c6
    const/16 v3, 0x3e8

    move/from16 v0, v25

    if-lt v0, v3, :cond_13c

    const/16 v3, 0x7cf

    move/from16 v0, v25

    if-gt v0, v3, :cond_13c

    .line 2737
    const/4 v3, 0x0

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3, v4, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v7

    .line 2738
    if-nez v7, :cond_106

    .line 2739
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window with token that is not a window: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2741
    const/4 v3, -0x2

    monitor-exit v27

    goto/16 :goto_11

    .line 2743
    :cond_106
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x3e8

    if-lt v3, v4, :cond_13c

    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x7cf

    if-gt v3, v4, :cond_13c

    .line 2745
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window with token that is a sub-window: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2747
    const/4 v3, -0x2

    monitor-exit v27

    goto/16 :goto_11

    .line 2751
    :cond_13c
    const/16 v3, 0x7ee

    move/from16 v0, v25

    if-ne v0, v3, :cond_153

    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isPrivate()Z

    move-result v3

    if-nez v3, :cond_153

    .line 2752
    const-string v3, "WindowManager"

    const-string v4, "Attempted to add private presentation window to a non-private display.  Aborting."

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2753
    const/4 v3, -0x8

    monitor-exit v27

    goto/16 :goto_11

    .line 2756
    :cond_153
    const/4 v13, 0x0

    .line 2757
    .local v13, "addToken":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 2758
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    if-nez v6, :cond_268

    .line 2759
    const/4 v3, 0x1

    move/from16 v0, v25

    if-lt v0, v3, :cond_195

    const/16 v3, 0x63

    move/from16 v0, v25

    if-gt v0, v3, :cond_195

    .line 2760
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add application window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2762
    const/4 v3, -0x1

    monitor-exit v27

    goto/16 :goto_11

    .line 2764
    :cond_195
    const/16 v3, 0x7db

    move/from16 v0, v25

    if-ne v0, v3, :cond_1c1

    .line 2765
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add input method window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2767
    const/4 v3, -0x1

    monitor-exit v27

    goto/16 :goto_11

    .line 2769
    :cond_1c1
    const/16 v3, 0x7dd

    move/from16 v0, v25

    if-ne v0, v3, :cond_1ed

    .line 2770
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add wallpaper window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2772
    const/4 v3, -0x1

    monitor-exit v27

    goto/16 :goto_11

    .line 2774
    :cond_1ed
    const/16 v3, 0x7e7

    move/from16 v0, v25

    if-ne v0, v3, :cond_219

    .line 2775
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add Dream window with unknown token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2777
    const/4 v3, -0x1

    monitor-exit v27

    goto/16 :goto_11

    .line 2779
    :cond_219
    new-instance v6, Lcom/android/server/wm/WindowToken;

    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, p4

    iget-object v3, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    const/4 v4, -0x1

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-direct {v6, v0, v3, v4, v5}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    .line 2780
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    const/4 v13, 0x1

    .line 2818
    :cond_227
    new-instance v2, Lcom/android/server/wm/WindowState;

    const/4 v3, 0x0

    aget v8, v14, v3

    move-object/from16 v3, p0

    move-object/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v9, p3

    move-object/from16 v10, p4

    move/from16 v11, p5

    invoke-direct/range {v2 .. v12}, Lcom/android/server/wm/WindowState;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/Session;Landroid/view/IWindow;Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/WindowState;IILandroid/view/WindowManager$LayoutParams;ILcom/android/server/wm/DisplayContent;)V
    :try_end_23b
    .catchall {:try_start_37 .. :try_end_23b} :catchall_32

    .line 2820
    .end local v26    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    :try_start_23b
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDeathRecipient:Lcom/android/server/wm/WindowState$DeathRecipient;

    if-nez v3, :cond_362

    .line 2823
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Adding window client "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " that is dead, aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2825
    const/4 v3, -0x4

    monitor-exit v27
    :try_end_263
    .catchall {:try_start_23b .. :try_end_263} :catchall_265

    goto/16 :goto_11

    .line 2978
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    .end local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "addToken":Z
    :catchall_265
    move-exception v3

    goto/16 :goto_35

    .line 2781
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    .restart local v6    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v13    # "addToken":Z
    .restart local v26    # "win":Lcom/android/server/wm/WindowState;
    :cond_268
    const/4 v3, 0x1

    move/from16 v0, v25

    if-lt v0, v3, :cond_2cc

    const/16 v3, 0x63

    move/from16 v0, v25

    if-gt v0, v3, :cond_2cc

    .line 2782
    :try_start_273
    iget-object v15, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    .line 2783
    .local v15, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v15, :cond_299

    .line 2784
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window with non-application token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2786
    const/4 v3, -0x3

    monitor-exit v27

    goto/16 :goto_11

    .line 2787
    :cond_299
    iget-boolean v3, v15, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-eqz v3, :cond_2bf

    .line 2788
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add window with exiting application token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2790
    const/4 v3, -0x4

    monitor-exit v27

    goto/16 :goto_11

    .line 2792
    :cond_2bf
    const/4 v3, 0x3

    move/from16 v0, v25

    if-ne v0, v3, :cond_227

    iget-boolean v3, v15, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    if-eqz v3, :cond_227

    .line 2796
    const/4 v3, -0x6

    monitor-exit v27

    goto/16 :goto_11

    .line 2798
    .end local v15    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_2cc
    const/16 v3, 0x7db

    move/from16 v0, v25

    if-ne v0, v3, :cond_2fe

    .line 2799
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7db

    if-eq v3, v4, :cond_227

    .line 2800
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add input method window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2802
    const/4 v3, -0x1

    monitor-exit v27

    goto/16 :goto_11

    .line 2804
    :cond_2fe
    const/16 v3, 0x7dd

    move/from16 v0, v25

    if-ne v0, v3, :cond_330

    .line 2805
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7dd

    if-eq v3, v4, :cond_227

    .line 2806
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add wallpaper window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2808
    const/4 v3, -0x1

    monitor-exit v27

    goto/16 :goto_11

    .line 2810
    :cond_330
    const/16 v3, 0x7e7

    move/from16 v0, v25

    if-ne v0, v3, :cond_227

    .line 2811
    iget v3, v6, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v4, 0x7e7

    if-eq v3, v4, :cond_227

    .line 2812
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attempted to add Dream window with bad token "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p4

    iget-object v5, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ".  Aborting."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 2814
    const/4 v3, -0x1

    monitor-exit v27
    :try_end_360
    .catchall {:try_start_273 .. :try_end_360} :catchall_32

    goto/16 :goto_11

    .line 2828
    .end local v26    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_362
    :try_start_362
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-interface {v3, v4}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    .line 2829
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    invoke-interface {v3, v0}, Landroid/view/WindowManagerPolicy;->checkShowToOwnerOnly(Landroid/view/WindowManager$LayoutParams;)Z

    move-result v3

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setShowToOwnerOnlyLocked(Z)V

    .line 2832
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getCoverMode()I

    move-result v3

    const/4 v4, 0x2

    if-ne v3, v4, :cond_394

    .line 2833
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v3}, Landroid/view/WindowManagerPolicy;->doesForceHideBySViewCover()Z

    move-result v3

    if-eqz v3, :cond_3ab

    .line 2834
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    iget-boolean v3, v3, Lcom/android/server/wm/WindowToken;->disableHideSViewCoverOnce:Z

    if-nez v3, :cond_3a5

    .line 2835
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideSViewCoverOnce:Z

    .line 2846
    :cond_394
    :goto_394
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    invoke-interface {v3, v2, v0}, Landroid/view/WindowManagerPolicy;->prepareAddWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManager$LayoutParams;)I

    move-result v24

    .line 2847
    if-eqz v24, :cond_3b6

    .line 2848
    monitor-exit v27

    move/from16 v3, v24

    goto/16 :goto_11

    .line 2837
    :cond_3a5
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x0

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideSViewCoverOnce:Z

    goto :goto_394

    .line 2840
    :cond_3ab
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x0

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->willBeHideSViewCoverOnce:Z

    .line 2841
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowToken;->disableHideSViewCoverOnce:Z

    goto :goto_394

    .line 2851
    :cond_3b6
    if-eqz p8, :cond_3e1

    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->inputFeatures:I

    and-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_3e1

    .line 2853
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->makeInputChannelName()Ljava/lang/String;

    move-result-object v20

    .line 2854
    .local v20, "name":Ljava/lang/String;
    invoke-static/range {v20 .. v20}, Landroid/view/InputChannel;->openInputChannelPair(Ljava/lang/String;)[Landroid/view/InputChannel;

    move-result-object v18

    .line 2855
    .local v18, "inputChannels":[Landroid/view/InputChannel;
    const/4 v3, 0x0

    aget-object v3, v18, v3

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setInputChannel(Landroid/view/InputChannel;)V

    .line 2856
    const/4 v3, 0x1

    aget-object v3, v18, v3

    move-object/from16 v0, p8

    invoke-virtual {v3, v0}, Landroid/view/InputChannel;->transferTo(Landroid/view/InputChannel;)V

    .line 2858
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mInputChannel:Landroid/view/InputChannel;

    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mInputWindowHandle:Lcom/android/server/input/InputWindowHandle;

    invoke-virtual {v3, v4, v5}, Lcom/android/server/input/InputManagerService;->registerInputChannel(Landroid/view/InputChannel;Lcom/android/server/input/InputWindowHandle;)V

    .line 2863
    .end local v18    # "inputChannels":[Landroid/view/InputChannel;
    .end local v20    # "name":Ljava/lang/String;
    :cond_3e1
    const/16 v24, 0x0

    .line 2865
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x834

    if-eq v3, v4, :cond_3f3

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x836

    if-ne v3, v4, :cond_3fd

    .line 2866
    :cond_3f3
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mWidgetWindowCount:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mWidgetWindowCount:I

    .line 2868
    :cond_3fd
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v21

    .line 2870
    .local v21, "origId":J
    if-eqz v13, :cond_40e

    .line 2871
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    move-object/from16 v0, p4

    iget-object v4, v0, Landroid/view/WindowManager$LayoutParams;->token:Landroid/os/IBinder;

    invoke-virtual {v3, v4, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2873
    :cond_40e
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->attach()V

    .line 2874
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-interface/range {p2 .. p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {v3, v4, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2875
    iget v3, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v4, -0x1

    if-eq v3, v4, :cond_439

    .line 2876
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    iget v4, v2, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v5

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v3, v4, v5, v8}, Landroid/app/AppOpsManager;->startOpNoThrow(IILjava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_439

    .line 2878
    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V

    .line 2882
    :cond_439
    const/4 v3, 0x3

    move/from16 v0, v25

    if-ne v0, v3, :cond_45d

    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_45d

    .line 2883
    iget-object v3, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v2, v3, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 2886
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x21

    iget-object v5, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v3, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v19

    .line 2887
    .local v19, "m":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v4, 0x2710

    move-object/from16 v0, v19

    invoke-virtual {v3, v0, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 2890
    .end local v19    # "m":Landroid/os/Message;
    :cond_45d
    const/16 v17, 0x1

    .line 2892
    .local v17, "imMayMove":Z
    const/16 v3, 0x7db

    move/from16 v0, v25

    if-ne v0, v3, :cond_4fb

    .line 2893
    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 2894
    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 2895
    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->addInputMethodWindowToListLocked(Lcom/android/server/wm/WindowState;)V

    .line 2896
    const/16 v17, 0x0

    .line 2928
    :cond_473
    :goto_473
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v4, 0x1

    iput-boolean v4, v3, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 2930
    iget-boolean v3, v12, Lcom/android/server/wm/DisplayContent;->isDefaultDisplay:Z

    if-eqz v3, :cond_58b

    .line 2931
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p4

    move-object/from16 v1, p7

    invoke-interface {v3, v0, v1}, Landroid/view/WindowManagerPolicy;->getContentInsetHintLw(Landroid/view/WindowManager$LayoutParams;Landroid/graphics/Rect;)V

    .line 2936
    :goto_487
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    if-eqz v3, :cond_48f

    .line 2937
    or-int/lit8 v24, v24, 0x1

    .line 2939
    :cond_48f
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v3, :cond_499

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-nez v3, :cond_49b

    .line 2940
    :cond_499
    or-int/lit8 v24, v24, 0x2

    .line 2943
    :cond_49b
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v3}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 2945
    const/16 v16, 0x0

    .line 2946
    .local v16, "focusChanged":Z
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->canReceiveKeys()Z

    move-result v3

    if-eqz v3, :cond_4b6

    .line 2947
    const/4 v3, 0x1

    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v16

    .line 2949
    if-eqz v16, :cond_4b6

    .line 2950
    const/16 v17, 0x0

    .line 2955
    :cond_4b6
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    .line 2958
    if-eqz v17, :cond_4c4

    .line 2959
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 2962
    :cond_4c4
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    move-object/from16 v0, p0

    invoke-direct {v0, v3}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 2966
    if-eqz v16, :cond_4d5

    .line 2967
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v3}, Lcom/android/server/wm/WindowManagerService;->finishUpdateFocusedWindowAfterAssignLayersLocked(Z)V

    .line 2969
    :cond_4d5
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 2975
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleOrAdding()Z

    move-result v3

    if-eqz v3, :cond_4ee

    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v3

    if-eqz v3, :cond_4ee

    .line 2976
    const/16 v23, 0x1

    .line 2978
    :cond_4ee
    monitor-exit v27
    :try_end_4ef
    .catchall {:try_start_362 .. :try_end_4ef} :catchall_265

    .line 2980
    if-eqz v23, :cond_4f4

    .line 2981
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    .line 2984
    :cond_4f4
    invoke-static/range {v21 .. v22}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    move/from16 v3, v24

    .line 2986
    goto/16 :goto_11

    .line 2897
    .end local v16    # "focusChanged":Z
    :cond_4fb
    const/16 v3, 0x7dc

    move/from16 v0, v25

    if-ne v0, v3, :cond_51e

    .line 2898
    :try_start_501
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2899
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 2900
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v3

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    .line 2901
    const/16 v17, 0x0

    goto/16 :goto_473

    .line 2903
    :cond_51e
    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 2904
    const/16 v3, 0x7dd

    move/from16 v0, v25

    if-ne v0, v3, :cond_538

    .line 2905
    const-wide/16 v3, 0x0

    move-object/from16 v0, p0

    iput-wide v3, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperTimeoutTime:J

    .line 2906
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto/16 :goto_473

    .line 2908
    :cond_538
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x898

    if-ne v3, v4, :cond_546

    .line 2909
    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    goto/16 :goto_473

    .line 2910
    :cond_546
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x899

    if-ne v3, v4, :cond_554

    .line 2911
    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowTraybarTarget:Lcom/android/server/wm/WindowState;

    goto/16 :goto_473

    .line 2912
    :cond_554
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x8a4

    if-ne v3, v4, :cond_562

    .line 2913
    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    goto/16 :goto_473

    .line 2915
    :cond_562
    move-object/from16 v0, p4

    iget v3, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v4, 0x100000

    and-int/2addr v3, v4

    if-eqz v3, :cond_573

    .line 2916
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto/16 :goto_473

    .line 2917
    :cond_573
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v3, :cond_473

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    iget v3, v3, Lcom/android/server/wm/WindowState;->mLayer:I

    iget v4, v2, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    if-lt v3, v4, :cond_473

    .line 2924
    iget v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v3, v3, 0x4

    iput v3, v12, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    goto/16 :goto_473

    .line 2933
    :cond_58b
    invoke-virtual/range {p7 .. p7}, Landroid/graphics/Rect;->setEmpty()V
    :try_end_58e
    .catchall {:try_start_501 .. :try_end_58e} :catchall_265

    goto/16 :goto_487
.end method

.method public addWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .prologue
    .line 8053
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8054
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 8055
    monitor-exit v1

    .line 8056
    return-void

    .line 8055
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method public addWindowToken(Landroid/os/IBinder;I)V
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I

    .prologue
    .line 4201
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string v2, "addWindowToken()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_12

    .line 4203
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4206
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4207
    :try_start_15
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 4208
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_39

    .line 4209
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to add existing input method token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4210
    monitor-exit v2

    .line 4218
    :goto_38
    return-void

    .line 4212
    :cond_39
    new-instance v0, Lcom/android/server/wm/WindowToken;

    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    const/4 v1, 0x1

    invoke-direct {v0, p0, p1, p2, v1}, Lcom/android/server/wm/WindowToken;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;IZ)V

    .line 4213
    .restart local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 4214
    const/16 v1, 0x7dd

    if-ne p2, v1, :cond_4d

    .line 4215
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4217
    :cond_4d
    monitor-exit v2

    goto :goto_38

    .end local v0    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_4f
    move-exception v1

    monitor-exit v2
    :try_end_51
    .catchall {:try_start_15 .. :try_end_51} :catchall_4f

    throw v1
.end method

.method adjustAnimationBackground(Lcom/android/server/wm/WindowStateAnimator;)I
    .registers 6
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;

    .prologue
    .line 11498
    iget-object v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 11499
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_c
    if-ltz v0, :cond_26

    .line 11500
    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 11501
    .local v1, "testWin":Lcom/android/server/wm/WindowState;
    iget-boolean v3, v1, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    if-eqz v3, :cond_23

    invoke-virtual {v1}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v3

    if-eqz v3, :cond_23

    .line 11502
    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 11505
    .end local v1    # "testWin":Lcom/android/server/wm/WindowState;
    :goto_22
    return v3

    .line 11499
    .restart local v1    # "testWin":Lcom/android/server/wm/WindowState;
    :cond_23
    add-int/lit8 v0, v0, -0x1

    goto :goto_c

    .line 11505
    .end local v1    # "testWin":Lcom/android/server/wm/WindowState;
    :cond_26
    iget v3, p1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto :goto_22
.end method

.method adjustWallpaperWindowsLocked()I
    .registers 35

    .prologue
    .line 2184
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    move-object/from16 v31, v0

    const/16 v32, 0x0

    move/from16 v0, v32

    move-object/from16 v1, v31

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 2185
    const/16 v20, 0x0

    .line 2188
    .local v20, "targetChanged":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v31

    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v8

    .line 2189
    .local v8, "displayInfo":Landroid/view/DisplayInfo;
    iget v9, v8, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 2190
    .local v9, "dw":I
    iget v7, v8, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 2194
    .local v7, "dh":I
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v30

    .line 2195
    .local v30, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v30 .. v30}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 2196
    .local v3, "N":I
    const/16 v26, 0x0

    .line 2197
    .local v26, "w":Lcom/android/server/wm/WindowState;
    const/4 v12, 0x0

    .line 2198
    .local v12, "foundW":Lcom/android/server/wm/WindowState;
    const/4 v11, 0x0

    .line 2199
    .local v11, "foundI":I
    const/16 v23, 0x0

    .line 2200
    .local v23, "topCurW":Lcom/android/server/wm/WindowState;
    const/16 v22, 0x0

    .line 2201
    .local v22, "topCurI":I
    const/16 v29, -0x1

    .line 2202
    .local v29, "windowDetachedI":I
    move v13, v3

    .line 2203
    .local v13, "i":I
    :cond_2f
    :goto_2f
    if-lez v13, :cond_ed

    .line 2204
    add-int/lit8 v13, v13, -0x1

    .line 2205
    move-object/from16 v0, v30

    invoke-virtual {v0, v13}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v26

    .end local v26    # "w":Lcom/android/server/wm/WindowState;
    check-cast v26, Lcom/android/server/wm/WindowState;

    .line 2206
    .restart local v26    # "w":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v31, v0

    const/16 v32, 0x7dd

    move/from16 v0, v31

    move/from16 v1, v32

    if-ne v0, v1, :cond_56

    .line 2207
    if-nez v23, :cond_2f

    .line 2208
    move-object/from16 v23, v26

    .line 2209
    move/from16 v22, v13

    goto :goto_2f

    .line 2213
    :cond_56
    const/16 v23, 0x0

    .line 2214
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget-object v0, v0, Lcom/android/server/wm/WindowAnimator;->mWindowDetachedWallpaper:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v26

    move-object/from16 v1, v31

    if-eq v0, v1, :cond_94

    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v31, v0

    if-eqz v31, :cond_94

    .line 2217
    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    move/from16 v31, v0

    if-eqz v31, :cond_94

    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    move-object/from16 v31, v0

    if-eqz v31, :cond_2f

    .line 2225
    :cond_94
    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v31, v0

    const/high16 v32, 0x100000

    and-int v31, v31, v32

    if-eqz v31, :cond_31b

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowState;->isOnScreen()Z

    move-result v31

    if-eqz v31, :cond_31b

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    move-object/from16 v1, v26

    if-eq v0, v1, :cond_be

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowState;->isDrawFinishedLw()Z

    move-result v31

    if-eqz v31, :cond_31b

    .line 2229
    :cond_be
    move-object/from16 v12, v26

    .line 2230
    move v11, v13

    .line 2231
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v26

    move-object/from16 v1, v31

    if-eq v0, v1, :cond_e1

    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v31, v0

    const/16 v32, 0x7d4

    move/from16 v0, v31

    move/from16 v1, v32

    if-ne v0, v1, :cond_ed

    :cond_e1
    move-object/from16 v0, v26

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v31, v0

    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v31

    if-nez v31, :cond_2f

    .line 2245
    :cond_ed
    if-nez v12, :cond_f5

    if-ltz v29, :cond_f5

    .line 2248
    move-object/from16 v12, v26

    .line 2249
    move/from16 v11, v29

    .line 2252
    :cond_f5
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    if-eq v0, v12, :cond_351

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    if-eqz v31, :cond_111

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    if-eq v0, v12, :cond_351

    .line 2259
    :cond_111
    const/16 v31, 0x0

    move-object/from16 v0, v31

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2260
    const/16 v31, 0x0

    move-object/from16 v0, v31

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2262
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v19, v0

    .line 2263
    .local v19, "oldW":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iput-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2264
    const/16 v20, 0x1

    .line 2268
    if-eqz v12, :cond_163

    if-eqz v19, :cond_163

    .line 2269
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v16

    .line 2270
    .local v16, "oldAnim":Z
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v10

    .line 2275
    .local v10, "foundAnim":Z
    if-eqz v10, :cond_163

    if-eqz v16, :cond_163

    .line 2276
    move-object/from16 v0, v30

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v17

    .line 2280
    .local v17, "oldI":I
    if-ltz v17, :cond_163

    .line 2288
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v31, v0

    if-eqz v31, :cond_331

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    move/from16 v31, v0

    if-eqz v31, :cond_331

    .line 2292
    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2293
    move-object/from16 v12, v19

    .line 2294
    move/from16 v11, v17

    .line 2333
    .end local v10    # "foundAnim":Z
    .end local v16    # "oldAnim":Z
    .end local v17    # "oldI":I
    .end local v19    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_163
    :goto_163
    if-eqz v12, :cond_389

    const/16 v25, 0x1

    .line 2334
    .local v25, "visible":Z
    :goto_167
    if-eqz v25, :cond_205

    .line 2337
    move-object/from16 v0, p0

    invoke-virtual {v0, v12}, Lcom/android/server/wm/WindowManagerService;->isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z

    move-result v25

    .line 2343
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    if-nez v31, :cond_38d

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v31, v0

    if-eqz v31, :cond_38d

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v31, v0

    :goto_18d
    move/from16 v0, v31

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    .line 2347
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v31, v0

    invoke-interface/range {v31 .. v31}, Landroid/view/WindowManagerPolicy;->getMaxWallpaperLayer()I

    move-result v31

    move/from16 v0, v31

    mul-int/lit16 v0, v0, 0x2710

    move/from16 v31, v0

    move/from16 v0, v31

    add-int/lit16 v15, v0, 0x3e8

    .line 2355
    .local v15, "maxLayer":I
    :goto_1a7
    if-lez v11, :cond_205

    .line 2356
    add-int/lit8 v31, v11, -0x1

    invoke-virtual/range {v30 .. v31}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Lcom/android/server/wm/WindowState;

    .line 2357
    .local v28, "wb":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v28

    iget v0, v0, Lcom/android/server/wm/WindowState;->mBaseLayer:I

    move/from16 v31, v0

    move/from16 v0, v31

    if-ge v0, v15, :cond_391

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    if-eq v0, v12, :cond_391

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    if-eqz v31, :cond_1db

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v32, v0

    move-object/from16 v0, v31

    move-object/from16 v1, v32

    if-eq v0, v1, :cond_391

    :cond_1db
    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v31, v0

    const/16 v32, 0x3

    move/from16 v0, v31

    move/from16 v1, v32

    if-ne v0, v1, :cond_205

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v31, v0

    if-eqz v31, :cond_205

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v31, v0

    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v32, v0

    move-object/from16 v0, v31

    move-object/from16 v1, v32

    if-eq v0, v1, :cond_391

    .line 2374
    .end local v15    # "maxLayer":I
    .end local v28    # "wb":Lcom/android/server/wm/WindowState;
    :cond_205
    if-nez v12, :cond_397

    if-eqz v23, :cond_397

    .line 2377
    move-object/from16 v12, v23

    .line 2378
    add-int/lit8 v11, v22, 0x1

    .line 2385
    :goto_20d
    if-eqz v25, :cond_27b

    .line 2386
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    move/from16 v31, v0

    const/16 v32, 0x0

    cmpl-float v31, v31, v32

    if-ltz v31, :cond_245

    .line 2387
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    move/from16 v31, v0

    move/from16 v0, v31

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    .line 2388
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    move/from16 v31, v0

    move/from16 v0, v31

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    .line 2390
    :cond_245
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    move/from16 v31, v0

    const/16 v32, 0x0

    cmpl-float v31, v31, v32

    if-ltz v31, :cond_27b

    .line 2391
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    move/from16 v31, v0

    move/from16 v0, v31

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    .line 2392
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    move/from16 v31, v0

    move/from16 v0, v31

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    .line 2398
    :cond_27b
    const/4 v4, 0x0

    .line 2399
    .local v4, "changed":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    move-object/from16 v31, v0

    invoke-virtual/range {v31 .. v31}, Ljava/util/ArrayList;->size()I

    move-result v5

    .line 2400
    .local v5, "curTokenIndex":I
    :cond_286
    if-lez v5, :cond_405

    .line 2401
    add-int/lit8 v5, v5, -0x1

    .line 2402
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Lcom/android/server/wm/WindowToken;

    .line 2403
    .local v21, "token":Lcom/android/server/wm/WindowToken;
    move-object/from16 v0, v21

    iget-boolean v0, v0, Lcom/android/server/wm/WindowToken;->hidden:Z

    move/from16 v31, v0

    move/from16 v0, v31

    move/from16 v1, v25

    if-ne v0, v1, :cond_2bc

    .line 2406
    or-int/lit8 v4, v4, 0x4

    .line 2407
    if-nez v25, :cond_3a7

    const/16 v31, 0x1

    :goto_2aa
    move/from16 v0, v31

    move-object/from16 v1, v21

    iput-boolean v0, v1, Lcom/android/server/wm/WindowToken;->hidden:Z

    .line 2410
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v31

    const/16 v32, 0x1

    move/from16 v0, v32

    move-object/from16 v1, v31

    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 2413
    :cond_2bc
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v31, v0

    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/WindowList;->size()I

    move-result v6

    .line 2414
    .local v6, "curWallpaperIndex":I
    :goto_2c6
    if-lez v6, :cond_286

    .line 2415
    add-int/lit8 v6, v6, -0x1

    .line 2416
    move-object/from16 v0, v21

    iget-object v0, v0, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    invoke-virtual {v0, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v27

    check-cast v27, Lcom/android/server/wm/WindowState;

    .line 2418
    .local v27, "wallpaper":Lcom/android/server/wm/WindowState;
    if-eqz v25, :cond_2e5

    .line 2419
    const/16 v31, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v27

    move/from16 v2, v31

    invoke-virtual {v0, v1, v9, v7, v2}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    .line 2424
    :cond_2e5
    move-object/from16 v0, p0

    move-object/from16 v1, v27

    move/from16 v2, v25

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V

    .line 2426
    move-object/from16 v0, v27

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v31, v0

    move-object/from16 v0, v27

    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v32, v0

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    move/from16 v33, v0

    add-int v32, v32, v33

    move/from16 v0, v32

    move-object/from16 v1, v31

    iput v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 2432
    move-object/from16 v0, v27

    if-ne v0, v12, :cond_3ae

    .line 2433
    add-int/lit8 v11, v11, -0x1

    .line 2434
    if-lez v11, :cond_3ab

    add-int/lit8 v31, v11, -0x1

    invoke-virtual/range {v30 .. v31}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Lcom/android/server/wm/WindowState;

    move-object/from16 v12, v31

    .line 2436
    :goto_31a
    goto :goto_2c6

    .line 2240
    .end local v4    # "changed":I
    .end local v5    # "curTokenIndex":I
    .end local v6    # "curWallpaperIndex":I
    .end local v21    # "token":Lcom/android/server/wm/WindowToken;
    .end local v25    # "visible":Z
    .end local v27    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_31b
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget-object v0, v0, Lcom/android/server/wm/WindowAnimator;->mWindowDetachedWallpaper:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    move-object/from16 v0, v26

    move-object/from16 v1, v31

    if-ne v0, v1, :cond_2f

    .line 2241
    move/from16 v29, v13

    goto/16 :goto_2f

    .line 2299
    .restart local v10    # "foundAnim":Z
    .restart local v16    # "oldAnim":Z
    .restart local v17    # "oldI":I
    .restart local v19    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_331
    move/from16 v0, v17

    if-le v11, v0, :cond_345

    .line 2304
    move-object/from16 v0, p0

    iput-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2305
    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2306
    move-object/from16 v12, v19

    .line 2307
    move/from16 v11, v17

    goto/16 :goto_163

    .line 2313
    :cond_345
    move-object/from16 v0, v19

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2314
    move-object/from16 v0, p0

    iput-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    goto/16 :goto_163

    .line 2320
    .end local v10    # "foundAnim":Z
    .end local v16    # "oldAnim":Z
    .end local v17    # "oldI":I
    .end local v19    # "oldW":Lcom/android/server/wm/WindowState;
    :cond_351
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    if-eqz v31, :cond_163

    .line 2322
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v31

    if-eqz v31, :cond_371

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v31, v0

    invoke-virtual/range {v31 .. v31}, Lcom/android/server/wm/WindowState;->isAnimatingLw()Z

    move-result v31

    if-nez v31, :cond_163

    .line 2326
    :cond_371
    const/16 v31, 0x0

    move-object/from16 v0, v31

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2327
    const/16 v31, 0x0

    move-object/from16 v0, v31

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2328
    move-object/from16 v0, p0

    iput-object v12, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2329
    const/16 v20, 0x1

    goto/16 :goto_163

    .line 2333
    :cond_389
    const/16 v25, 0x0

    goto/16 :goto_167

    .line 2343
    .restart local v25    # "visible":Z
    :cond_38d
    const/16 v31, 0x0

    goto/16 :goto_18d

    .line 2367
    .restart local v15    # "maxLayer":I
    .restart local v28    # "wb":Lcom/android/server/wm/WindowState;
    :cond_391
    move-object/from16 v12, v28

    .line 2368
    add-int/lit8 v11, v11, -0x1

    .line 2369
    goto/16 :goto_1a7

    .line 2382
    .end local v15    # "maxLayer":I
    .end local v28    # "wb":Lcom/android/server/wm/WindowState;
    :cond_397
    if-lez v11, :cond_3a5

    add-int/lit8 v31, v11, -0x1

    invoke-virtual/range {v30 .. v31}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Lcom/android/server/wm/WindowState;

    move-object/from16 v12, v31

    :goto_3a3
    goto/16 :goto_20d

    :cond_3a5
    const/4 v12, 0x0

    goto :goto_3a3

    .line 2407
    .restart local v4    # "changed":I
    .restart local v5    # "curTokenIndex":I
    .restart local v21    # "token":Lcom/android/server/wm/WindowToken;
    :cond_3a7
    const/16 v31, 0x0

    goto/16 :goto_2aa

    .line 2434
    .restart local v6    # "curWallpaperIndex":I
    .restart local v27    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_3ab
    const/4 v12, 0x0

    goto/16 :goto_31a

    .line 2442
    :cond_3ae
    move-object/from16 v0, v30

    move-object/from16 v1, v27

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v18

    .line 2443
    .local v18, "oldIndex":I
    if-ltz v18, :cond_3cd

    .line 2446
    move-object/from16 v0, v30

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->remove(I)Ljava/lang/Object;

    .line 2447
    const/16 v31, 0x1

    move/from16 v0, v31

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 2448
    move/from16 v0, v18

    if-ge v0, v11, :cond_3cd

    .line 2449
    add-int/lit8 v11, v11, -0x1

    .line 2455
    :cond_3cd
    const/4 v14, 0x0

    .line 2456
    .local v14, "insertionIndex":I
    if-eqz v25, :cond_3f2

    if-eqz v12, :cond_3f2

    .line 2457
    iget-object v0, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v24, v0

    .line 2458
    .local v24, "type":I
    const/16 v31, 0x7d4

    move/from16 v0, v24

    move/from16 v1, v31

    if-eq v0, v1, :cond_3ec

    const/16 v31, 0x7ed

    move/from16 v0, v24

    move/from16 v1, v31

    if-ne v0, v1, :cond_3f2

    .line 2459
    :cond_3ec
    move-object/from16 v0, v30

    invoke-virtual {v0, v12}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v14

    .line 2467
    .end local v24    # "type":I
    :cond_3f2
    move-object/from16 v0, v30

    move-object/from16 v1, v27

    invoke-virtual {v0, v14, v1}, Lcom/android/server/wm/WindowList;->add(ILjava/lang/Object;)V

    .line 2468
    const/16 v31, 0x1

    move/from16 v0, v31

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 2469
    or-int/lit8 v4, v4, 0x2

    .line 2470
    goto/16 :goto_2c6

    .line 2494
    .end local v6    # "curWallpaperIndex":I
    .end local v14    # "insertionIndex":I
    .end local v18    # "oldIndex":I
    .end local v21    # "token":Lcom/android/server/wm/WindowToken;
    .end local v27    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_405
    if-eqz v20, :cond_407

    .line 2500
    :cond_407
    return v4
.end method

.method public assignMultiWindowScale(I)V
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 12939
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 12940
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 12941
    .local v0, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_10

    .line 12942
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->assignMultiWindowScaleLocked(Lcom/android/server/wm/TaskStack;)V

    .line 12944
    :cond_10
    monitor-exit v2

    .line 12945
    return-void

    .line 12944
    .end local v0    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_12
    move-exception v1

    monitor-exit v2
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_12

    throw v1
.end method

.method public canGlobalActionsShow()Z
    .registers 2

    .prologue
    .line 6783
    invoke-static {}, Lcom/android/server/power/ShutdownThread;->canGlobalActionsShow()Z

    move-result v0

    return v0
.end method

.method public changeDisplayScale(IFFF)V
    .registers 13
    .param p1, "displayId"    # I
    .param p2, "scale"    # F
    .param p3, "offsetX"    # F
    .param p4, "offsetY"    # F

    .prologue
    const/4 v0, 0x0

    const/4 v3, 0x1

    .line 3953
    const-string v4, "android.permission.MAGNIFY_DISPLAY"

    const-string v5, "changeDisplayScale()"

    invoke-virtual {p0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_14

    .line 3955
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires MAGNIFY_DISPLAY permission."

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 3957
    :cond_14
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 3958
    :try_start_17
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getEasyOneHandScaleSpecLocked(I)Landroid/view/MagnificationSpec;

    move-result-object v2

    .line 3959
    .local v2, "spec":Landroid/view/MagnificationSpec;
    if-eqz v2, :cond_5e

    .line 3960
    iget v5, v2, Landroid/view/MagnificationSpec;->scale:F

    cmpl-float v5, v5, p2

    if-eqz v5, :cond_37

    move v1, v3

    .line 3961
    .local v1, "scaleChanged":Z
    :goto_24
    iget v5, v2, Landroid/view/MagnificationSpec;->offsetX:F

    cmpl-float v5, v5, p3

    if-nez v5, :cond_30

    iget v5, v2, Landroid/view/MagnificationSpec;->offsetY:F

    cmpl-float v5, v5, p4

    if-eqz v5, :cond_31

    :cond_30
    move v0, v3

    .line 3962
    .local v0, "offsetChanged":Z
    :cond_31
    if-nez v1, :cond_39

    if-nez v0, :cond_39

    .line 3963
    monitor-exit v4

    .line 3981
    .end local v0    # "offsetChanged":Z
    .end local v1    # "scaleChanged":Z
    :goto_36
    return-void

    :cond_37
    move v1, v0

    .line 3960
    goto :goto_24

    .line 3966
    .restart local v0    # "offsetChanged":Z
    .restart local v1    # "scaleChanged":Z
    :cond_39
    invoke-virtual {v2, p2, p3, p4}, Landroid/view/MagnificationSpec;->initialize(FFF)V

    .line 3969
    if-eqz v0, :cond_46

    .line 3970
    if-nez p1, :cond_46

    .line 3971
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v5, 0x1

    invoke-virtual {v3, v5}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 3974
    :cond_46
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    .line 3976
    const/4 v3, 0x0

    const/4 v5, 0x1

    invoke-virtual {p0, v3, v5}, Lcom/android/server/wm/WindowManagerService;->setFocusedStackFrame(ZZ)V

    .line 3977
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x64

    invoke-virtual {v3, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 3978
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x64

    const-wide/16 v6, 0x12c

    invoke-virtual {v3, v5, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 3980
    .end local v0    # "offsetChanged":Z
    .end local v1    # "scaleChanged":Z
    :cond_5e
    monitor-exit v4

    goto :goto_36

    .end local v2    # "spec":Landroid/view/MagnificationSpec;
    :catchall_60
    move-exception v3

    monitor-exit v4
    :try_end_62
    .catchall {:try_start_17 .. :try_end_62} :catchall_60

    throw v3
.end method

.method checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z
    .registers 7
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .prologue
    const/4 v1, 0x1

    .line 4171
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v3

    if-ne v2, v3, :cond_c

    .line 4184
    :cond_b
    :goto_b
    return v1

    .line 4175
    :cond_c
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2, p1}, Landroid/content/Context;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_b

    .line 4179
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 4183
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "WindowManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4184
    const/4 v1, 0x0

    goto :goto_b
.end method

.method checkDrawnWindowsLocked()V
    .registers 8

    .prologue
    const/16 v6, 0x18

    .line 11356
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_6c

    .line 11357
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "j":I
    :goto_12
    if-ltz v0, :cond_6c

    .line 11358
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/Pair;

    .line 11359
    .local v1, "pair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/WindowState;Landroid/os/IRemoteCallback;>;"
    iget-object v2, v1, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 11363
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mRemoved:Z

    if-eqz v3, :cond_53

    .line 11365
    const-string v3, "WindowManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Aborted waiting for drawn: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v1, Landroid/util/Pair;->first:Ljava/lang/Object;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11367
    :try_start_3e
    iget-object v3, v1, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v3, Landroid/os/IRemoteCallback;

    const/4 v4, 0x0

    invoke-interface {v3, v4}, Landroid/os/IRemoteCallback;->sendResult(Landroid/os/Bundle;)V
    :try_end_46
    .catch Landroid/os/RemoteException; {:try_start_3e .. :try_end_46} :catch_6f

    .line 11370
    :goto_46
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 11371
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v6, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 11357
    :cond_50
    :goto_50
    add-int/lit8 v0, v0, -0x1

    goto :goto_12

    .line 11372
    :cond_53
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-boolean v3, v3, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    if-eqz v3, :cond_50

    .line 11375
    :try_start_59
    iget-object v3, v1, Landroid/util/Pair;->second:Ljava/lang/Object;

    check-cast v3, Landroid/os/IRemoteCallback;

    const/4 v4, 0x0

    invoke-interface {v3, v4}, Landroid/os/IRemoteCallback;->sendResult(Landroid/os/Bundle;)V
    :try_end_61
    .catch Landroid/os/RemoteException; {:try_start_59 .. :try_end_61} :catch_6d

    .line 11378
    :goto_61
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 11379
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v6, v1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    goto :goto_50

    .line 11383
    .end local v0    # "j":I
    .end local v1    # "pair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/WindowState;Landroid/os/IRemoteCallback;>;"
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_6c
    return-void

    .line 11376
    .restart local v0    # "j":I
    .restart local v1    # "pair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/WindowState;Landroid/os/IRemoteCallback;>;"
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    :catch_6d
    move-exception v3

    goto :goto_61

    .line 11368
    :catch_6f
    move-exception v3

    goto :goto_46
.end method

.method public clearForcedDisplayDensity(I)V
    .registers 9
    .param p1, "displayId"    # I

    .prologue
    .line 9521
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v4, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v3, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_12

    .line 9524
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 9527
    :cond_12
    if-eqz p1, :cond_1c

    .line 9528
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Can only set the default display"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 9530
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 9532
    .local v1, "ident":J
    :try_start_20
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_43

    .line 9533
    :try_start_23
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9534
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_3b

    .line 9535
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    invoke-direct {p0, v0, v3}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 9537
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string v5, "display_density_forced"

    const-string v6, ""

    invoke-static {v3, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 9540
    :cond_3b
    monitor-exit v4
    :try_end_3c
    .catchall {:try_start_23 .. :try_end_3c} :catchall_40

    .line 9542
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9544
    return-void

    .line 9540
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_40
    move-exception v3

    :try_start_41
    monitor-exit v4
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_40

    :try_start_42
    throw v3
    :try_end_43
    .catchall {:try_start_42 .. :try_end_43} :catchall_43

    .line 9542
    :catchall_43
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public clearForcedDisplaySize(I)V
    .registers 9
    .param p1, "displayId"    # I

    .prologue
    .line 9432
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v4, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v3, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_12

    .line 9435
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 9438
    :cond_12
    if-eqz p1, :cond_1c

    .line 9439
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Can only set the default display"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 9441
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 9443
    .local v1, "ident":J
    :try_start_20
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_45

    .line 9444
    :try_start_23
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9445
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_3d

    .line 9446
    iget v3, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iget v5, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    invoke-direct {p0, v0, v3, v5}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    .line 9448
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string v5, "display_size_forced"

    const-string v6, ""

    invoke-static {v3, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 9451
    :cond_3d
    monitor-exit v4
    :try_end_3e
    .catchall {:try_start_23 .. :try_end_3e} :catchall_42

    .line 9453
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9455
    return-void

    .line 9451
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_42
    move-exception v3

    :try_start_43
    monitor-exit v4
    :try_end_44
    .catchall {:try_start_43 .. :try_end_44} :catchall_42

    :try_start_44
    throw v3
    :try_end_45
    .catchall {:try_start_44 .. :try_end_45} :catchall_45

    .line 9453
    :catchall_45
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .registers 10
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 6531
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 6532
    :try_start_3
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 6533
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_a
    if-ge v0, v1, :cond_34

    .line 6534
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 6535
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 6536
    .local v2, "numWindows":I
    const/4 v4, 0x0

    .local v4, "winNdx":I
    :goto_1d
    if-ge v4, v2, :cond_31

    .line 6537
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 6538
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v6, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z
    :try_end_27
    .catchall {:try_start_3 .. :try_end_27} :catchall_36

    if-eqz v6, :cond_2e

    .line 6540
    :try_start_29
    iget-object v6, v3, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v6, p1}, Landroid/view/IWindow;->closeSystemDialogs(Ljava/lang/String;)V
    :try_end_2e
    .catch Landroid/os/RemoteException; {:try_start_29 .. :try_end_2e} :catch_39
    .catchall {:try_start_29 .. :try_end_2e} :catchall_36

    .line 6536
    :cond_2e
    :goto_2e
    add-int/lit8 v4, v4, 0x1

    goto :goto_1d

    .line 6533
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_31
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .line 6546
    .end local v2    # "numWindows":I
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_34
    :try_start_34
    monitor-exit v7

    .line 6547
    return-void

    .line 6546
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_36
    move-exception v6

    monitor-exit v7
    :try_end_38
    .catchall {:try_start_34 .. :try_end_38} :catchall_36

    throw v6

    .line 6541
    .restart local v0    # "displayNdx":I
    .restart local v1    # "numDisplays":I
    .restart local v2    # "numWindows":I
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    .restart local v4    # "winNdx":I
    .restart local v5    # "windows":Lcom/android/server/wm/WindowList;
    :catch_39
    move-exception v6

    goto :goto_2e
.end method

.method public computeNewConfiguration()Landroid/content/res/Configuration;
    .registers 4

    .prologue
    .line 8129
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8130
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->computeNewConfigurationLocked()Landroid/content/res/Configuration;

    move-result-object v0

    .line 8131
    .local v0, "config":Landroid/content/res/Configuration;
    if-nez v0, :cond_17

    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    if-eqz v1, :cond_17

    .line 8133
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 8134
    const-string v1, "new-config"

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 8135
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 8137
    :cond_17
    monitor-exit v2

    return-object v0

    .line 8138
    .end local v0    # "config":Landroid/content/res/Configuration;
    :catchall_19
    move-exception v1

    monitor-exit v2
    :try_end_1b
    .catchall {:try_start_3 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method computeNewConfigurationLocked()Landroid/content/res/Configuration;
    .registers 3

    .prologue
    .line 8142
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    .line 8143
    .local v0, "config":Landroid/content/res/Configuration;
    const/4 v1, 0x0

    iput v1, v0, Landroid/content/res/Configuration;->fontScale:F

    .line 8144
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)Z

    move-result v1

    if-nez v1, :cond_f

    .line 8145
    const/4 v0, 0x0

    .line 8147
    .end local v0    # "config":Landroid/content/res/Configuration;
    :cond_f
    return-object v0
.end method

.method computeScreenConfigurationLocked(Landroid/content/res/Configuration;)Z
    .registers 30
    .param p1, "config"    # Landroid/content/res/Configuration;

    .prologue
    .line 8254
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-nez v3, :cond_8

    .line 8255
    const/4 v3, 0x0

    .line 8391
    :goto_7
    return v3

    .line 8259
    :cond_8
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v14

    .line 8262
    .local v14, "displayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    const/4 v8, 0x1

    if-eq v3, v8, :cond_1a

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    const/4 v8, 0x3

    if-ne v3, v8, :cond_185

    :cond_1a
    const/4 v5, 0x1

    .line 8264
    .local v5, "rotated":Z
    :goto_1b
    if-eqz v5, :cond_188

    iget v0, v14, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    move/from16 v25, v0

    .line 8266
    .local v25, "realdw":I
    :goto_21
    if-eqz v5, :cond_18e

    iget v0, v14, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    move/from16 v24, v0

    .line 8268
    .local v24, "realdh":I
    :goto_27
    move/from16 v6, v25

    .line 8269
    .local v6, "dw":I
    move/from16 v7, v24

    .line 8271
    .local v7, "dh":I
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    if-eqz v3, :cond_49

    .line 8272
    move/from16 v0, v25

    move/from16 v1, v24

    if-le v0, v1, :cond_194

    .line 8274
    move/from16 v0, v24

    int-to-float v3, v0

    const v8, 0x3fa66666

    div-float/2addr v3, v8

    float-to-int v0, v3

    move/from16 v21, v0

    .line 8275
    .local v21, "maxw":I
    move/from16 v0, v21

    move/from16 v1, v25

    if-ge v0, v1, :cond_49

    .line 8276
    move/from16 v6, v21

    .line 8287
    .end local v21    # "maxw":I
    :cond_49
    :goto_49
    if-eqz p1, :cond_52

    .line 8288
    if-gt v6, v7, :cond_1a8

    const/4 v3, 0x1

    :goto_4e
    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->orientation:I

    .line 8293
    :cond_52
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v3, v6, v7, v8}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayWidth(III)I

    move-result v11

    .line 8294
    .local v11, "appWidth":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v3, v6, v7, v8}, Landroid/view/WindowManagerPolicy;->getNonDecorDisplayHeight(III)I

    move-result v10

    .line 8295
    .local v10, "appHeight":I
    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v4

    .line 8296
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget-object v8, v14, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v8

    .line 8297
    :try_start_71
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    iput v3, v4, Landroid/view/DisplayInfo;->rotation:I

    .line 8298
    iput v6, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 8299
    iput v7, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 8300
    iget v3, v14, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    iput v3, v4, Landroid/view/DisplayInfo;->logicalDensityDpi:I

    .line 8301
    iput v11, v4, Landroid/view/DisplayInfo;->appWidth:I

    .line 8302
    iput v10, v4, Landroid/view/DisplayInfo;->appHeight:I

    .line 8303
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    sget-object v9, Landroid/content/res/CompatibilityInfo;->DEFAULT_COMPATIBILITY_INFO:Landroid/content/res/CompatibilityInfo;

    const/16 v27, 0x0

    move-object/from16 v0, v27

    invoke-virtual {v4, v3, v9, v0}, Landroid/view/DisplayInfo;->getLogicalMetrics(Landroid/util/DisplayMetrics;Landroid/content/res/CompatibilityInfo;Landroid/os/IBinder;)V

    .line 8305
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    invoke-virtual {v4, v3}, Landroid/view/DisplayInfo;->getAppMetrics(Landroid/util/DisplayMetrics;)V

    .line 8306
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerService:Lcom/android/server/display/DisplayManagerService;

    invoke-virtual {v14}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v9

    invoke-virtual {v3, v9, v4}, Lcom/android/server/display/DisplayManagerService;->setDisplayInfoOverrideFromWindowManager(ILandroid/view/DisplayInfo;)V

    .line 8308
    monitor-exit v8
    :try_end_a3
    .catchall {:try_start_71 .. :try_end_a3} :catchall_1ab

    .line 8313
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMetrics:Landroid/util/DisplayMetrics;

    .line 8314
    .local v15, "dm":Landroid/util/DisplayMetrics;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mCompatDisplayMetrics:Landroid/util/DisplayMetrics;

    invoke-static {v15, v3}, Landroid/content/res/CompatibilityInfo;->computeCompatibleScaling(Landroid/util/DisplayMetrics;Landroid/util/DisplayMetrics;)F

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    .line 8317
    if-eqz p1, :cond_224

    .line 8318
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v3, v6, v7, v8}, Landroid/view/WindowManagerPolicy;->getConfigDisplayWidth(III)I

    move-result v3

    int-to-float v3, v3

    iget v8, v15, Landroid/util/DisplayMetrics;->density:F

    div-float/2addr v3, v8

    float-to-int v3, v3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    .line 8320
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v3, v6, v7, v8}, Landroid/view/WindowManagerPolicy;->getConfigDisplayHeight(III)I

    move-result v3

    int-to-float v3, v3

    iget v8, v15, Landroid/util/DisplayMetrics;->density:F

    div-float/2addr v3, v8

    float-to-int v3, v3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    .line 8322
    iget v8, v15, Landroid/util/DisplayMetrics;->density:F

    move-object/from16 v3, p0

    move-object/from16 v9, p1

    invoke-direct/range {v3 .. v9}, Lcom/android/server/wm/WindowManagerService;->computeSizeRangesAndScreenLayout(Landroid/view/DisplayInfo;ZIIFLandroid/content/res/Configuration;)V

    .line 8324
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->screenWidthDp:I

    int-to-float v3, v3

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    div-float/2addr v3, v8

    float-to-int v3, v3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->compatScreenWidthDp:I

    .line 8325
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->screenHeightDp:I

    int-to-float v3, v3

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/wm/WindowManagerService;->mCompatibleScreenScale:F

    div-float/2addr v3, v8

    float-to-int v3, v3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->compatScreenHeightDp:I

    .line 8326
    move-object/from16 v0, p0

    invoke-direct {v0, v5, v15, v6, v7}, Lcom/android/server/wm/WindowManagerService;->computeCompatSmallestWidth(ZLandroid/util/DisplayMetrics;II)I

    move-result v3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->compatSmallestScreenWidthDp:I

    .line 8327
    iget v3, v14, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->densityDpi:I

    .line 8331
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    .line 8332
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 8333
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    .line 8335
    const/16 v18, 0x0

    .line 8336
    .local v18, "keyboardPresence":I
    const/16 v22, 0x0

    .line 8337
    .local v22, "navigationPresence":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v3}, Lcom/android/server/input/InputManagerService;->getInputDevices()[Landroid/view/InputDevice;

    move-result-object v13

    .line 8338
    .local v13, "devices":[Landroid/view/InputDevice;
    array-length v0, v13

    move/from16 v19, v0

    .line 8339
    .local v19, "len":I
    const/16 v17, 0x0

    .local v17, "i":I
    :goto_136
    move/from16 v0, v17

    move/from16 v1, v19

    if-ge v0, v1, :cond_1ce

    .line 8340
    aget-object v12, v13, v17

    .line 8341
    .local v12, "device":Landroid/view/InputDevice;
    invoke-virtual {v12}, Landroid/view/InputDevice;->isVirtual()Z

    move-result v3

    if-nez v3, :cond_182

    .line 8342
    invoke-virtual {v12}, Landroid/view/InputDevice;->getSources()I

    move-result v26

    .line 8343
    .local v26, "sources":I
    invoke-virtual {v12}, Landroid/view/InputDevice;->isExternal()Z

    move-result v3

    if-eqz v3, :cond_1ae

    const/16 v23, 0x2

    .line 8347
    .local v23, "presenceFlag":I
    :goto_150
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    if-eqz v3, :cond_1b1

    .line 8348
    move/from16 v0, v26

    and-int/lit16 v3, v0, 0x1002

    const/16 v8, 0x1002

    if-ne v3, v8, :cond_163

    .line 8350
    const/4 v3, 0x3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    .line 8356
    :cond_163
    :goto_163
    const v3, 0x10004

    and-int v3, v3, v26

    const v8, 0x10004

    if-ne v3, v8, :cond_1b7

    .line 8357
    const/4 v3, 0x3

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    .line 8358
    or-int v22, v22, v23

    .line 8365
    :cond_174
    :goto_174
    invoke-virtual {v12}, Landroid/view/InputDevice;->getKeyboardType()I

    move-result v3

    const/4 v8, 0x2

    if-ne v3, v8, :cond_182

    .line 8366
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 8367
    or-int v18, v18, v23

    .line 8339
    .end local v23    # "presenceFlag":I
    .end local v26    # "sources":I
    :cond_182
    add-int/lit8 v17, v17, 0x1

    goto :goto_136

    .line 8262
    .end local v4    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v5    # "rotated":Z
    .end local v6    # "dw":I
    .end local v7    # "dh":I
    .end local v10    # "appHeight":I
    .end local v11    # "appWidth":I
    .end local v12    # "device":Landroid/view/InputDevice;
    .end local v13    # "devices":[Landroid/view/InputDevice;
    .end local v15    # "dm":Landroid/util/DisplayMetrics;
    .end local v17    # "i":I
    .end local v18    # "keyboardPresence":I
    .end local v19    # "len":I
    .end local v22    # "navigationPresence":I
    .end local v24    # "realdh":I
    .end local v25    # "realdw":I
    :cond_185
    const/4 v5, 0x0

    goto/16 :goto_1b

    .line 8264
    .restart local v5    # "rotated":Z
    :cond_188
    iget v0, v14, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    move/from16 v25, v0

    goto/16 :goto_21

    .line 8266
    .restart local v25    # "realdw":I
    :cond_18e
    iget v0, v14, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    move/from16 v24, v0

    goto/16 :goto_27

    .line 8280
    .restart local v6    # "dw":I
    .restart local v7    # "dh":I
    .restart local v24    # "realdh":I
    :cond_194
    move/from16 v0, v25

    int-to-float v3, v0

    const v8, 0x3fa66666

    div-float/2addr v3, v8

    float-to-int v0, v3

    move/from16 v20, v0

    .line 8281
    .local v20, "maxh":I
    move/from16 v0, v20

    move/from16 v1, v24

    if-ge v0, v1, :cond_49

    .line 8282
    move/from16 v7, v20

    goto/16 :goto_49

    .line 8288
    .end local v20    # "maxh":I
    :cond_1a8
    const/4 v3, 0x2

    goto/16 :goto_4e

    .line 8308
    .restart local v4    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v10    # "appHeight":I
    .restart local v11    # "appWidth":I
    :catchall_1ab
    move-exception v3

    :try_start_1ac
    monitor-exit v8
    :try_end_1ad
    .catchall {:try_start_1ac .. :try_end_1ad} :catchall_1ab

    throw v3

    .line 8343
    .restart local v12    # "device":Landroid/view/InputDevice;
    .restart local v13    # "devices":[Landroid/view/InputDevice;
    .restart local v15    # "dm":Landroid/util/DisplayMetrics;
    .restart local v17    # "i":I
    .restart local v18    # "keyboardPresence":I
    .restart local v19    # "len":I
    .restart local v22    # "navigationPresence":I
    .restart local v26    # "sources":I
    :cond_1ae
    const/16 v23, 0x1

    goto :goto_150

    .line 8353
    .restart local v23    # "presenceFlag":I
    :cond_1b1
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->touchscreen:I

    goto :goto_163

    .line 8359
    :cond_1b7
    move/from16 v0, v26

    and-int/lit16 v3, v0, 0x201

    const/16 v8, 0x201

    if-ne v3, v8, :cond_174

    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->navigation:I

    const/4 v8, 0x1

    if-ne v3, v8, :cond_174

    .line 8361
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigation:I

    .line 8362
    or-int v22, v22, v23

    goto :goto_174

    .line 8373
    .end local v12    # "device":Landroid/view/InputDevice;
    .end local v23    # "presenceFlag":I
    .end local v26    # "sources":I
    :cond_1ce
    move-object/from16 v0, p1

    iget v3, v0, Landroid/content/res/Configuration;->keyboard:I

    const/4 v8, 0x1

    if-eq v3, v8, :cond_227

    const/16 v16, 0x1

    .line 8374
    .local v16, "hardKeyboardAvailable":Z
    :goto_1d7
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    move/from16 v0, v16

    if-eq v0, v3, :cond_1fd

    .line 8375
    move/from16 v0, v16

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    .line 8376
    move/from16 v0, v16

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardEnabled:Z

    .line 8377
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v8, 0x16

    invoke-virtual {v3, v8}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 8378
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v8, 0x16

    invoke-virtual {v3, v8}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 8380
    :cond_1fd
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardEnabled:Z

    if-nez v3, :cond_208

    .line 8381
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->keyboard:I

    .line 8385
    :cond_208
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->keyboardHidden:I

    .line 8386
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->hardKeyboardHidden:I

    .line 8387
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Landroid/content/res/Configuration;->navigationHidden:I

    .line 8388
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p1

    move/from16 v1, v18

    move/from16 v2, v22

    invoke-interface {v3, v0, v1, v2}, Landroid/view/WindowManagerPolicy;->adjustConfigurationLw(Landroid/content/res/Configuration;II)V

    .line 8391
    .end local v13    # "devices":[Landroid/view/InputDevice;
    .end local v16    # "hardKeyboardAvailable":Z
    .end local v17    # "i":I
    .end local v18    # "keyboardPresence":I
    .end local v19    # "len":I
    .end local v22    # "navigationPresence":I
    :cond_224
    const/4 v3, 0x1

    goto/16 :goto_7

    .line 8373
    .restart local v13    # "devices":[Landroid/view/InputDevice;
    .restart local v17    # "i":I
    .restart local v18    # "keyboardPresence":I
    .restart local v19    # "len":I
    .restart local v22    # "navigationPresence":I
    :cond_227
    const/16 v16, 0x0

    goto :goto_1d7
.end method

.method public convertPointToWeight(Landroid/graphics/Point;)Ljava/util/ArrayList;
    .registers 6
    .param p1, "point"    # Landroid/graphics/Point;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/graphics/Point;",
            ")",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Float;",
            ">;"
        }
    .end annotation

    .prologue
    .line 6342
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 6343
    .local v1, "tmpWeight":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Float;>;"
    new-instance v0, Landroid/graphics/Point;

    invoke-direct {v0}, Landroid/graphics/Point;-><init>()V

    .line 6344
    .local v0, "fullscreen":Landroid/graphics/Point;
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v2

    invoke-virtual {v2, v0}, Landroid/view/Display;->getSize(Landroid/graphics/Point;)V

    .line 6345
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    iget v2, v2, Landroid/content/res/Configuration;->orientation:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_39

    .line 6346
    iget v2, p1, Landroid/graphics/Point;->x:I

    int-to-float v2, v2

    iget v3, v0, Landroid/graphics/Point;->x:I

    int-to-float v3, v3

    div-float/2addr v2, v3

    invoke-static {v2}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6347
    iget v2, p1, Landroid/graphics/Point;->y:I

    int-to-float v2, v2

    iget v3, v0, Landroid/graphics/Point;->y:I

    int-to-float v3, v3

    div-float/2addr v2, v3

    invoke-static {v2}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6352
    :goto_38
    return-object v1

    .line 6349
    :cond_39
    iget v2, p1, Landroid/graphics/Point;->y:I

    int-to-float v2, v2

    iget v3, v0, Landroid/graphics/Point;->y:I

    int-to-float v3, v3

    div-float/2addr v2, v3

    invoke-static {v2}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 6350
    iget v2, p1, Landroid/graphics/Point;->x:I

    int-to-float v2, v2

    iget v3, v0, Landroid/graphics/Point;->x:I

    int-to-float v3, v3

    div-float/2addr v2, v3

    invoke-static {v2}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_38
.end method

.method copyAnimToLayoutParamsLocked()Z
    .registers 6

    .prologue
    const/4 v4, 0x1

    .line 11460
    const/4 v1, 0x0

    .line 11462
    .local v1, "doRequest":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget v0, v2, Lcom/android/server/wm/WindowAnimator;->mBulkUpdateParams:I

    .line 11463
    .local v0, "bulkUpdateParams":I
    and-int/lit8 v2, v0, 0x1

    if-eqz v2, :cond_10

    .line 11464
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    # setter for: Lcom/android/server/wm/WindowManagerService$LayoutFields;->mUpdateRotation:Z
    invoke-static {v2, v4}, Lcom/android/server/wm/WindowManagerService$LayoutFields;->access$2402(Lcom/android/server/wm/WindowManagerService$LayoutFields;Z)Z

    .line 11465
    const/4 v1, 0x1

    .line 11467
    :cond_10
    and-int/lit8 v2, v0, 0x2

    if-eqz v2, :cond_19

    .line 11468
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 11469
    const/4 v1, 0x1

    .line 11471
    :cond_19
    and-int/lit8 v2, v0, 0x4

    if-eqz v2, :cond_22

    .line 11472
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperForceHidingChanged:Z

    .line 11473
    const/4 v1, 0x1

    .line 11475
    :cond_22
    and-int/lit8 v2, v0, 0x8

    if-nez v2, :cond_3a

    .line 11476
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v3, 0x0

    iput-boolean v3, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 11484
    :cond_2b
    :goto_2b
    and-int/lit8 v2, v0, 0x10

    if-eqz v2, :cond_31

    .line 11485
    iput-boolean v4, p0, Lcom/android/server/wm/WindowManagerService;->mTurnOnScreen:Z

    .line 11487
    :cond_31
    and-int/lit8 v2, v0, 0x20

    if-eqz v2, :cond_39

    .line 11488
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperActionPending:Z

    .line 11491
    :cond_39
    return v1

    .line 11478
    :cond_3a
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v4, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 11479
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-object v3, v3, Lcom/android/server/wm/WindowAnimator;->mLastWindowFreezeSource:Ljava/lang/Object;

    iput-object v3, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mLastWindowFreezeSource:Ljava/lang/Object;

    .line 11480
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    if-eqz v2, :cond_2b

    .line 11481
    const/4 v1, 0x1

    goto :goto_2b
.end method

.method countWindowsBetween(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)I
    .registers 6
    .param p1, "from"    # Lcom/android/server/wm/WindowState;
    .param p2, "to"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v1, 0x0

    .line 1694
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v0

    .line 1696
    .local v0, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_10

    .line 1705
    :cond_f
    :goto_f
    return v1

    .line 1700
    :cond_10
    invoke-virtual {v0, p2}, Lcom/android/server/wm/WindowList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_f

    .line 1705
    invoke-virtual {v0, p2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v1

    invoke-virtual {v0, p1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v2

    sub-int/2addr v1, v2

    goto :goto_f
.end method

.method countWindowsBetweenTargetAndWidget(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)I
    .registers 9
    .param p1, "targetWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "widgetWin"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 1709
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    invoke-virtual {v5}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v4

    .line 1710
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4, p2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v2

    .line 1711
    .local v2, "topIndex":I
    const/4 v3, 0x0

    .line 1712
    .local v3, "topWinOfTopWidget":Lcom/android/server/wm/WindowState;
    move-object v3, p2

    .line 1713
    const/4 v0, 0x1

    .line 1714
    .local v0, "i":I
    add-int v5, v2, v0

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 1715
    .local v1, "tmpWin":Lcom/android/server/wm/WindowState;
    :goto_17
    if-eqz v1, :cond_29

    iget-object v5, v1, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-ne v5, p2, :cond_29

    .line 1716
    move-object v3, v1

    .line 1717
    add-int/lit8 v0, v0, 0x1

    .line 1718
    add-int v5, v2, v0

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v1

    .end local v1    # "tmpWin":Lcom/android/server/wm/WindowState;
    check-cast v1, Lcom/android/server/wm/WindowState;

    .restart local v1    # "tmpWin":Lcom/android/server/wm/WindowState;
    goto :goto_17

    .line 1720
    :cond_29
    invoke-virtual {p0, p1, v3}, Lcom/android/server/wm/WindowManagerService;->countWindowsBetween(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)I

    move-result v5

    return v5
.end method

.method public createDisplayContentLocked(Landroid/view/Display;)V
    .registers 4
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 12697
    if-nez p1, :cond_a

    .line 12698
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "getDisplayContent: display must not be null"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12700
    :cond_a
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    .line 12701
    return-void
.end method

.method public createStack(IIIF)V
    .registers 13
    .param p1, "stackId"    # I
    .param p2, "relativeStackBoxId"    # I
    .param p3, "position"    # I
    .param p4, "weight"    # F

    .prologue
    .line 6021
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 6022
    const/4 v4, 0x5

    if-gt p3, v4, :cond_2f

    const v4, 0x3dcccccd

    cmpg-float v4, p4, v4

    if-ltz v4, :cond_13

    const/high16 v4, 0x3f800000

    cmpl-float v4, p4, v4

    if-lez v4, :cond_2f

    .line 6024
    :cond_13
    :try_start_13
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "createStack: weight must be between 0.1 and 1.0, weight="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p4}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v4, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 6040
    :catchall_2c
    move-exception v4

    monitor-exit v5
    :try_end_2e
    .catchall {:try_start_13 .. :try_end_2e} :catchall_2c

    throw v4

    .line 6028
    :cond_2f
    :try_start_2f
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 6029
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_36
    if-ge v1, v2, :cond_53

    .line 6030
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 6031
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/DisplayContent;->createStack(IIIF)Lcom/android/server/wm/TaskStack;

    move-result-object v3

    .line 6033
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v3, :cond_50

    .line 6034
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4, p1, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 6035
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 6036
    monitor-exit v5

    .line 6041
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :goto_4f
    return-void

    .line 6029
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_50
    add-int/lit8 v1, v1, 0x1

    goto :goto_36

    .line 6039
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_53
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "createStack: Unable to find relativeStackBoxId="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6040
    monitor-exit v5
    :try_end_6c
    .catchall {:try_start_2f .. :try_end_6c} :catchall_2c

    goto :goto_4f
.end method

.method public createStack(IILandroid/graphics/Rect;)V
    .registers 12
    .param p1, "stackId"    # I
    .param p2, "stackType"    # I
    .param p3, "stackFrame"    # Landroid/graphics/Rect;

    .prologue
    .line 6045
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 6046
    :try_start_3
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 6047
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_a
    if-ge v1, v2, :cond_2b

    .line 6048
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 6049
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/wm/DisplayContent;->createStack(IILandroid/graphics/Rect;)Lcom/android/server/wm/TaskStack;

    move-result-object v3

    .line 6050
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v3, :cond_28

    .line 6051
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4, p1, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 6052
    const/4 v4, 0x0

    invoke-virtual {v3, p3, v4}, Lcom/android/server/wm/TaskStack;->setBounds(Landroid/graphics/Rect;Z)V

    .line 6053
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 6054
    monitor-exit v5

    .line 6059
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :goto_27
    return-void

    .line 6047
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_28
    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    .line 6057
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_2b
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "createStack: Unable to create stackId="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6058
    monitor-exit v5

    goto :goto_27

    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_45
    move-exception v4

    monitor-exit v5
    :try_end_47
    .catchall {:try_start_3 .. :try_end_47} :catchall_45

    throw v4
.end method

.method createWatermarkInTransaction()V
    .registers 12

    .prologue
    .line 11953
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;

    if-eqz v7, :cond_5

    .line 11986
    :cond_4
    :goto_4
    return-void

    .line 11957
    :cond_5
    new-instance v0, Ljava/io/File;

    const-string v7, "/system/etc/setup.conf"

    invoke-direct {v0, v7}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 11958
    .local v0, "file":Ljava/io/File;
    const/4 v1, 0x0

    .line 11959
    .local v1, "in":Ljava/io/FileInputStream;
    const/4 v3, 0x0

    .line 11961
    .local v3, "ind":Ljava/io/DataInputStream;
    :try_start_e
    new-instance v2, Ljava/io/FileInputStream;

    invoke-direct {v2, v0}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_13
    .catch Ljava/io/FileNotFoundException; {:try_start_e .. :try_end_13} :catch_54
    .catch Ljava/io/IOException; {:try_start_e .. :try_end_13} :catch_65
    .catchall {:try_start_e .. :try_end_13} :catchall_76

    .line 11962
    .end local v1    # "in":Ljava/io/FileInputStream;
    .local v2, "in":Ljava/io/FileInputStream;
    :try_start_13
    new-instance v4, Ljava/io/DataInputStream;

    invoke-direct {v4, v2}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
    :try_end_18
    .catch Ljava/io/FileNotFoundException; {:try_start_13 .. :try_end_18} :catch_95
    .catch Ljava/io/IOException; {:try_start_13 .. :try_end_18} :catch_8e
    .catchall {:try_start_13 .. :try_end_18} :catchall_87

    .line 11963
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .local v4, "ind":Ljava/io/DataInputStream;
    :try_start_18
    invoke-virtual {v4}, Ljava/io/DataInputStream;->readLine()Ljava/lang/String;

    move-result-object v5

    .line 11964
    .local v5, "line":Ljava/lang/String;
    if-eqz v5, :cond_3c

    .line 11965
    const-string v7, "%"

    invoke-virtual {v5, v7}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v6

    .line 11966
    .local v6, "toks":[Ljava/lang/String;
    if-eqz v6, :cond_3c

    array-length v7, v6

    if-lez v7, :cond_3c

    .line 11967
    new-instance v7, Lcom/android/server/wm/Watermark;

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v8

    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mRealDisplayMetrics:Landroid/util/DisplayMetrics;

    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    invoke-direct {v7, v8, v9, v10, v6}, Lcom/android/server/wm/Watermark;-><init>(Landroid/view/Display;Landroid/util/DisplayMetrics;Landroid/view/SurfaceSession;[Ljava/lang/String;)V

    iput-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWatermark:Lcom/android/server/wm/Watermark;
    :try_end_3c
    .catch Ljava/io/FileNotFoundException; {:try_start_18 .. :try_end_3c} :catch_98
    .catch Ljava/io/IOException; {:try_start_18 .. :try_end_3c} :catch_91
    .catchall {:try_start_18 .. :try_end_3c} :catchall_8a

    .line 11974
    .end local v6    # "toks":[Ljava/lang/String;
    :cond_3c
    if-eqz v4, :cond_48

    .line 11976
    :try_start_3e
    invoke-virtual {v4}, Ljava/io/DataInputStream;->close()V
    :try_end_41
    .catch Ljava/io/IOException; {:try_start_3e .. :try_end_41} :catch_44

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .line 11978
    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    .line 11977
    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catch_44
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .line 11978
    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    .line 11979
    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :cond_48
    if-eqz v2, :cond_9c

    .line 11981
    :try_start_4a
    invoke-virtual {v2}, Ljava/io/FileInputStream;->close()V
    :try_end_4d
    .catch Ljava/io/IOException; {:try_start_4a .. :try_end_4d} :catch_50

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .line 11983
    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    .line 11982
    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catch_50
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .line 11983
    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_4

    .line 11971
    .end local v5    # "line":Ljava/lang/String;
    :catch_54
    move-exception v7

    .line 11974
    :goto_55
    if-eqz v3, :cond_5d

    .line 11976
    :try_start_57
    invoke-virtual {v3}, Ljava/io/DataInputStream;->close()V
    :try_end_5a
    .catch Ljava/io/IOException; {:try_start_57 .. :try_end_5a} :catch_5b

    goto :goto_4

    .line 11977
    :catch_5b
    move-exception v7

    goto :goto_4

    .line 11979
    :cond_5d
    if-eqz v1, :cond_4

    .line 11981
    :try_start_5f
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_62
    .catch Ljava/io/IOException; {:try_start_5f .. :try_end_62} :catch_63

    goto :goto_4

    .line 11982
    :catch_63
    move-exception v7

    goto :goto_4

    .line 11972
    :catch_65
    move-exception v7

    .line 11974
    :goto_66
    if-eqz v3, :cond_6e

    .line 11976
    :try_start_68
    invoke-virtual {v3}, Ljava/io/DataInputStream;->close()V
    :try_end_6b
    .catch Ljava/io/IOException; {:try_start_68 .. :try_end_6b} :catch_6c

    goto :goto_4

    .line 11977
    :catch_6c
    move-exception v7

    goto :goto_4

    .line 11979
    :cond_6e
    if-eqz v1, :cond_4

    .line 11981
    :try_start_70
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_73
    .catch Ljava/io/IOException; {:try_start_70 .. :try_end_73} :catch_74

    goto :goto_4

    .line 11982
    :catch_74
    move-exception v7

    goto :goto_4

    .line 11974
    :catchall_76
    move-exception v7

    :goto_77
    if-eqz v3, :cond_7d

    .line 11976
    :try_start_79
    invoke-virtual {v3}, Ljava/io/DataInputStream;->close()V
    :try_end_7c
    .catch Ljava/io/IOException; {:try_start_79 .. :try_end_7c} :catch_85

    .line 11983
    :cond_7c
    :goto_7c
    throw v7

    .line 11979
    :cond_7d
    if-eqz v1, :cond_7c

    .line 11981
    :try_start_7f
    invoke-virtual {v1}, Ljava/io/FileInputStream;->close()V
    :try_end_82
    .catch Ljava/io/IOException; {:try_start_7f .. :try_end_82} :catch_83

    goto :goto_7c

    .line 11982
    :catch_83
    move-exception v8

    goto :goto_7c

    .line 11977
    :catch_85
    move-exception v8

    goto :goto_7c

    .line 11974
    .end local v1    # "in":Ljava/io/FileInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    :catchall_87
    move-exception v7

    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_77

    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catchall_8a
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_77

    .line 11972
    .end local v1    # "in":Ljava/io/FileInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    :catch_8e
    move-exception v7

    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_66

    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catch_91
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_66

    .line 11971
    .end local v1    # "in":Ljava/io/FileInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    :catch_95
    move-exception v7

    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_55

    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    :catch_98
    move-exception v7

    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto :goto_55

    .end local v1    # "in":Ljava/io/FileInputStream;
    .end local v3    # "ind":Ljava/io/DataInputStream;
    .restart local v2    # "in":Ljava/io/FileInputStream;
    .restart local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v5    # "line":Ljava/lang/String;
    :cond_9c
    move-object v3, v4

    .end local v4    # "ind":Ljava/io/DataInputStream;
    .restart local v3    # "ind":Ljava/io/DataInputStream;
    move-object v1, v2

    .end local v2    # "in":Ljava/io/FileInputStream;
    .restart local v1    # "in":Ljava/io/FileInputStream;
    goto/16 :goto_4
.end method

.method debugLayoutRepeats(Ljava/lang/String;I)V
    .registers 6
    .param p1, "msg"    # Ljava/lang/String;
    .param p2, "pendingLayoutChanges"    # I

    .prologue
    .line 12663
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutRepeatCount:I

    const/4 v1, 0x4

    if-lt v0, v1, :cond_2b

    .line 12664
    const-string v0, "WindowManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Layouts looping: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", mPendingLayoutChanges = 0x"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {p2}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 12667
    :cond_2b
    return-void
.end method

.method public detectSafeMode()Z
    .registers 14

    .prologue
    const/4 v7, 0x1

    const/4 v6, 0x0

    const/16 v12, -0x100

    const/4 v11, -0x1

    .line 8602
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v9, "enterprise_policy"

    invoke-virtual {v8, v9}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/app/enterprise/EnterpriseDeviceManager;

    .line 8604
    .local v1, "edm":Landroid/app/enterprise/EnterpriseDeviceManager;
    invoke-virtual {v1}, Landroid/app/enterprise/EnterpriseDeviceManager;->getRestrictionPolicy()Landroid/app/enterprise/RestrictionPolicy;

    move-result-object v8

    invoke-virtual {v8}, Landroid/app/enterprise/RestrictionPolicy;->isSafeModeAllowed()Z

    move-result v8

    if-nez v8, :cond_21

    .line 8605
    const-string v7, "WindowManager"

    const-string v8, "SAFE MODE is not allowed"

    invoke-static {v7, v8}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8642
    :goto_20
    return v6

    .line 8610
    :cond_21
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const-wide/16 v9, 0x3e8

    invoke-virtual {v8, v9, v10}, Lcom/android/server/wm/InputMonitor;->waitForInputDevicesReady(J)Z

    move-result v8

    if-nez v8, :cond_32

    .line 8612
    const-string v8, "WindowManager"

    const-string v9, "Devices still not ready after waiting 1000 milliseconds before attempting to detect safe mode."

    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8617
    :cond_32
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v9, 0x52

    invoke-virtual {v8, v11, v12, v9}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v2

    .line 8619
    .local v2, "menuState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v9, 0x2f

    invoke-virtual {v8, v11, v12, v9}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v3

    .line 8620
    .local v3, "sState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v9, 0x201

    const/16 v10, 0x17

    invoke-virtual {v8, v11, v9, v10}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v0

    .line 8622
    .local v0, "dpadState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const v9, 0x10004

    const/16 v10, 0x110

    invoke-virtual {v8, v11, v9, v10}, Lcom/android/server/input/InputManagerService;->getScanCodeState(III)I

    move-result v4

    .line 8624
    .local v4, "trackballState":I
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v9, 0x19

    invoke-virtual {v8, v11, v12, v9}, Lcom/android/server/input/InputManagerService;->getKeyCodeState(III)I

    move-result v5

    .line 8626
    .local v5, "volumeDownState":I
    if-gtz v2, :cond_69

    if-gtz v3, :cond_69

    if-gtz v0, :cond_69

    if-gtz v4, :cond_69

    if-lez v5, :cond_6a

    :cond_69
    move v6, v7

    :cond_6a
    iput-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 8629
    :try_start_6c
    const-string v6, "persist.sys.safemode"

    const/4 v7, 0x0

    invoke-static {v6, v7}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v6

    if-eqz v6, :cond_7f

    .line 8630
    const/4 v6, 0x1

    iput-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    .line 8631
    const-string v6, "persist.sys.safemode"

    const-string v7, ""

    invoke-static {v6, v7}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_7f
    .catch Ljava/lang/IllegalArgumentException; {:try_start_6c .. :try_end_7f} :catch_d2

    .line 8635
    :cond_7f
    :goto_7f
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    if-eqz v6, :cond_ca

    .line 8636
    const-string v6, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "SAFE MODE ENABLED (menu="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " s="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " dpad="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " trackball="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, ")"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 8641
    :goto_bf
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-boolean v7, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    invoke-interface {v6, v7}, Landroid/view/WindowManagerPolicy;->setSafeMode(Z)V

    .line 8642
    iget-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    goto/16 :goto_20

    .line 8639
    :cond_ca
    const-string v6, "WindowManager"

    const-string v7, "SAFE MODE not enabled"

    invoke-static {v6, v7}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_bf

    .line 8633
    :catch_d2
    move-exception v6

    goto :goto_7f
.end method

.method public disableKeyguard(Landroid/os/IBinder;Ljava/lang/String;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;

    .prologue
    .line 6457
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 6459
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6462
    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    const/4 v2, 0x1

    new-instance v3, Landroid/util/Pair;

    invoke-direct {v3, p1, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    invoke-virtual {v1, v2, v3}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6464
    return-void
.end method

.method public dismissCoverUIOnNextActivity()V
    .registers 2

    .prologue
    .line 13267
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissCoverUIOnNextActivity:Z

    .line 13268
    return-void
.end method

.method public dismissKeyguard()V
    .registers 3

    .prologue
    .line 6520
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 6522
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6524
    :cond_12
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 6525
    :try_start_15
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->dismissKeyguardLw()V

    .line 6526
    monitor-exit v1

    .line 6527
    return-void

    .line 6526
    :catchall_1c
    move-exception v0

    monitor-exit v1
    :try_end_1e
    .catchall {:try_start_15 .. :try_end_1e} :catchall_1c

    throw v0
.end method

.method public dispatchAirButtonHitTest(III)V
    .registers 11
    .param p1, "id"    # I
    .param p2, "x"    # I
    .param p3, "y"    # I

    .prologue
    .line 13341
    int-to-float v2, p2

    .line 13342
    .local v2, "xf":F
    int-to-float v3, p3

    .line 13344
    .local v3, "yf":F
    const/4 v4, 0x0

    invoke-direct {p0, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService;->findTargetWindow(FFLandroid/os/IBinder;)Lcom/android/server/wm/WindowState;

    move-result-object v1

    .line 13346
    .local v1, "target":Lcom/android/server/wm/WindowState;
    if-eqz v1, :cond_15

    .line 13348
    :try_start_9
    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v4, p1, p2, p3}, Landroid/view/IWindow;->dispatchAirButtonHitTest(III)V

    .line 13349
    const-string v4, "WindowManager"

    const-string v5, "called dispatchAirButtonHitTest()"

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_15
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_15} :catch_16

    .line 13354
    :cond_15
    :goto_15
    return-void

    .line 13350
    :catch_16
    move-exception v0

    .line 13351
    .local v0, "e":Ljava/lang/Exception;
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Exception"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v0}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_15
.end method

.method public dispatchSmartClipDataExtractionEvent(Lcom/samsung/android/smartclip/SmartClipDataExtractionEvent;Landroid/os/IBinder;)V
    .registers 11
    .param p1, "event"    # Lcom/samsung/android/smartclip/SmartClipDataExtractionEvent;
    .param p2, "topToken"    # Landroid/os/IBinder;

    .prologue
    const/high16 v7, 0x40000000

    .line 13319
    iget-object v0, p1, Lcom/samsung/android/smartclip/SmartClipDataExtractionEvent;->mCropRect:Landroid/graphics/Rect;

    .line 13320
    .local v0, "cropRect":Landroid/graphics/Rect;
    iget v5, v0, Landroid/graphics/Rect;->left:I

    iget v6, v0, Landroid/graphics/Rect;->right:I

    add-int/2addr v5, v6

    int-to-float v5, v5

    div-float v3, v5, v7

    .line 13321
    .local v3, "xf":F
    iget v5, v0, Landroid/graphics/Rect;->top:I

    iget v6, v0, Landroid/graphics/Rect;->bottom:I

    add-int/2addr v5, v6

    int-to-float v5, v5

    div-float v4, v5, v7

    .line 13323
    .local v4, "yf":F
    invoke-direct {p0, v3, v4, p2}, Lcom/android/server/wm/WindowManagerService;->findTargetWindow(FFLandroid/os/IBinder;)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 13325
    .local v2, "target":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_2c

    .line 13327
    if-eqz p1, :cond_20

    .line 13328
    iget v5, v2, Lcom/android/server/wm/WindowState;->mLayer:I

    iput v5, p1, Lcom/samsung/android/smartclip/SmartClipDataExtractionEvent;->mTargetWindowLayer:I

    .line 13331
    :cond_20
    :try_start_20
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v5, p1}, Landroid/view/IWindow;->dispatchSmartClipDataExtractionEvent(Lcom/samsung/android/smartclip/SmartClipDataExtractionEvent;)V

    .line 13332
    const-string v5, "WindowManager"

    const-string v6, "called dispatchSmartClipDataExtractionEvent()"

    invoke-static {v5, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2c
    .catch Ljava/lang/Exception; {:try_start_20 .. :try_end_2c} :catch_2d

    .line 13338
    :cond_2c
    :goto_2c
    return-void

    .line 13333
    :catch_2d
    move-exception v1

    .line 13334
    .local v1, "e":Ljava/lang/Exception;
    const-string v5, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Exception"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v1}, Ljava/lang/Exception;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_2c
.end method

.method dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V
    .registers 4
    .param p1, "wallpaper"    # Lcom/android/server/wm/WindowState;
    .param p2, "visible"    # Z

    .prologue
    .line 2656
    iget-boolean v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperVisible:Z

    if-eq v0, p2, :cond_b

    .line 2657
    iput-boolean p2, p1, Lcom/android/server/wm/WindowState;->mWallpaperVisible:Z

    .line 2662
    :try_start_6
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v0, p2}, Landroid/view/IWindow;->dispatchAppVisibility(Z)V
    :try_end_b
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_b} :catch_c

    .line 2666
    :cond_b
    :goto_b
    return-void

    .line 2663
    :catch_c
    move-exception v0

    goto :goto_b
.end method

.method public displayReady()V
    .registers 5

    .prologue
    .line 8646
    const/4 v1, 0x0

    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->displayReady(I)V

    .line 8648
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8649
    :try_start_7
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 8650
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->readForcedDisplaySizeAndDensityLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 8651
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    .line 8652
    monitor-exit v2
    :try_end_12
    .catchall {:try_start_7 .. :try_end_12} :catchall_38

    .line 8655
    :try_start_12
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    const/4 v2, 0x0

    invoke-interface {v1, v2}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_18
    .catch Landroid/os/RemoteException; {:try_start_12 .. :try_end_18} :catch_40

    .line 8659
    :goto_18
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8660
    :try_start_1b
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v1

    const-string v3, "android.hardware.touchscreen"

    invoke-virtual {v1, v3}, Landroid/content/pm/PackageManager;->hasSystemFeature(Ljava/lang/String;)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mIsTouchDevice:Z

    .line 8662
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->configureDisplayPolicyLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 8663
    monitor-exit v2
    :try_end_31
    .catchall {:try_start_1b .. :try_end_31} :catchall_3b

    .line 8666
    :try_start_31
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    const/4 v2, 0x0

    invoke-interface {v1, v2}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_37
    .catch Landroid/os/RemoteException; {:try_start_31 .. :try_end_37} :catch_3e

    .line 8669
    :goto_37
    return-void

    .line 8652
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_38
    move-exception v1

    :try_start_39
    monitor-exit v2
    :try_end_3a
    .catchall {:try_start_39 .. :try_end_3a} :catchall_38

    throw v1

    .line 8663
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_3b
    move-exception v1

    :try_start_3c
    monitor-exit v2
    :try_end_3d
    .catchall {:try_start_3c .. :try_end_3d} :catchall_3b

    throw v1

    .line 8667
    :catch_3e
    move-exception v1

    goto :goto_37

    .line 8656
    :catch_40
    move-exception v1

    goto :goto_18
.end method

.method public dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .registers 11
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    .line 12517
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DUMP"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_33

    .line 12519
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: can\'t dump WindowManager from from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12650
    :cond_32
    :goto_32
    return-void

    .line 12525
    :cond_33
    const/4 v5, 0x0

    .line 12527
    .local v5, "dumpAll":Z
    const/4 v4, 0x0

    .line 12528
    .local v4, "opti":I
    :goto_35
    array-length v0, p3

    if-ge v4, v0, :cond_4b

    .line 12529
    aget-object v6, p3, v4

    .line 12530
    .local v6, "opt":Ljava/lang/String;
    if-eqz v6, :cond_4b

    invoke-virtual {v6}, Ljava/lang/String;->length()I

    move-result v0

    if-lez v0, :cond_4b

    const/4 v0, 0x0

    invoke-virtual {v6, v0}, Ljava/lang/String;->charAt(I)C

    move-result v0

    const/16 v1, 0x2d

    if-eq v0, v1, :cond_6d

    .line 12560
    .end local v6    # "opt":Ljava/lang/String;
    :cond_4b
    array-length v0, p3

    if-ge v4, v0, :cond_1e8

    .line 12561
    aget-object v2, p3, v4

    .line 12562
    .local v2, "cmd":Ljava/lang/String;
    add-int/lit8 v4, v4, 0x1

    .line 12563
    const-string v0, "lastanr"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_62

    const-string v0, "l"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_f1

    .line 12564
    :cond_62
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12565
    :try_start_65
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 12566
    monitor-exit v1

    goto :goto_32

    :catchall_6a
    move-exception v0

    monitor-exit v1
    :try_end_6c
    .catchall {:try_start_65 .. :try_end_6c} :catchall_6a

    throw v0

    .line 12533
    .end local v2    # "cmd":Ljava/lang/String;
    .restart local v6    # "opt":Ljava/lang/String;
    :cond_6d
    add-int/lit8 v4, v4, 0x1

    .line 12534
    const-string v0, "-a"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_79

    .line 12535
    const/4 v5, 0x1

    goto :goto_35

    .line 12536
    :cond_79
    const-string v0, "-h"

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_d3

    .line 12537
    const-string v0, "Window manager dump options:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12538
    const-string v0, "  [-a] [-h] [cmd] ..."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12539
    const-string v0, "  cmd may be one of:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12540
    const-string v0, "    l[astanr]: last ANR information"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12541
    const-string v0, "    p[policy]: policy state"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12542
    const-string v0, "    a[animator]: animator state"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12543
    const-string v0, "    s[essions]: active sessions"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12544
    const-string v0, "    d[isplays]: active display contents"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12545
    const-string v0, "    t[okens]: token list"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12546
    const-string v0, "    w[indows]: window list"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12547
    const-string v0, "  cmd may also be a NAME to dump windows.  NAME may"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12548
    const-string v0, "    be a partial substring in a window name, a"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12549
    const-string v0, "    Window hex object identifier, or"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12550
    const-string v0, "    \"all\" for all windows, or"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12551
    const-string v0, "    \"visible\" for the visible windows."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12552
    const-string v0, "  -a: include all available server state."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_32

    .line 12555
    :cond_d3
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unknown argument: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "; use -h for help"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_35

    .line 12568
    .end local v6    # "opt":Ljava/lang/String;
    .restart local v2    # "cmd":Ljava/lang/String;
    :cond_f1
    const-string v0, "policy"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_101

    const-string v0, "p"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_10e

    .line 12569
    :cond_101
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12570
    const/4 v0, 0x1

    :try_start_105
    invoke-virtual {p0, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 12571
    monitor-exit v1

    goto/16 :goto_32

    :catchall_10b
    move-exception v0

    monitor-exit v1
    :try_end_10d
    .catchall {:try_start_105 .. :try_end_10d} :catchall_10b

    throw v0

    .line 12573
    :cond_10e
    const-string v0, "animator"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_11e

    const-string v0, "a"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_12b

    .line 12574
    :cond_11e
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12575
    const/4 v0, 0x1

    :try_start_122
    invoke-virtual {p0, p2, p3, v0}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 12576
    monitor-exit v1

    goto/16 :goto_32

    :catchall_128
    move-exception v0

    monitor-exit v1
    :try_end_12a
    .catchall {:try_start_122 .. :try_end_12a} :catchall_128

    throw v0

    .line 12578
    :cond_12b
    const-string v0, "sessions"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_13b

    const-string v0, "s"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_148

    .line 12579
    :cond_13b
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12580
    const/4 v0, 0x1

    :try_start_13f
    invoke-virtual {p0, p2, v0}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 12581
    monitor-exit v1

    goto/16 :goto_32

    :catchall_145
    move-exception v0

    monitor-exit v1
    :try_end_147
    .catchall {:try_start_13f .. :try_end_147} :catchall_145

    throw v0

    .line 12583
    :cond_148
    const-string v0, "displays"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_158

    const-string v0, "d"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_165

    .line 12584
    :cond_158
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12585
    const/4 v0, 0x1

    :try_start_15c
    invoke-virtual {p0, p2, v0}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    .line 12586
    monitor-exit v1

    goto/16 :goto_32

    :catchall_162
    move-exception v0

    monitor-exit v1
    :try_end_164
    .catchall {:try_start_15c .. :try_end_164} :catchall_162

    throw v0

    .line 12588
    :cond_165
    const-string/jumbo v0, "tokens"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_177

    const-string/jumbo v0, "t"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_184

    .line 12589
    :cond_177
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12590
    const/4 v0, 0x1

    :try_start_17b
    invoke-virtual {p0, p2, v0}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 12591
    monitor-exit v1

    goto/16 :goto_32

    :catchall_181
    move-exception v0

    monitor-exit v1
    :try_end_183
    .catchall {:try_start_17b .. :try_end_183} :catchall_181

    throw v0

    .line 12593
    :cond_184
    const-string/jumbo v0, "windows"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_196

    const-string/jumbo v0, "w"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1a4

    .line 12594
    :cond_196
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12595
    const/4 v0, 0x1

    const/4 v3, 0x0

    :try_start_19b
    invoke-virtual {p0, p2, v0, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 12596
    monitor-exit v1

    goto/16 :goto_32

    :catchall_1a1
    move-exception v0

    monitor-exit v1
    :try_end_1a3
    .catchall {:try_start_19b .. :try_end_1a3} :catchall_1a1

    throw v0

    .line 12598
    :cond_1a4
    const-string v0, "all"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1b4

    const-string v0, "a"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1c2

    .line 12599
    :cond_1b4
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12600
    const/4 v0, 0x1

    const/4 v3, 0x0

    :try_start_1b9
    invoke-virtual {p0, p2, v0, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 12601
    monitor-exit v1

    goto/16 :goto_32

    :catchall_1bf
    move-exception v0

    monitor-exit v1
    :try_end_1c1
    .catchall {:try_start_1b9 .. :try_end_1c1} :catchall_1bf

    throw v0

    :cond_1c2
    move-object v0, p0

    move-object v1, p2

    move-object v3, p3

    .line 12605
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v0

    if-nez v0, :cond_32

    .line 12606
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Bad window command, or no windows match: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12607
    const-string v0, "Use -h for help."

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_32

    .line 12613
    .end local v2    # "cmd":Ljava/lang/String;
    :cond_1e8
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12614
    :try_start_1eb
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 12615
    if-eqz v5, :cond_1f5

    .line 12616
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12618
    :cond_1f5
    invoke-virtual {p0, p2}, Lcom/android/server/wm/WindowManagerService;->dumpLastANRLocked(Ljava/io/PrintWriter;)V

    .line 12619
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 12620
    if-eqz v5, :cond_202

    .line 12621
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12623
    :cond_202
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 12624
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 12625
    if-eqz v5, :cond_20f

    .line 12626
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12628
    :cond_20f
    invoke-virtual {p0, p2, p3, v5}, Lcom/android/server/wm/WindowManagerService;->dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V

    .line 12629
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 12630
    if-eqz v5, :cond_21c

    .line 12631
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12633
    :cond_21c
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpSessionsLocked(Ljava/io/PrintWriter;Z)V

    .line 12634
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 12635
    if-eqz v5, :cond_229

    .line 12636
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12638
    :cond_229
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V

    .line 12639
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 12640
    if-eqz v5, :cond_236

    .line 12641
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12643
    :cond_236
    invoke-virtual {p0, p2, v5}, Lcom/android/server/wm/WindowManagerService;->dumpTokensLocked(Ljava/io/PrintWriter;Z)V

    .line 12644
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 12645
    if-eqz v5, :cond_243

    .line 12646
    const-string v0, "-------------------------------------------------------------------------------"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12648
    :cond_243
    const/4 v0, 0x0

    invoke-virtual {p0, p2, v5, v0}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 12649
    monitor-exit v1

    goto/16 :goto_32

    :catchall_24a
    move-exception v0

    monitor-exit v1
    :try_end_24c
    .catchall {:try_start_1eb .. :try_end_24c} :catchall_24a

    throw v0
.end method

.method dumpAnimatorLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .prologue
    .line 12138
    const-string v0, "WINDOW MANAGER ANIMATOR STATE (dumpsys window animator)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12139
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const-string v1, "    "

    invoke-virtual {v0, p1, v1, p3}, Lcom/android/server/wm/WindowAnimator;->dumpLocked(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 12140
    return-void
.end method

.method dumpAppTokensLocked()V
    .registers 13

    .prologue
    .line 5740
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v9}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 5741
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v3, :cond_82

    .line 5742
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v9, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 5743
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "  Display "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5744
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v5

    .line 5745
    .local v5, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->numTokens()I

    move-result v2

    .line 5746
    .local v2, "i":I
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v9

    add-int/lit8 v4, v9, -0x1

    .local v4, "taskNdx":I
    :goto_3b
    if-ltz v4, :cond_7f

    .line 5747
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v7, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 5748
    .local v7, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v7}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v9

    add-int/lit8 v6, v9, -0x1

    .local v6, "tokenNdx":I
    :goto_4b
    if-ltz v6, :cond_7c

    .line 5749
    invoke-virtual {v7, v6}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/AppWindowToken;

    .line 5750
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    const-string v9, "WindowManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "  #"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    add-int/lit8 v2, v2, -0x1

    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ": "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v8, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5748
    add-int/lit8 v6, v6, -0x1

    goto :goto_4b

    .line 5746
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_7c
    add-int/lit8 v4, v4, -0x1

    goto :goto_3b

    .line 5741
    .end local v6    # "tokenNdx":I
    .end local v7    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_7f
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 5754
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "i":I
    .end local v4    # "taskNdx":I
    .end local v5    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :cond_82
    return-void
.end method

.method dumpDisplayContentsLocked(Ljava/io/PrintWriter;Z)V
    .registers 7
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    .line 12212
    const-string v3, "WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12213
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayReady:Z

    if-eqz v3, :cond_22

    .line 12214
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 12215
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_10
    if-ge v1, v2, :cond_27

    .line 12216
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 12217
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    const-string v3, "  "

    invoke-virtual {v0, v3, p1}, Lcom/android/server/wm/DisplayContent;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 12215
    add-int/lit8 v1, v1, 0x1

    goto :goto_10

    .line 12220
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :cond_22
    const-string v3, "  NO DISPLAY"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12222
    :cond_27
    return-void
.end method

.method dumpLastANRLocked(Ljava/io/PrintWriter;)V
    .registers 3
    .param p1, "pw"    # Ljava/io/PrintWriter;

    .prologue
    .line 12478
    const-string v0, "WINDOW MANAGER LAST ANR (dumpsys window lastanr)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12479
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    if-nez v0, :cond_f

    .line 12480
    const-string v0, "  <no ANR has occurred since boot>"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12484
    :goto_e
    return-void

    .line 12482
    :cond_f
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_e
.end method

.method dumpPolicyLocked(Ljava/io/PrintWriter;[Ljava/lang/String;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "args"    # [Ljava/lang/String;
    .param p3, "dumpAll"    # Z

    .prologue
    .line 12133
    const-string v0, "WINDOW MANAGER POLICY STATE (dumpsys window policy)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12134
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const-string v1, "    "

    invoke-interface {v0, v1, p1, p2}, Landroid/view/WindowManagerPolicy;->dump(Ljava/lang/String;Ljava/io/PrintWriter;[Ljava/lang/String;)V

    .line 12135
    return-void
.end method

.method dumpSessionsLocked(Ljava/io/PrintWriter;Z)V
    .registers 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    .line 12200
    const-string v2, "WINDOW MANAGER SESSIONS (dumpsys window sessions)"

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12201
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Ljava/util/HashSet;

    invoke-virtual {v2}, Ljava/util/HashSet;->size()I

    move-result v2

    if-lez v2, :cond_32

    .line 12202
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mSessions:Ljava/util/HashSet;

    invoke-virtual {v2}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 12203
    .local v0, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/Session;>;"
    :goto_13
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_32

    .line 12204
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Session;

    .line 12205
    .local v1, "s":Lcom/android/server/wm/Session;
    const-string v2, "  Session "

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const/16 v2, 0x3a

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->println(C)V

    .line 12206
    const-string v2, "    "

    invoke-virtual {v1, p1, v2}, Lcom/android/server/wm/Session;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_13

    .line 12209
    .end local v0    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/Session;>;"
    .end local v1    # "s":Lcom/android/server/wm/Session;
    :cond_32
    return-void
.end method

.method dumpTokensLocked(Ljava/io/PrintWriter;Z)V
    .registers 9
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z

    .prologue
    const/16 v5, 0x20

    const/16 v4, 0x3a

    .line 12143
    const-string v3, "WINDOW MANAGER TOKENS (dumpsys window tokens)"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12144
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-lez v3, :cond_43

    .line 12145
    const-string v3, "  All tokens:"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12146
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 12147
    .local v1, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    :goto_20
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_43

    .line 12148
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 12149
    .local v2, "token":Lcom/android/server/wm/WindowToken;
    const-string v3, "  "

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12150
    if-eqz p2, :cond_3f

    .line 12151
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    .line 12152
    const-string v3, "    "

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_20

    .line 12154
    :cond_3f
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_20

    .line 12158
    .end local v1    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/wm/WindowToken;>;"
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_43
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_84

    .line 12159
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12160
    const-string v3, "  Wallpaper tokens:"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12161
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_5b
    if-ltz v0, :cond_84

    .line 12162
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 12163
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string v3, "  Wallpaper #"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 12164
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12165
    if-eqz p2, :cond_80

    .line 12166
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    .line 12167
    const-string v3, "    "

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 12161
    :goto_7d
    add-int/lit8 v0, v0, -0x1

    goto :goto_5b

    .line 12169
    :cond_80
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_7d

    .line 12173
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_84
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_c5

    .line 12174
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12175
    const-string v3, "  Finishing start of application tokens:"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12176
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .restart local v0    # "i":I
    :goto_9c
    if-ltz v0, :cond_c5

    .line 12177
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFinishedStarting:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 12178
    .restart local v2    # "token":Lcom/android/server/wm/WindowToken;
    const-string v3, "  Finished Starting #"

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 12179
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(C)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12180
    if-eqz p2, :cond_c1

    .line 12181
    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(C)V

    .line 12182
    const-string v3, "    "

    invoke-virtual {v2, p1, v3}, Lcom/android/server/wm/WindowToken;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 12176
    :goto_be
    add-int/lit8 v0, v0, -0x1

    goto :goto_9c

    .line 12184
    :cond_c1
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_be

    .line 12188
    .end local v0    # "i":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    :cond_c5
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-gtz v3, :cond_d5

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_fc

    .line 12189
    :cond_d5
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12190
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_ea

    .line 12191
    const-string v3, "  mOpeningApps="

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12193
    :cond_ea
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_fc

    .line 12194
    const-string v3, "  mClosingApps="

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {p1, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12197
    :cond_fc
    return-void
.end method

.method dumpWindows(Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .registers 15
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    .prologue
    .line 12425
    new-instance v6, Lcom/android/server/wm/WindowList;

    invoke-direct {v6}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 12426
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    const-string/jumbo v7, "visible"

    invoke-virtual {v7, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_4f

    .line 12427
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 12428
    :try_start_11
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 12429
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_18
    if-ge v0, v1, :cond_43

    .line 12430
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 12432
    .local v5, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v4, v7, -0x1

    .local v4, "winNdx":I
    :goto_2c
    if-ltz v4, :cond_40

    .line 12433
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 12434
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-boolean v7, v7, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    if-eqz v7, :cond_3d

    .line 12435
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 12432
    :cond_3d
    add-int/lit8 v4, v4, -0x1

    goto :goto_2c

    .line 12429
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_40
    add-int/lit8 v0, v0, 0x1

    goto :goto_18

    .line 12439
    .end local v4    # "winNdx":I
    .end local v5    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_43
    monitor-exit v8
    :try_end_44
    .catchall {:try_start_11 .. :try_end_44} :catchall_4c

    .line 12467
    :goto_44
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-gtz v7, :cond_a7

    .line 12468
    const/4 v7, 0x0

    .line 12474
    :goto_4b
    return v7

    .line 12439
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_4c
    move-exception v7

    :try_start_4d
    monitor-exit v8
    :try_end_4e
    .catchall {:try_start_4d .. :try_end_4e} :catchall_4c

    throw v7

    .line 12441
    :cond_4f
    const/4 v2, 0x0

    .line 12444
    .local v2, "objectId":I
    const/16 v7, 0x10

    :try_start_52
    invoke-static {p2, v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I
    :try_end_55
    .catch Ljava/lang/RuntimeException; {:try_start_52 .. :try_end_55} :catch_b3

    move-result v2

    .line 12445
    const/4 p2, 0x0

    .line 12448
    :goto_57
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 12449
    :try_start_5a
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 12450
    .restart local v1    # "numDisplays":I
    const/4 v0, 0x0

    .restart local v0    # "displayNdx":I
    :goto_61
    if-ge v0, v1, :cond_a5

    .line 12451
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 12453
    .restart local v5    # "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    add-int/lit8 v4, v7, -0x1

    .restart local v4    # "winNdx":I
    :goto_75
    if-ltz v4, :cond_a2

    .line 12454
    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 12455
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p2, :cond_95

    .line 12456
    iget-object v7, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v7}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v7

    if-eqz v7, :cond_92

    .line 12457
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 12453
    :cond_92
    :goto_92
    add-int/lit8 v4, v4, -0x1

    goto :goto_75

    .line 12459
    :cond_95
    invoke-static {v3}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v7

    if-ne v7, v2, :cond_92

    .line 12460
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    goto :goto_92

    .line 12464
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    .end local v4    # "winNdx":I
    .end local v5    # "windowList":Lcom/android/server/wm/WindowList;
    :catchall_9f
    move-exception v7

    monitor-exit v8
    :try_end_a1
    .catchall {:try_start_5a .. :try_end_a1} :catchall_9f

    throw v7

    .line 12450
    .restart local v0    # "displayNdx":I
    .restart local v1    # "numDisplays":I
    .restart local v4    # "winNdx":I
    .restart local v5    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_a2
    add-int/lit8 v0, v0, 0x1

    goto :goto_61

    .line 12464
    .end local v4    # "winNdx":I
    .end local v5    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_a5
    :try_start_a5
    monitor-exit v8
    :try_end_a6
    .catchall {:try_start_a5 .. :try_end_a6} :catchall_9f

    goto :goto_44

    .line 12471
    .end local v2    # "objectId":I
    :cond_a7
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 12472
    :try_start_aa
    invoke-virtual {p0, p1, p5, v6}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 12473
    monitor-exit v8

    .line 12474
    const/4 v7, 0x1

    goto :goto_4b

    .line 12473
    :catchall_b0
    move-exception v7

    monitor-exit v8
    :try_end_b2
    .catchall {:try_start_aa .. :try_end_b2} :catchall_b0

    throw v7

    .line 12446
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    .restart local v2    # "objectId":I
    :catch_b3
    move-exception v7

    goto :goto_57
.end method

.method dumpWindowsLocked()V
    .registers 10

    .prologue
    .line 5757
    const/4 v1, 0x0

    .line 5758
    .local v1, "i":I
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 5759
    .local v3, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_8
    if-ge v0, v3, :cond_4f

    .line 5760
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v6}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 5761
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v6

    add-int/lit8 v4, v6, -0x1

    .local v4, "winNdx":I
    move v2, v1

    .end local v1    # "i":I
    .local v2, "i":I
    :goto_1d
    if-ltz v4, :cond_4b

    .line 5762
    const-string v6, "WindowManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "  #"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    add-int/lit8 v1, v2, 0x1

    .end local v2    # "i":I
    .restart local v1    # "i":I
    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, ": "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v5, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    .line 5761
    add-int/lit8 v4, v4, -0x1

    move v2, v1

    .end local v1    # "i":I
    .restart local v2    # "i":I
    goto :goto_1d

    .line 5759
    :cond_4b
    add-int/lit8 v0, v0, 0x1

    move v1, v2

    .end local v2    # "i":I
    .restart local v1    # "i":I
    goto :goto_8

    .line 5765
    .end local v4    # "winNdx":I
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_4f
    return-void
.end method

.method dumpWindowsLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .registers 5
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 12226
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const-string v0, "WINDOW MANAGER WINDOWS (dumpsys window windows)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12227
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 12228
    return-void
.end method

.method dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V
    .registers 16
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "dumpAll"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Z",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowState;",
            ">;)V"
        }
    .end annotation

    .prologue
    .local p3, "windows":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    const/4 v9, 0x1

    const/16 v11, 0x20

    .line 12232
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I

    move-result v3

    .line 12233
    .local v3, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_a
    if-ge v1, v3, :cond_53

    .line 12234
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v8}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v7

    .line 12235
    .local v7, "windowList":Lcom/android/server/wm/WindowList;
    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v8

    add-int/lit8 v6, v8, -0x1

    .local v6, "winNdx":I
    :goto_1e
    if-ltz v6, :cond_50

    .line 12236
    invoke-virtual {v7, v6}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 12237
    .local v5, "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_2e

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_4b

    .line 12238
    :cond_2e
    const-string v8, "  Window #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v11}, Ljava/io/PrintWriter;->print(C)V

    .line 12239
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12240
    const-string v10, "    "

    if-nez p2, :cond_47

    if-eqz p3, :cond_4e

    :cond_47
    move v8, v9

    :goto_48
    invoke-virtual {v5, p1, v10, v8}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 12235
    :cond_4b
    add-int/lit8 v6, v6, -0x1

    goto :goto_1e

    .line 12240
    :cond_4e
    const/4 v8, 0x0

    goto :goto_48

    .line 12233
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_50
    add-int/lit8 v1, v1, 0x1

    goto :goto_a

    .line 12244
    .end local v6    # "winNdx":I
    .end local v7    # "windowList":Lcom/android/server/wm/WindowList;
    :cond_53
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_90

    .line 12245
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12246
    const-string v8, "  Input method dialogs:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12247
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .local v2, "i":I
    :goto_6b
    if-ltz v2, :cond_90

    .line 12248
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 12249
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_7d

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_8d

    .line 12250
    :cond_7d
    const-string v8, "  IM Dialog #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    const-string v8, ": "

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12247
    :cond_8d
    add-int/lit8 v2, v2, -0x1

    goto :goto_6b

    .line 12254
    .end local v2    # "i":I
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_90
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_db

    .line 12255
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12256
    const-string v8, "  Remove pending for:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12257
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_a8
    if-ltz v2, :cond_db

    .line 12258
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mPendingRemove:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 12259
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_ba

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_d4

    .line 12260
    :cond_ba
    const-string v8, "  Remove #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v11}, Ljava/io/PrintWriter;->print(C)V

    .line 12261
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12262
    if-eqz p2, :cond_d7

    .line 12263
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12264
    const-string v8, "    "

    invoke-virtual {v5, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 12257
    :cond_d4
    :goto_d4
    add-int/lit8 v2, v2, -0x1

    goto :goto_a8

    .line 12266
    :cond_d7
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_d4

    .line 12271
    .end local v2    # "i":I
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_db
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    if-eqz v8, :cond_122

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_122

    .line 12272
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12273
    const-string v8, "  Windows force removing:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12274
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_f7
    if-ltz v2, :cond_122

    .line 12275
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 12276
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    const-string v8, "  Removing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v11}, Ljava/io/PrintWriter;->print(C)V

    .line 12277
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12278
    if-eqz p2, :cond_11e

    .line 12279
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12280
    const-string v8, "    "

    invoke-virtual {v5, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 12274
    :goto_11b
    add-int/lit8 v2, v2, -0x1

    goto :goto_f7

    .line 12282
    :cond_11e
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_11b

    .line 12286
    .end local v2    # "i":I
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_122
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_16d

    .line 12287
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12288
    const-string v8, "  Windows waiting to destroy their surface:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12289
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_13a
    if-ltz v2, :cond_16d

    .line 12290
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 12291
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_14c

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_166

    .line 12292
    :cond_14c
    const-string v8, "  Destroy #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v11}, Ljava/io/PrintWriter;->print(C)V

    .line 12293
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12294
    if-eqz p2, :cond_169

    .line 12295
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12296
    const-string v8, "    "

    invoke-virtual {v5, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 12289
    :cond_166
    :goto_166
    add-int/lit8 v2, v2, -0x1

    goto :goto_13a

    .line 12298
    :cond_169
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_166

    .line 12303
    .end local v2    # "i":I
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_16d
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_1b8

    .line 12304
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12305
    const-string v8, "  Windows losing focus:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12306
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_185
    if-ltz v2, :cond_1b8

    .line 12307
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLosingFocus:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 12308
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_197

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1b1

    .line 12309
    :cond_197
    const-string v8, "  Losing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v11}, Ljava/io/PrintWriter;->print(C)V

    .line 12310
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12311
    if-eqz p2, :cond_1b4

    .line 12312
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12313
    const-string v8, "    "

    invoke-virtual {v5, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 12306
    :cond_1b1
    :goto_1b1
    add-int/lit8 v2, v2, -0x1

    goto :goto_185

    .line 12315
    :cond_1b4
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_1b1

    .line 12320
    .end local v2    # "i":I
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_1b8
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_203

    .line 12321
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12322
    const-string v8, "  Windows waiting to resize:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12323
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_1d0
    if-ltz v2, :cond_203

    .line 12324
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mResizingWindows:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 12325
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    if-eqz p3, :cond_1e2

    invoke-virtual {p3, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_1fc

    .line 12326
    :cond_1e2
    const-string v8, "  Resizing #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v11}, Ljava/io/PrintWriter;->print(C)V

    .line 12327
    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12328
    if-eqz p2, :cond_1ff

    .line 12329
    const-string v8, ":"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12330
    const-string v8, "    "

    invoke-virtual {v5, p1, v8, v9}, Lcom/android/server/wm/WindowState;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Z)V

    .line 12323
    :cond_1fc
    :goto_1fc
    add-int/lit8 v2, v2, -0x1

    goto :goto_1d0

    .line 12332
    :cond_1ff
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    goto :goto_1fc

    .line 12337
    .end local v2    # "i":I
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_203
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-lez v8, :cond_242

    .line 12338
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12339
    const-string v8, "  Clients waiting for these windows to be drawn:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12340
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    add-int/lit8 v2, v8, -0x1

    .restart local v2    # "i":I
    :goto_21b
    if-ltz v2, :cond_242

    .line 12341
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v8, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/Pair;

    .line 12342
    .local v4, "pair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/WindowState;Landroid/os/IRemoteCallback;>;"
    const-string v8, "  Waiting #"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, v2}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual {p1, v11}, Ljava/io/PrintWriter;->print(C)V

    iget-object v8, v4, Landroid/util/Pair;->first:Ljava/lang/Object;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12343
    const-string v8, ": "

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, v4, Landroid/util/Pair;->second:Ljava/lang/Object;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12340
    add-int/lit8 v2, v2, -0x1

    goto :goto_21b

    .line 12346
    .end local v2    # "i":I
    .end local v4    # "pair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/WindowState;Landroid/os/IRemoteCallback;>;"
    :cond_242
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12347
    const-string v8, "  mCurConfiguration="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12348
    const-string v8, "  mCurrentFocus="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12349
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eq v8, v9, :cond_269

    .line 12350
    const-string v8, "  mLastFocus="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFocus:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12352
    :cond_269
    const-string v8, "  mFocusedApp="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12353
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_281

    .line 12354
    const-string v8, "  mInputMethodTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12356
    :cond_281
    const-string v8, "  mInTouchMode="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 12357
    const-string v8, " mLayoutSeq="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLayoutSeq:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 12358
    const-string v8, "  mLastDisplayFreezeDuration="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12359
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastDisplayFreezeDuration:I

    int-to-long v8, v8

    invoke-static {v8, v9, p1}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 12360
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    if-eqz v8, :cond_2ae

    .line 12361
    const-string v8, " due to "

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12362
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12364
    :cond_2ae
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12365
    if-eqz p2, :cond_430

    .line 12366
    const-string v8, "  mSystemDecorLayer="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemDecorLayer:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 12367
    const-string v8, " mScreenRect="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    invoke-virtual {v8}, Landroid/graphics/Rect;->toShortString()Ljava/lang/String;

    move-result-object v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12368
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    if-eqz v8, :cond_2dd

    .line 12369
    const-string v8, "  mLastStatusBarVisibility=0x"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12370
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    invoke-static {v8}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12372
    :cond_2dd
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_2eb

    .line 12373
    const-string v8, "  mInputMethodWindow="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12375
    :cond_2eb
    const-string v8, "  mWallpaperTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12376
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-nez v8, :cond_2fd

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v8, :cond_311

    .line 12377
    :cond_2fd
    const-string v8, "  mLowerWallpaperTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12378
    const-string v8, "  mUpperWallpaperTarget="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12380
    :cond_311
    const-string v8, "  mLastWallpaperX="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    .line 12381
    const-string v8, " mLastWallpaperY="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    .line 12382
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodAnimLayerAdjustment:I

    if-nez v8, :cond_32d

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    if-eqz v8, :cond_341

    .line 12384
    :cond_32d
    const-string v8, "  mInputMethodAnimLayerAdjustment="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12385
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodAnimLayerAdjustment:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 12386
    const-string v8, "  mWallpaperAnimLayerAdjustment="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12387
    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 12389
    :cond_341
    const-string v8, "  mSystemBooted="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 12390
    const-string v8, " mDisplayEnabled="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 12391
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->needsLayout()Z

    move-result v8

    if-eqz v8, :cond_37c

    .line 12392
    const-string v8, "  layoutNeeded on displays="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12393
    const/4 v1, 0x0

    :goto_361
    if-ge v1, v3, :cond_379

    .line 12394
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v8, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 12395
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-boolean v8, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    if-eqz v8, :cond_376

    .line 12396
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v8

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 12393
    :cond_376
    add-int/lit8 v1, v1, 0x1

    goto :goto_361

    .line 12399
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_379
    invoke-virtual {p1}, Ljava/io/PrintWriter;->println()V

    .line 12401
    :cond_37c
    const-string v8, "  mTransactionSequence="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransactionSequence:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 12402
    const-string v8, "  mDisplayFrozen="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 12403
    const-string v8, " windows="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 12404
    const-string v8, " client="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 12405
    const-string v8, " apps="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 12406
    const-string v8, " waitingForConfig="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 12407
    const-string v8, "  mRotation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 12408
    const-string v8, " mAltOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 12409
    const-string v8, "  mLastWindowForcedOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(I)V

    .line 12410
    const-string v8, " mForcedAppOrientation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 12411
    const-string v8, "  mDeferredRotationPauseCount="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(I)V

    .line 12412
    const-string v8, "  mWindowAnimationScale="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScale:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    .line 12413
    const-string v8, " mTransitionWindowAnimationScale="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(F)V

    .line 12414
    const-string v8, " mAnimatorDurationScale="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v8, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScale:F

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(F)V

    .line 12415
    const-string v8, "  mTraversalScheduled="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 12416
    const-string v8, "  mStartingIconInTransition="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mStartingIconInTransition:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Z)V

    .line 12417
    const-string v8, " mSkipAppTransitionAnimation="

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v8, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Z)V

    .line 12418
    const-string v8, "  mLayoutToAnim:"

    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12419
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v8, p1}, Lcom/android/server/wm/AppTransition;->dump(Ljava/io/PrintWriter;)V

    .line 12421
    :cond_430
    return-void
.end method

.method public enableScreenAfterBoot()V
    .registers 6

    .prologue
    .line 6823
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 6832
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-eqz v0, :cond_9

    .line 6833
    monitor-exit v1

    .line 6845
    :goto_8
    return-void

    .line 6835
    :cond_9
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    .line 6836
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->hideBootMessagesLocked()V

    .line 6839
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x17

    const-wide/16 v3, 0x7530

    invoke-virtual {v0, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 6840
    monitor-exit v1
    :try_end_19
    .catchall {:try_start_3 .. :try_end_19} :catchall_22

    .line 6842
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemBooted()V

    .line 6844
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    goto :goto_8

    .line 6840
    :catchall_22
    move-exception v0

    :try_start_23
    monitor-exit v1
    :try_end_24
    .catchall {:try_start_23 .. :try_end_24} :catchall_22

    throw v0
.end method

.method enableScreenIfNeededLocked()V
    .registers 3

    .prologue
    .line 6856
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_5

    .line 6863
    :cond_4
    :goto_4
    return-void

    .line 6859
    :cond_5
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v0, :cond_d

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-eqz v0, :cond_4

    .line 6862
    :cond_d
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x10

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    goto :goto_4
.end method

.method public executeAppTransition()V
    .registers 5

    .prologue
    .line 5047
    const-string v2, "android.permission.MANAGE_APP_TOKENS"

    const-string v3, "executeAppTransition()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_12

    .line 5049
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 5052
    :cond_12
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 5058
    :try_start_15
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v2

    if-eqz v2, :cond_2c

    .line 5059
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->setReady()V

    .line 5060
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5061
    .local v0, "origId":J
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 5062
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5064
    .end local v0    # "origId":J
    :cond_2c
    monitor-exit v3

    .line 5065
    return-void

    .line 5064
    :catchall_2e
    move-exception v2

    monitor-exit v3
    :try_end_30
    .catchall {:try_start_15 .. :try_end_30} :catchall_2e

    throw v2
.end method

.method public exitKeyguardSecurely(Landroid/view/IOnKeyguardExitResult;)V
    .registers 4
    .param p1, "callback"    # Landroid/view/IOnKeyguardExitResult;

    .prologue
    .line 6482
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 6484
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6486
    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$6;

    invoke-direct {v1, p0, p1}, Lcom/android/server/wm/WindowManagerService$6;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IOnKeyguardExitResult;)V

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->exitKeyguardSecurely(Landroid/view/WindowManagerPolicy$OnKeyguardExitResult;)V

    .line 6496
    return-void
.end method

.method public fastBootup()Z
    .registers 2

    .prologue
    .line 6788
    invoke-static {}, Lcom/android/server/power/FakeShutdown;->bootup()Ljava/lang/Boolean;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v0

    return v0
.end method

.method findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;
    .registers 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4192
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 4193
    .local v0, "wtoken":Lcom/android/server/wm/WindowToken;
    if-nez v0, :cond_c

    .line 4194
    const/4 v1, 0x0

    .line 4196
    :goto_b
    return-object v1

    :cond_c
    iget-object v1, v0, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    goto :goto_b
.end method

.method findDesiredInputMethodWindowIndexLocked(Z)I
    .registers 24
    .param p1, "willMove"    # Z

    .prologue
    .line 1733
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v19

    .line 1734
    .local v19, "windows":Lcom/android/server/wm/WindowList;
    const/4 v15, 0x0

    .line 1736
    .local v15, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/WindowList;->size()I

    move-result v20

    add-int/lit8 v8, v20, -0x1

    .local v8, "i":I
    :goto_b
    if-ltz v8, :cond_90

    .line 1737
    move-object/from16 v0, v19

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/wm/WindowState;

    .line 1742
    .local v17, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-boolean v0, v0, Lcom/android/server/wm/WindowManagerService;->mSkipWidgetFocus:Z

    move/from16 v20, v0

    if-eqz v20, :cond_31

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v20, v0

    const/16 v21, 0x834

    move/from16 v0, v20

    move/from16 v1, v21

    if-eq v0, v1, :cond_4d

    :cond_31
    move-object/from16 v0, p0

    iget-boolean v0, v0, Lcom/android/server/wm/WindowManagerService;->mSkipWidgetFocus:Z

    move/from16 v20, v0

    if-eqz v20, :cond_50

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v20, v0

    const/16 v21, 0x836

    move/from16 v0, v20

    move/from16 v1, v21

    if-ne v0, v1, :cond_50

    .line 1736
    :cond_4d
    add-int/lit8 v8, v8, -0x1

    goto :goto_b

    .line 1748
    :cond_50
    invoke-static/range {v17 .. v17}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v20

    if-eqz v20, :cond_4d

    .line 1749
    move-object/from16 v15, v17

    .line 1757
    if-nez p1, :cond_90

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v20, v0

    const/16 v21, 0x3

    move/from16 v0, v20

    move/from16 v1, v21

    if-ne v0, v1, :cond_90

    if-lez v8, :cond_90

    .line 1760
    add-int/lit8 v20, v8, -0x1

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    .line 1761
    .local v16, "wb":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v21, v0

    move-object/from16 v0, v20

    move-object/from16 v1, v21

    if-ne v0, v1, :cond_90

    invoke-static/range {v16 .. v16}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v20

    if-eqz v20, :cond_90

    .line 1762
    add-int/lit8 v8, v8, -0x1

    .line 1763
    move-object/from16 v15, v16

    .line 1780
    .end local v16    # "wb":Lcom/android/server/wm/WindowState;
    .end local v17    # "win":Lcom/android/server/wm/WindowState;
    :cond_90
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1781
    .local v2, "curTarget":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_c7

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v20

    if-eqz v20, :cond_c7

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isClosing()Z

    move-result v20

    if-eqz v20, :cond_c7

    if-eqz v15, :cond_be

    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v20, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v21, v0

    move/from16 v0, v20

    move/from16 v1, v21

    if-le v0, v1, :cond_c7

    .line 1786
    :cond_be
    move-object/from16 v0, v19

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v20

    add-int/lit8 v12, v20, 0x1

    .line 1919
    :cond_c6
    :goto_c6
    return v12

    .line 1792
    :cond_c7
    if-eqz p1, :cond_184

    if-eqz v15, :cond_184

    .line 1793
    if-nez v2, :cond_121

    const/4 v14, 0x0

    .line 1794
    .local v14, "token":Lcom/android/server/wm/AppWindowToken;
    :goto_ce
    if-eqz v14, :cond_184

    .line 1800
    const/4 v7, 0x0

    .line 1801
    .local v7, "highestTarget":Lcom/android/server/wm/WindowState;
    const/4 v6, 0x0

    .line 1802
    .local v6, "highestPos":I
    iget-object v0, v14, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    move/from16 v20, v0

    if-nez v20, :cond_ea

    iget-object v0, v14, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    move-object/from16 v20, v0

    if-eqz v20, :cond_104

    .line 1803
    :cond_ea
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 1804
    .local v3, "curWindows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v13

    .line 1805
    .local v13, "pos":I
    :goto_f2
    if-ltz v13, :cond_104

    .line 1806
    invoke-virtual {v3, v13}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/wm/WindowState;

    .line 1807
    .restart local v17    # "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    if-eq v0, v14, :cond_124

    .line 1821
    .end local v3    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v13    # "pos":I
    .end local v17    # "win":Lcom/android/server/wm/WindowState;
    :cond_104
    if-eqz v7, :cond_184

    .line 1827
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object/from16 v20, v0

    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v20

    if-eqz v20, :cond_150

    .line 1830
    const/16 v20, 0x1

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    .line 1831
    move-object/from16 v0, p0

    iput-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1832
    add-int/lit8 v12, v6, 0x1

    goto :goto_c6

    .line 1793
    .end local v6    # "highestPos":I
    .end local v7    # "highestTarget":Lcom/android/server/wm/WindowState;
    .end local v14    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_121
    iget-object v14, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    goto :goto_ce

    .line 1810
    .restart local v3    # "curWindows":Lcom/android/server/wm/WindowList;
    .restart local v6    # "highestPos":I
    .restart local v7    # "highestTarget":Lcom/android/server/wm/WindowState;
    .restart local v13    # "pos":I
    .restart local v14    # "token":Lcom/android/server/wm/AppWindowToken;
    .restart local v17    # "win":Lcom/android/server/wm/WindowState;
    :cond_124
    move-object/from16 v0, v17

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRemoved:Z

    move/from16 v20, v0

    if-nez v20, :cond_14d

    .line 1811
    if-eqz v7, :cond_14a

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v20, v0

    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v21, v0

    move/from16 v0, v20

    move/from16 v1, v21

    if-le v0, v1, :cond_14d

    .line 1813
    :cond_14a
    move-object/from16 v7, v17

    .line 1814
    move v6, v13

    .line 1817
    :cond_14d
    add-int/lit8 v13, v13, -0x1

    .line 1818
    goto :goto_f2

    .line 1833
    .end local v3    # "curWindows":Lcom/android/server/wm/WindowList;
    .end local v13    # "pos":I
    .end local v17    # "win":Lcom/android/server/wm/WindowState;
    :cond_150
    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v20, v0

    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v20

    if-eqz v20, :cond_184

    iget-object v0, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v20, v0

    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v21, v0

    move/from16 v0, v20

    move/from16 v1, v21

    if-le v0, v1, :cond_184

    .line 1839
    const/16 v20, 0x1

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    .line 1840
    move-object/from16 v0, p0

    iput-object v7, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1841
    add-int/lit8 v12, v6, 0x1

    goto/16 :goto_c6

    .line 1849
    .end local v6    # "highestPos":I
    .end local v7    # "highestTarget":Lcom/android/server/wm/WindowState;
    .end local v14    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_184
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mWidgetWindowCount:I

    move/from16 v20, v0

    if-lez v20, :cond_18c

    .line 1855
    :cond_18c
    if-eqz v15, :cond_297

    .line 1856
    if-eqz p1, :cond_1b9

    .line 1859
    move-object/from16 v0, p0

    iput-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1860
    const/16 v20, 0x0

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputMethodTargetWaitingAnim:Z

    .line 1861
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    if-eqz v20, :cond_252

    .line 1862
    iget-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move/from16 v20, v0

    move-object/from16 v0, p0

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->setInputMethodAnimLayerAdjustment(I)V

    .line 1868
    :cond_1b9
    :goto_1b9
    move v12, v8

    .line 1869
    .local v12, "miniModeInputMethodIndex":I
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mWidgetWindowCount:I

    move/from16 v20, v0

    if-lez v20, :cond_281

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    if-eqz v20, :cond_281

    .line 1871
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v20

    move-object/from16 v0, p0

    move-object/from16 v1, v20

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v4

    .line 1872
    .local v4, "currentFocus":Lcom/android/server/wm/WindowState;
    if-eqz v4, :cond_1f8

    invoke-static {v4}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v20

    if-nez v20, :cond_1f8

    move-object/from16 v0, v19

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v20

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    move-object/from16 v0, v19

    move-object/from16 v1, v21

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v21

    move/from16 v0, v20

    move/from16 v1, v21

    if-lt v0, v1, :cond_204

    :cond_1f8
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    invoke-static/range {v20 .. v20}, Lcom/android/server/wm/WindowManagerService;->canBeImeTarget(Lcom/android/server/wm/WindowState;)Z

    move-result v20

    if-nez v20, :cond_25d

    .line 1873
    :cond_204
    add-int/lit8 v12, v8, 0x1

    .line 1895
    .end local v4    # "currentFocus":Lcom/android/server/wm/WindowState;
    :goto_206
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    if-eqz v20, :cond_c6

    .line 1896
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v20

    move/from16 v0, v20

    if-gt v12, v0, :cond_c6

    .line 1897
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v10, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    .line 1898
    .local v10, "maxLayer":I
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    .line 1899
    .local v11, "maxWindowState":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v20, v0

    invoke-virtual/range {v20 .. v20}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v9

    .local v9, "i$":Ljava/util/Iterator;
    :cond_23a
    :goto_23a
    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z

    move-result v20

    if-eqz v20, :cond_28d

    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 1900
    .local v5, "cw":Lcom/android/server/wm/WindowState;
    iget v0, v5, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v20, v0

    move/from16 v0, v20

    if-le v0, v10, :cond_23a

    .line 1901
    iget v10, v5, Lcom/android/server/wm/WindowState;->mLayer:I

    .line 1902
    move-object v11, v5

    goto :goto_23a

    .line 1864
    .end local v5    # "cw":Lcom/android/server/wm/WindowState;
    .end local v9    # "i$":Ljava/util/Iterator;
    .end local v10    # "maxLayer":I
    .end local v11    # "maxWindowState":Lcom/android/server/wm/WindowState;
    .end local v12    # "miniModeInputMethodIndex":I
    :cond_252
    const/16 v20, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->setInputMethodAnimLayerAdjustment(I)V

    goto/16 :goto_1b9

    .line 1875
    .restart local v4    # "currentFocus":Lcom/android/server/wm/WindowState;
    .restart local v12    # "miniModeInputMethodIndex":I
    :cond_25d
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTopWidgetWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v20, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v20

    invoke-virtual {v0, v15, v1}, Lcom/android/server/wm/WindowManagerService;->countWindowsBetweenTargetAndWidget(Lcom/android/server/wm/WindowState;Lcom/android/server/wm/WindowState;)I

    move-result v18

    .line 1884
    .local v18, "windowCount":I
    if-ltz v18, :cond_27e

    .end local v18    # "windowCount":I
    :goto_26d
    move/from16 v0, v18

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowCountBetweenIMTargetAndTopWidget:I

    .line 1885
    add-int/lit8 v20, v8, 0x1

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowCountBetweenIMTargetAndTopWidget:I

    move/from16 v21, v0

    add-int v12, v20, v21

    goto :goto_206

    .line 1884
    .restart local v18    # "windowCount":I
    :cond_27e
    const/16 v18, 0x0

    goto :goto_26d

    .line 1888
    .end local v4    # "currentFocus":Lcom/android/server/wm/WindowState;
    .end local v18    # "windowCount":I
    :cond_281
    const/16 v20, 0x0

    move/from16 v0, v20

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/wm/WindowManagerService;->mWindowCountBetweenIMTargetAndTopWidget:I

    .line 1889
    add-int/lit8 v12, v8, 0x1

    goto/16 :goto_206

    .line 1905
    .restart local v9    # "i$":Ljava/util/Iterator;
    .restart local v10    # "maxLayer":I
    .restart local v11    # "maxWindowState":Lcom/android/server/wm/WindowState;
    :cond_28d
    move-object/from16 v0, v19

    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v20

    add-int/lit8 v12, v20, 0x1

    goto/16 :goto_c6

    .line 1913
    .end local v9    # "i$":Ljava/util/Iterator;
    .end local v10    # "maxLayer":I
    .end local v11    # "maxWindowState":Lcom/android/server/wm/WindowState;
    .end local v12    # "miniModeInputMethodIndex":I
    :cond_297
    if-eqz p1, :cond_2aa

    .line 1916
    const/16 v20, 0x0

    move-object/from16 v0, v20

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    .line 1917
    const/16 v20, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->setInputMethodAnimLayerAdjustment(I)V

    .line 1919
    :cond_2aa
    const/4 v12, -0x1

    goto/16 :goto_c6
.end method

.method findForceLocalOrientationWindowLayer(Lcom/android/server/wm/DisplayContent;)I
    .registers 8
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 13273
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 13274
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 13275
    .local v0, "N":I
    add-int/lit8 v1, v0, -0x1

    .line 13276
    .local v1, "i":I
    :goto_a
    if-ltz v1, :cond_29

    .line 13277
    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 13278
    .local v2, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v4

    if-eqz v4, :cond_26

    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v5, 0x30000

    and-int/2addr v4, v5

    if-eqz v4, :cond_26

    .line 13280
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v4, v4, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    .line 13283
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :goto_25
    return v4

    .line 13276
    .restart local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_26
    add-int/lit8 v1, v1, -0x1

    goto :goto_a

    .line 13283
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_29
    const/4 v4, -0x1

    goto :goto_25
.end method

.method public findNextFocusableFloatingStackBoxIdFromTop()I
    .registers 6

    .prologue
    const/4 v4, 0x0

    .line 6080
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getStackBoxInfos()Ljava/util/ArrayList;

    move-result-object v3

    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/app/ActivityManager$StackBoxInfo;

    .line 6081
    .local v2, "topStackInfo":Landroid/app/ActivityManager$StackBoxInfo;
    if-eqz v2, :cond_1d

    .line 6082
    iget v1, v2, Landroid/app/ActivityManager$StackBoxInfo;->stackId:I

    .line 6083
    .local v1, "topStackId":I
    const/4 v3, 0x1

    invoke-virtual {p0, v1, v3, v4}, Lcom/android/server/wm/WindowManagerService;->findNextFocusableStackBoxInfo(IZZ)Landroid/app/ActivityManager$StackBoxInfo;

    move-result-object v0

    .line 6084
    .local v0, "focusableStackInfo":Landroid/app/ActivityManager$StackBoxInfo;
    if-eqz v0, :cond_1d

    .line 6085
    iget v3, v0, Landroid/app/ActivityManager$StackBoxInfo;->stackId:I

    .line 6088
    .end local v0    # "focusableStackInfo":Landroid/app/ActivityManager$StackBoxInfo;
    .end local v1    # "topStackId":I
    :goto_1c
    return v3

    :cond_1d
    const/4 v3, -0x1

    goto :goto_1c
.end method

.method public findNextFocusableStackBoxInfo(IZZ)Landroid/app/ActivityManager$StackBoxInfo;
    .registers 18
    .param p1, "stackId"    # I
    .param p2, "includeFloating"    # Z
    .param p3, "includeNormalApp"    # Z

    .prologue
    .line 6095
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v11, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/TaskStack;

    .line 6096
    .local v5, "stack":Lcom/android/server/wm/TaskStack;
    const/4 v4, 0x0

    .line 6097
    .local v4, "nextStackBoxInfo":Landroid/app/ActivityManager$StackBoxInfo;
    invoke-virtual {v5}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v11

    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getStackBoxInfos()Ljava/util/ArrayList;

    move-result-object v3

    .line 6098
    .local v3, "infos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$StackBoxInfo;>;"
    invoke-virtual {v5}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v11

    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v9

    .line 6099
    .local v9, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    const/4 v1, 0x0

    .line 6101
    .local v1, "foundMyStack":Z
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "i$":Ljava/util/Iterator;
    :cond_1e
    :goto_1e
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-eqz v11, :cond_39

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/app/ActivityManager$StackBoxInfo;

    .line 6102
    .local v6, "stackInfo":Landroid/app/ActivityManager$StackBoxInfo;
    iget v11, v6, Landroid/app/ActivityManager$StackBoxInfo;->stackId:I

    if-ne v11, p1, :cond_30

    .line 6103
    const/4 v1, 0x1

    .line 6104
    goto :goto_1e

    .line 6107
    :cond_30
    if-eqz v1, :cond_46

    .line 6108
    if-nez p2, :cond_3a

    iget v11, v6, Landroid/app/ActivityManager$StackBoxInfo;->stackBoxType:I

    const/4 v12, 0x3

    if-ne v11, v12, :cond_3a

    .line 6147
    .end local v6    # "stackInfo":Landroid/app/ActivityManager$StackBoxInfo;
    :cond_39
    return-object v4

    .line 6112
    .restart local v6    # "stackInfo":Landroid/app/ActivityManager$StackBoxInfo;
    :cond_3a
    if-nez p3, :cond_46

    iget v11, v6, Landroid/app/ActivityManager$StackBoxInfo;->stackBoxType:I

    const/4 v12, 0x2

    if-eq v11, v12, :cond_39

    iget v11, v6, Landroid/app/ActivityManager$StackBoxInfo;->stackId:I

    const/4 v12, 0x1

    if-eq v11, v12, :cond_39

    .line 6121
    :cond_46
    if-eqz v1, :cond_1e

    if-nez v4, :cond_1e

    iget v11, v6, Landroid/app/ActivityManager$StackBoxInfo;->stackId:I

    if-eqz v11, :cond_1e

    .line 6123
    const/4 v7, 0x0

    .line 6125
    .local v7, "task":Lcom/android/server/wm/Task;
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v11

    add-int/lit8 v8, v11, -0x1

    .local v8, "taskIdx":I
    :goto_55
    if-ltz v8, :cond_66

    .line 6126
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/Task;

    .line 6127
    .local v10, "tmpTask":Lcom/android/server/wm/Task;
    iget v11, v6, Landroid/app/ActivityManager$StackBoxInfo;->stackId:I

    iget-object v12, v10, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    iget v12, v12, Lcom/android/server/wm/TaskStack;->mStackId:I

    if-ne v11, v12, :cond_b3

    .line 6128
    move-object v7, v10

    .line 6133
    .end local v10    # "tmpTask":Lcom/android/server/wm/Task;
    :cond_66
    if-eqz v7, :cond_96

    .line 6134
    iget-object v11, v7, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    iget-object v12, v7, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v12}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v12

    add-int/lit8 v12, v12, -0x1

    invoke-virtual {v11, v12}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/AppWindowToken;

    .line 6136
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    iget-object v11, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/4 v12, 0x4

    invoke-virtual {v11, v12}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v11

    if-nez v11, :cond_1e

    iget-object v11, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    const/16 v12, 0x8

    invoke-virtual {v11, v12}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v11

    if-nez v11, :cond_1e

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowToken;->isVisible()Z

    move-result v11

    if-nez v11, :cond_96

    iget-boolean v11, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    const/4 v12, 0x1

    if-eq v11, v12, :cond_1e

    .line 6143
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    :cond_96
    move-object v4, v6

    .line 6144
    const-string v11, "WindowManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "findNextFocusableStackBoxInfo: recommended next stackId="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget v13, v4, Landroid/app/ActivityManager$StackBoxInfo;->stackId:I

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_1e

    .line 6125
    .restart local v10    # "tmpTask":Lcom/android/server/wm/Task;
    :cond_b3
    add-int/lit8 v8, v8, -0x1

    goto :goto_55
.end method

.method public finishDrawingWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 3837
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3839
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_61

    .line 3840
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 3845
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindow:Z

    if-eqz v3, :cond_34

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindows:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_34

    .line 3846
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindows:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 3847
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindows:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-nez v3, :cond_34

    .line 3848
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindow:Z

    .line 3849
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    if-eqz v3, :cond_34

    .line 3850
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    invoke-virtual {v3}, Lcom/android/server/wm/ScreenFreezeSurface;->kill()V

    .line 3851
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mFreezeSurfaceForMultiWindow:Lcom/android/server/wm/ScreenFreezeSurface;

    .line 3857
    :cond_34
    if-eqz v2, :cond_59

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->finishDrawingLocked()Z

    move-result v3

    if-eqz v3, :cond_59

    .line 3858
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->flags:I

    const/high16 v5, 0x100000

    and-int/2addr v3, v5

    if-eqz v3, :cond_51

    .line 3859
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    iget v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    or-int/lit8 v5, v5, 0x4

    iput v5, v3, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 3862
    :cond_51
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v5, 0x1

    iput-boolean v5, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3863
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V

    .line 3865
    :cond_59
    monitor-exit v4
    :try_end_5a
    .catchall {:try_start_8 .. :try_end_5a} :catchall_5e

    .line 3867
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3869
    return-void

    .line 3865
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_5e
    move-exception v3

    :try_start_5f
    monitor-exit v4
    :try_end_60
    .catchall {:try_start_5f .. :try_end_60} :catchall_5e

    :try_start_60
    throw v3
    :try_end_61
    .catchall {:try_start_60 .. :try_end_61} :catchall_61

    .line 3867
    :catchall_61
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public freezeRotation(I)V
    .registers 8
    .param p1, "rotation"    # I

    .prologue
    const/4 v5, 0x0

    const/4 v4, -0x1

    .line 7388
    const-string v2, "android.permission.SET_ORIENTATION"

    const-string v3, "freezeRotation()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_14

    .line 7390
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires SET_ORIENTATION permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 7392
    :cond_14
    if-lt p1, v4, :cond_19

    const/4 v2, 0x3

    if-le p1, v2, :cond_21

    .line 7393
    :cond_19
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "Rotation argument must be -1 or a valid rotation constant."

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 7399
    :cond_21
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7401
    .local v0, "origId":J
    :try_start_25
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v3, 0x1

    if-ne p1, v4, :cond_2c

    iget p1, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    .end local p1    # "rotation":I
    :cond_2c
    invoke-interface {v2, v3, p1}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_2f
    .catchall {:try_start_25 .. :try_end_2f} :catchall_36

    .line 7404
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7407
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 7408
    return-void

    .line 7404
    :catchall_36
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public freezeSufaceUntilResizing()V
    .registers 2

    .prologue
    .line 6251
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    if-nez v0, :cond_e

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindow:Z

    if-nez v0, :cond_e

    .line 6254
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mResizingMultiWindow:Z

    .line 6255
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->createScreenFreezeSurface()V

    .line 6257
    :cond_e
    return-void
.end method

.method public getAnimationScale(I)F
    .registers 3
    .param p1, "which"    # I

    .prologue
    .line 6603
    packed-switch p1, :pswitch_data_e

    .line 6608
    const/4 v0, 0x0

    :goto_4
    return v0

    .line 6604
    :pswitch_5
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScale:F

    goto :goto_4

    .line 6605
    :pswitch_8
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    goto :goto_4

    .line 6606
    :pswitch_b
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScale:F

    goto :goto_4

    .line 6603
    :pswitch_data_e
    .packed-switch 0x0
        :pswitch_5
        :pswitch_8
        :pswitch_b
    .end packed-switch
.end method

.method public getAnimationScales()[F
    .registers 4

    .prologue
    .line 6613
    const/4 v0, 0x3

    new-array v0, v0, [F

    const/4 v1, 0x0

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScale:F

    aput v2, v0, v1

    const/4 v1, 0x1

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    aput v2, v0, v1

    const/4 v1, 0x2

    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScale:F

    aput v2, v0, v1

    return-object v0
.end method

.method public getAppOrientation(Landroid/view/IApplicationToken;)I
    .registers 5
    .param p1, "token"    # Landroid/view/IApplicationToken;

    .prologue
    .line 4750
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4751
    :try_start_3
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 4752
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_10

    .line 4753
    const/4 v1, -0x1

    monitor-exit v2

    .line 4756
    :goto_f
    return v1

    :cond_10
    iget v1, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    monitor-exit v2

    goto :goto_f

    .line 4757
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_14
    move-exception v1

    monitor-exit v2
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_14

    throw v1
.end method

.method public getAppWindowMode(Landroid/view/IApplicationToken;)Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .registers 7
    .param p1, "token"    # Landroid/view/IApplicationToken;

    .prologue
    .line 4406
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string v2, "addAppToken()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_12

    .line 4408
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4411
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4412
    :try_start_15
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 4414
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_3a

    .line 4415
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to change zone for non-existent app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4416
    const/4 v1, 0x0

    monitor-exit v2

    .line 4419
    :goto_39
    return-object v1

    :cond_3a
    iget-object v1, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    monitor-exit v2

    goto :goto_39

    .line 4420
    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3e
    move-exception v1

    monitor-exit v2
    :try_end_40
    .catchall {:try_start_15 .. :try_end_40} :catchall_3e

    throw v1
.end method

.method public getAppicationStackBoxInfo()Landroid/app/ActivityManager$StackBoxInfo;
    .registers 9

    .prologue
    .line 6062
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v4

    .line 6063
    .local v4, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v4, :cond_2e

    .line 6064
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v6, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 6065
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getStackBoxInfos()Ljava/util/ArrayList;

    move-result-object v5

    .line 6066
    .local v5, "stackBoxInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$StackBoxInfo;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "i$":Ljava/util/Iterator;
    :cond_19
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_2b

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/app/ActivityManager$StackBoxInfo;

    .line 6067
    .local v3, "info":Landroid/app/ActivityManager$StackBoxInfo;
    iget v6, v3, Landroid/app/ActivityManager$StackBoxInfo;->stackBoxType:I

    const/4 v7, 0x2

    if-ne v6, v7, :cond_19

    .line 6074
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "i$":Ljava/util/Iterator;
    .end local v3    # "info":Landroid/app/ActivityManager$StackBoxInfo;
    .end local v5    # "stackBoxInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$StackBoxInfo;>;"
    :goto_2a
    return-object v3

    .line 6063
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v2    # "i$":Ljava/util/Iterator;
    .restart local v5    # "stackBoxInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$StackBoxInfo;>;"
    :cond_2b
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 6074
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v2    # "i$":Ljava/util/Iterator;
    .end local v5    # "stackBoxInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$StackBoxInfo;>;"
    :cond_2e
    const/4 v3, 0x0

    goto :goto_2a
.end method

.method public getAvailableSplitStackId(ILcom/samsung/android/multiwindow/MultiWindowStyle;)I
    .registers 6
    .param p1, "relativeStackId"    # I
    .param p2, "multiWindowStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .prologue
    .line 13368
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 13369
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 13370
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_15

    .line 13371
    iget-object v1, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v1, p2}, Lcom/android/server/wm/StackBox;->getEnableSplitstackId(Lcom/samsung/android/multiwindow/MultiWindowStyle;)I

    move-result v1

    monitor-exit v2

    .line 13374
    :goto_14
    return v1

    .line 13373
    :cond_15
    monitor-exit v2

    .line 13374
    const/4 v1, 0x1

    goto :goto_14

    .line 13373
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_18
    move-exception v1

    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_3 .. :try_end_1a} :catchall_18

    throw v1
.end method

.method public getBaseDisplayDensity(I)I
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 9472
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9473
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9474
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_21

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_21

    .line 9475
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_1e

    .line 9476
    :try_start_16
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayDensity:I

    monitor-exit v3
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_1b

    :try_start_19
    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_1e

    .line 9480
    :goto_1a
    return v1

    .line 9477
    :catchall_1b
    move-exception v1

    :try_start_1c
    monitor-exit v3
    :try_end_1d
    .catchall {:try_start_1c .. :try_end_1d} :catchall_1b

    :try_start_1d
    throw v1

    .line 9479
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1e
    move-exception v1

    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1d .. :try_end_20} :catchall_1e

    throw v1

    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_21
    :try_start_21
    monitor-exit v2
    :try_end_22
    .catchall {:try_start_21 .. :try_end_22} :catchall_1e

    .line 9480
    const/4 v1, -0x1

    goto :goto_1a
.end method

.method public getBaseDisplaySize(ILandroid/graphics/Point;)V
    .registers 7
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .prologue
    .line 9328
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9329
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9330
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1f

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_1f

    .line 9331
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_24

    .line 9332
    :try_start_16
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayWidth:I

    iput v1, p2, Landroid/graphics/Point;->x:I

    .line 9333
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mBaseDisplayHeight:I

    iput v1, p2, Landroid/graphics/Point;->y:I

    .line 9334
    monitor-exit v3
    :try_end_1f
    .catchall {:try_start_16 .. :try_end_1f} :catchall_21

    .line 9336
    :cond_1f
    :try_start_1f
    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_24

    .line 9337
    return-void

    .line 9334
    :catchall_21
    move-exception v1

    :try_start_22
    monitor-exit v3
    :try_end_23
    .catchall {:try_start_22 .. :try_end_23} :catchall_21

    :try_start_23
    throw v1

    .line 9336
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_24
    move-exception v1

    monitor-exit v2
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_24

    throw v1
.end method

.method public getCompatibleMagnificationSpecForWindow(Landroid/os/IBinder;)Landroid/view/MagnificationSpec;
    .registers 8
    .param p1, "windowToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v2, 0x0

    .line 3907
    const-string v3, "android.permission.MAGNIFY_DISPLAY"

    const-string v4, "getCompatibleMagnificationSpecForWindow()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_13

    .line 3909
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires MAGNIFY_DISPLAY permission."

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 3911
    :cond_13
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 3912
    :try_start_16
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v4, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 3913
    .local v1, "windowState":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_23

    .line 3914
    monitor-exit v3

    move-object v0, v2

    .line 3925
    :goto_22
    return-object v0

    .line 3916
    :cond_23
    const/4 v0, 0x0

    .line 3917
    .local v0, "spec":Landroid/view/MagnificationSpec;
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v4, :cond_2e

    .line 3918
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/DisplayMagnifier;->getMagnificationSpecForWindowLocked(Lcom/android/server/wm/WindowState;)Landroid/view/MagnificationSpec;

    move-result-object v0

    .line 3920
    :cond_2e
    if-eqz v0, :cond_36

    invoke-virtual {v0}, Landroid/view/MagnificationSpec;->isNop()Z

    move-result v4

    if-eqz v4, :cond_41

    :cond_36
    iget v4, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    const/high16 v5, 0x3f800000

    cmpl-float v4, v4, v5

    if-nez v4, :cond_41

    .line 3921
    monitor-exit v3

    move-object v0, v2

    goto :goto_22

    .line 3923
    :cond_41
    if-nez v0, :cond_53

    invoke-static {}, Landroid/view/MagnificationSpec;->obtain()Landroid/view/MagnificationSpec;

    move-result-object v0

    .line 3924
    :goto_47
    iget v2, v0, Landroid/view/MagnificationSpec;->scale:F

    iget v4, v1, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    mul-float/2addr v2, v4

    iput v2, v0, Landroid/view/MagnificationSpec;->scale:F

    .line 3925
    monitor-exit v3

    goto :goto_22

    .line 3926
    .end local v0    # "spec":Landroid/view/MagnificationSpec;
    .end local v1    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_50
    move-exception v2

    monitor-exit v3
    :try_end_52
    .catchall {:try_start_16 .. :try_end_52} :catchall_50

    throw v2

    .line 3923
    .restart local v0    # "spec":Landroid/view/MagnificationSpec;
    .restart local v1    # "windowState":Lcom/android/server/wm/WindowState;
    :cond_53
    :try_start_53
    invoke-static {v0}, Landroid/view/MagnificationSpec;->obtain(Landroid/view/MagnificationSpec;)Landroid/view/MagnificationSpec;
    :try_end_56
    .catchall {:try_start_53 .. :try_end_56} :catchall_50

    move-result-object v0

    goto :goto_47
.end method

.method public getCoverState()I
    .registers 8

    .prologue
    const/4 v2, -0x1

    .line 6682
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v4, -0x1

    const/16 v5, -0x100

    const/16 v6, 0x15

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_b} :catch_14

    move-result v1

    .line 6684
    .local v1, "sw":I
    if-lez v1, :cond_10

    .line 6686
    const/4 v2, 0x1

    .line 6696
    .end local v1    # "sw":I
    :cond_f
    :goto_f
    return v2

    .line 6687
    .restart local v1    # "sw":I
    :cond_10
    if-nez v1, :cond_f

    .line 6689
    const/4 v2, 0x0

    goto :goto_f

    .line 6694
    .end local v1    # "sw":I
    :catch_14
    move-exception v0

    .line 6695
    .local v0, "e":Ljava/lang/Exception;
    const-string v3, "WindowManager"

    const-string v4, "getCoverState(). Can\'t get cover state!"

    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_f
.end method

.method public getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;
    .registers 2

    .prologue
    .line 12722
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;
    .registers 2

    .prologue
    .line 12730
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v0

    return-object v0
.end method

.method public getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;
    .registers 2

    .prologue
    .line 12726
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v0

    return-object v0
.end method

.method public getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;
    .registers 5
    .param p1, "displayId"    # I

    .prologue
    .line 12710
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/DisplayContent;

    .line 12711
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v1, :cond_16

    .line 12712
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayManager:Landroid/hardware/display/DisplayManager;

    invoke-virtual {v2, p1}, Landroid/hardware/display/DisplayManager;->getDisplay(I)Landroid/view/Display;

    move-result-object v0

    .line 12713
    .local v0, "display":Landroid/view/Display;
    if-eqz v0, :cond_16

    .line 12714
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->newDisplayContentLocked(Landroid/view/Display;)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 12717
    .end local v0    # "display":Landroid/view/Display;
    :cond_16
    return-object v1
.end method

.method getEasyOneHandScaleSpecLocked(I)Landroid/view/MagnificationSpec;
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 3984
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 3985
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_13

    .line 3986
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mEasyOneHandScaleSpec:Landroid/view/MagnificationSpec;

    if-nez v1, :cond_10

    .line 3987
    invoke-static {}, Landroid/view/MagnificationSpec;->obtain()Landroid/view/MagnificationSpec;

    move-result-object v1

    iput-object v1, v0, Lcom/android/server/wm/DisplayContent;->mEasyOneHandScaleSpec:Landroid/view/MagnificationSpec;

    .line 3989
    :cond_10
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mEasyOneHandScaleSpec:Landroid/view/MagnificationSpec;

    .line 3991
    :goto_12
    return-object v1

    :cond_13
    const/4 v1, 0x0

    goto :goto_12
.end method

.method public getFocusedStackLayer()I
    .registers 3

    .prologue
    .line 4815
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4816
    :try_start_3
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    monitor-exit v1

    return v0

    .line 4817
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public getFocusedWindowToken()Landroid/os/IBinder;
    .registers 4

    .prologue
    .line 8550
    const-string v1, "android.permission.RETRIEVE_WINDOW_INFO"

    const-string v2, "getFocusedWindowToken()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_12

    .line 8552
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires RETRIEVE_WINDOW_INFO permission."

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8554
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8555
    :try_start_15
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindowLocked()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 8556
    .local v0, "windowState":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_23

    .line 8557
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v1}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    monitor-exit v2

    .line 8559
    :goto_22
    return-object v1

    :cond_23
    const/4 v1, 0x0

    monitor-exit v2

    goto :goto_22

    .line 8560
    .end local v0    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_26
    move-exception v1

    monitor-exit v2
    :try_end_28
    .catchall {:try_start_15 .. :try_end_28} :catchall_26

    throw v1
.end method

.method public getGlobalSystemUiVisibility()I
    .registers 3

    .prologue
    .line 4362
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4363
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->getGlobalSystemUiVisibility()I

    move-result v0

    monitor-exit v1

    return v0

    .line 4364
    :catchall_b
    move-exception v0

    monitor-exit v1
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw v0
.end method

.method public getGloveState()I
    .registers 8

    .prologue
    const/4 v2, -0x1

    .line 6710
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v4, -0x1

    const/16 v5, -0x100

    const/16 v6, 0x16

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_b} :catch_14

    move-result v1

    .line 6712
    .local v1, "sw":I
    if-lez v1, :cond_10

    .line 6714
    const/4 v2, 0x1

    .line 6724
    .end local v1    # "sw":I
    :cond_f
    :goto_f
    return v2

    .line 6715
    .restart local v1    # "sw":I
    :cond_10
    if-nez v1, :cond_f

    .line 6717
    const/4 v2, 0x0

    goto :goto_f

    .line 6722
    .end local v1    # "sw":I
    :catch_14
    move-exception v0

    .line 6723
    .local v0, "e":Ljava/lang/Exception;
    const-string v3, "WindowManager"

    const-string v4, "getGloveState(). Can\'t get glove mode state!"

    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_f
.end method

.method public getInitialDisplayDensity(I)I
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 9459
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9460
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9461
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_21

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_21

    .line 9462
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_1e

    .line 9463
    :try_start_16
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayDensity:I

    monitor-exit v3
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_1b

    :try_start_19
    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_19 .. :try_end_1a} :catchall_1e

    .line 9467
    :goto_1a
    return v1

    .line 9464
    :catchall_1b
    move-exception v1

    :try_start_1c
    monitor-exit v3
    :try_end_1d
    .catchall {:try_start_1c .. :try_end_1d} :catchall_1b

    :try_start_1d
    throw v1

    .line 9466
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_1e
    move-exception v1

    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1d .. :try_end_20} :catchall_1e

    throw v1

    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_21
    :try_start_21
    monitor-exit v2
    :try_end_22
    .catchall {:try_start_21 .. :try_end_22} :catchall_1e

    .line 9467
    const/4 v1, -0x1

    goto :goto_1a
.end method

.method public getInitialDisplaySize(ILandroid/graphics/Point;)V
    .registers 7
    .param p1, "displayId"    # I
    .param p2, "size"    # Landroid/graphics/Point;

    .prologue
    .line 9315
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 9316
    :try_start_3
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9317
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_1f

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->hasAccess(I)Z

    move-result v1

    if-eqz v1, :cond_1f

    .line 9318
    iget-object v3, v0, Lcom/android/server/wm/DisplayContent;->mDisplaySizeLock:Ljava/lang/Object;

    monitor-enter v3
    :try_end_16
    .catchall {:try_start_3 .. :try_end_16} :catchall_24

    .line 9319
    :try_start_16
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iput v1, p2, Landroid/graphics/Point;->x:I

    .line 9320
    iget v1, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    iput v1, p2, Landroid/graphics/Point;->y:I

    .line 9321
    monitor-exit v3
    :try_end_1f
    .catchall {:try_start_16 .. :try_end_1f} :catchall_21

    .line 9323
    :cond_1f
    :try_start_1f
    monitor-exit v2
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_24

    .line 9324
    return-void

    .line 9321
    :catchall_21
    move-exception v1

    :try_start_22
    monitor-exit v3
    :try_end_23
    .catchall {:try_start_22 .. :try_end_23} :catchall_21

    :try_start_23
    throw v1

    .line 9323
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_24
    move-exception v1

    monitor-exit v2
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_24

    throw v1
.end method

.method public getInputMonitor()Lcom/android/server/wm/InputMonitor;
    .registers 2

    .prologue
    .line 912
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    return-object v0
.end method

.method public getLayerForTasks(Ljava/util/ArrayList;)[I
    .registers 14
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;)[I"
        }
    .end annotation

    .prologue
    .line 9813
    .local p1, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    if-nez p1, :cond_4

    .line 9814
    const/4 v3, 0x0

    .line 9838
    :goto_3
    return-object v3

    .line 9816
    :cond_4
    const/4 v9, 0x2

    new-array v3, v9, [I

    fill-array-data v3, :array_8a

    .line 9817
    .local v3, "layers":[I
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 9818
    .local v0, "_tokens":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/AppWindowToken;>;"
    invoke-virtual {p1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_13
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_4b

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Ljava/lang/Integer;

    invoke-virtual {v9}, Ljava/lang/Integer;->intValue()I

    move-result v4

    .line 9819
    .local v4, "task":I
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v9, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v6, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 9820
    .local v6, "tokenList":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "i$":Ljava/util/Iterator;
    :goto_31
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_13

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 9821
    .local v5, "token":Lcom/android/server/wm/AppWindowToken;
    iget-object v9, v5, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    invoke-interface {v9}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v9

    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v9

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_31

    .line 9825
    .end local v2    # "i$":Ljava/util/Iterator;
    .end local v4    # "task":I
    .end local v5    # "token":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "tokenList":Lcom/android/server/wm/AppTokenList;
    :cond_4b
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v10

    .line 9826
    :try_start_4e
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v8

    .line 9827
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_56
    :goto_56
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_87

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 9828
    .local v7, "win":Lcom/android/server/wm/WindowState;
    iget-object v9, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_56

    .line 9829
    iget v9, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    const/4 v11, 0x0

    aget v11, v3, v11

    if-ge v9, v11, :cond_7a

    .line 9830
    const/4 v9, 0x0

    iget v11, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    aput v11, v3, v9

    goto :goto_56

    .line 9837
    .end local v1    # "i$":Ljava/util/Iterator;
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    .end local v8    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_77
    move-exception v9

    monitor-exit v10
    :try_end_79
    .catchall {:try_start_4e .. :try_end_79} :catchall_77

    throw v9

    .line 9831
    .restart local v1    # "i$":Ljava/util/Iterator;
    .restart local v7    # "win":Lcom/android/server/wm/WindowState;
    .restart local v8    # "windows":Lcom/android/server/wm/WindowList;
    :cond_7a
    :try_start_7a
    iget v9, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    const/4 v11, 0x1

    aget v11, v3, v11

    if-le v9, v11, :cond_56

    .line 9832
    const/4 v9, 0x1

    iget v11, v7, Lcom/android/server/wm/WindowState;->mLayer:I

    aput v11, v3, v9

    goto :goto_56

    .line 9837
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    :cond_87
    monitor-exit v10
    :try_end_88
    .catchall {:try_start_7a .. :try_end_88} :catchall_77

    goto/16 :goto_3

    .line 9816
    :array_8a
    .array-data 4
        0x55f0
        0x5208
    .end array-data
.end method

.method public getLidState()I
    .registers 6

    .prologue
    const/4 v1, 0x0

    const/4 v2, -0x1

    .line 6630
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/16 v4, -0x100

    invoke-virtual {v3, v2, v4, v1}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I

    move-result v0

    .line 6632
    .local v0, "sw":I
    if-lez v0, :cond_d

    .line 6640
    :goto_c
    return v1

    .line 6635
    :cond_d
    if-nez v0, :cond_11

    .line 6637
    const/4 v1, 0x1

    goto :goto_c

    :cond_11
    move v1, v2

    .line 6640
    goto :goto_c
.end method

.method public getMainWindowAttributes(Landroid/view/IApplicationToken;)Landroid/view/WindowManager$LayoutParams;
    .registers 7
    .param p1, "token"    # Landroid/view/IApplicationToken;

    .prologue
    const/4 v2, 0x0

    .line 13574
    if-nez p1, :cond_4

    .line 13584
    :goto_3
    return-object v2

    .line 13578
    :cond_4
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 13579
    :try_start_7
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 13580
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_16

    .line 13581
    monitor-exit v3

    goto :goto_3

    .line 13585
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_13
    move-exception v2

    monitor-exit v3
    :try_end_15
    .catchall {:try_start_7 .. :try_end_15} :catchall_13

    throw v2

    .line 13583
    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_16
    :try_start_16
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 13584
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_1e

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    :cond_1e
    monitor-exit v3
    :try_end_1f
    .catchall {:try_start_16 .. :try_end_1f} :catchall_13

    goto :goto_3
.end method

.method public getOrientationFromAppTokensLocked()I
    .registers 16

    .prologue
    const/4 v12, -0x1

    const/4 v14, 0x3

    .line 4519
    const/4 v5, -0x1

    .line 4520
    .local v5, "lastOrientation":I
    const/4 v2, 0x0

    .line 4521
    .local v2, "findingBehind":Z
    const/4 v4, 0x0

    .line 4523
    .local v4, "lastFullscreen":Z
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 4524
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v8

    .line 4525
    .local v8, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v11

    add-int/lit8 v7, v11, -0x1

    .local v7, "taskNdx":I
    :goto_13
    if-ltz v7, :cond_70

    .line 4526
    invoke-virtual {v8, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/Task;

    iget-object v10, v11, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 4527
    .local v10, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v10}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v11

    add-int/lit8 v3, v11, -0x1

    .line 4528
    .local v3, "firstToken":I
    move v9, v3

    .local v9, "tokenNdx":I
    :goto_24
    if-ltz v9, :cond_6d

    .line 4529
    invoke-virtual {v10, v9}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/AppWindowToken;

    .line 4535
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v2, :cond_39

    iget-boolean v11, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-nez v11, :cond_39

    iget-boolean v11, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-eqz v11, :cond_39

    .line 4528
    :cond_36
    :goto_36
    add-int/lit8 v9, v9, -0x1

    goto :goto_24

    .line 4542
    :cond_39
    if-ne v9, v3, :cond_41

    .line 4548
    if-eq v5, v14, :cond_41

    if-eqz v4, :cond_41

    move v6, v5

    .line 4599
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v3    # "firstToken":I
    .end local v9    # "tokenNdx":I
    .end local v10    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_40
    :goto_40
    return v6

    .line 4557
    .restart local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v3    # "firstToken":I
    .restart local v9    # "tokenNdx":I
    .restart local v10    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_41
    iget-boolean v11, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-nez v11, :cond_36

    iget-boolean v11, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    if-nez v11, :cond_36

    .line 4564
    iget-object v11, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    if-eqz v11, :cond_56

    iget-object v11, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v11}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v11

    const/4 v13, 0x2

    if-eq v11, v13, :cond_36

    .line 4571
    :cond_56
    if-nez v9, :cond_5a

    .line 4573
    iget v5, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 4575
    :cond_5a
    iget v6, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 4580
    .local v6, "or":I
    iget-boolean v4, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 4581
    if-eqz v4, :cond_62

    if-ne v6, v14, :cond_40

    .line 4589
    :cond_62
    if-eq v6, v12, :cond_66

    if-ne v6, v14, :cond_40

    .line 4595
    :cond_66
    if-ne v6, v14, :cond_6b

    const/4 v11, 0x1

    :goto_69
    or-int/2addr v2, v11

    goto :goto_36

    :cond_6b
    const/4 v11, 0x0

    goto :goto_69

    .line 4525
    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v6    # "or":I
    :cond_6d
    add-int/lit8 v7, v7, -0x1

    goto :goto_13

    .end local v3    # "firstToken":I
    .end local v9    # "tokenNdx":I
    .end local v10    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_70
    move v6, v12

    .line 4599
    goto :goto_40
.end method

.method public getOrientationFromWindowsLocked()I
    .registers 10

    .prologue
    const/16 v8, 0x832

    const/16 v7, 0x7d4

    const/4 v6, 0x0

    const/4 v4, -0x1

    .line 4457
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v5, :cond_1e

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-lez v5, :cond_16

    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissKeyguardOnNextActivity:Z

    if-eqz v5, :cond_1e

    :cond_16
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-lez v5, :cond_21

    .line 4463
    :cond_1e
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    .line 4515
    :goto_20
    return v1

    .line 4467
    :cond_21
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v3

    .line 4468
    .local v3, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v0, v5, -0x1

    .line 4469
    .local v0, "pos":I
    :cond_2b
    :goto_2b
    if-ltz v0, :cond_90

    .line 4470
    invoke-virtual {v3, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 4471
    .local v2, "win":Lcom/android/server/wm/WindowState;
    add-int/lit8 v0, v0, -0x1

    .line 4472
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_3d

    .line 4475
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    move v1, v4

    goto :goto_20

    .line 4477
    :cond_3d
    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v5

    if-eqz v5, :cond_47

    iget-boolean v5, v2, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    if-nez v5, :cond_68

    .line 4478
    :cond_47
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    if-eqz v5, :cond_57

    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v5, v7, :cond_57

    .line 4480
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissKeyguardOnNextActivity:Z

    if-eqz v5, :cond_57

    .line 4481
    iput-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissKeyguardOnNextActivity:Z

    .line 4486
    :cond_57
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    if-eqz v5, :cond_2b

    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v5, v8, :cond_2b

    .line 4487
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissCoverUIOnNextActivity:Z

    if-eqz v5, :cond_2b

    .line 4488
    iput-boolean v6, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissCoverUIOnNextActivity:Z

    goto :goto_2b

    .line 4494
    :cond_68
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v5, Landroid/view/WindowManager$LayoutParams;->screenOrientation:I

    .line 4495
    .local v1, "req":I
    if-eq v1, v4, :cond_2b

    const/4 v5, 0x3

    if-eq v1, v5, :cond_2b

    .line 4501
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    if-eqz v5, :cond_7f

    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v5, v7, :cond_7f

    .line 4502
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissKeyguardOnNextActivity:Z

    if-nez v5, :cond_2b

    .line 4507
    :cond_7f
    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    if-eqz v5, :cond_8d

    iget-object v5, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v5, v8, :cond_8d

    .line 4508
    iget-boolean v5, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissCoverUIOnNextActivity:Z

    if-nez v5, :cond_2b

    .line 4513
    :cond_8d
    iput v1, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    goto :goto_20

    .line 4515
    .end local v1    # "req":I
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_90
    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mLastWindowForcedOrientation:I

    move v1, v4

    goto :goto_20
.end method

.method public getPenState()I
    .registers 8

    .prologue
    const/4 v2, -0x1

    .line 6653
    :try_start_1
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    const/4 v4, -0x1

    const/16 v5, -0x100

    const/16 v6, 0x13

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/input/InputManagerService;->getSwitchState(III)I
    :try_end_b
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_b} :catch_14

    move-result v1

    .line 6655
    .local v1, "sw":I
    if-lez v1, :cond_10

    .line 6657
    const/4 v2, 0x0

    .line 6667
    .end local v1    # "sw":I
    :cond_f
    :goto_f
    return v2

    .line 6658
    .restart local v1    # "sw":I
    :cond_10
    if-nez v1, :cond_f

    .line 6660
    const/4 v2, 0x1

    goto :goto_f

    .line 6665
    .end local v1    # "sw":I
    :catch_14
    move-exception v0

    .line 6666
    .local v0, "e":Ljava/lang/Exception;
    const-string v3, "WindowManager"

    const-string v4, "getPenState(). Can\'t get PenState!"

    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_f
.end method

.method public getPendingAppTransition()I
    .registers 2

    .prologue
    .line 5015
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    move-result v0

    return v0
.end method

.method public getPreferredOptionsPanelGravity()I
    .registers 9

    .prologue
    const v4, 0x800053

    const/16 v3, 0x55

    const/16 v2, 0x51

    .line 7723
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 7724
    :try_start_a
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getRotation()I

    move-result v1

    .line 7727
    .local v1, "rotation":I
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 7728
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget v6, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    iget v7, v0, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    if-ge v6, v7, :cond_28

    .line 7730
    packed-switch v1, :pswitch_data_36

    .line 7733
    monitor-exit v5

    .line 7753
    :goto_1c
    return v2

    .line 7735
    :pswitch_1d
    monitor-exit v5

    move v2, v3

    goto :goto_1c

    .line 7737
    :pswitch_20
    monitor-exit v5

    goto :goto_1c

    .line 7755
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "rotation":I
    :catchall_22
    move-exception v2

    monitor-exit v5
    :try_end_24
    .catchall {:try_start_a .. :try_end_24} :catchall_22

    throw v2

    .line 7739
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v1    # "rotation":I
    :pswitch_25
    :try_start_25
    monitor-exit v5

    move v2, v4

    goto :goto_1c

    .line 7744
    :cond_28
    packed-switch v1, :pswitch_data_40

    .line 7747
    monitor-exit v5

    move v2, v3

    goto :goto_1c

    .line 7749
    :pswitch_2e
    monitor-exit v5

    goto :goto_1c

    .line 7751
    :pswitch_30
    monitor-exit v5

    move v2, v4

    goto :goto_1c

    .line 7753
    :pswitch_33
    monitor-exit v5
    :try_end_34
    .catchall {:try_start_25 .. :try_end_34} :catchall_22

    goto :goto_1c

    .line 7730
    nop

    :pswitch_data_36
    .packed-switch 0x1
        :pswitch_1d
        :pswitch_20
        :pswitch_25
    .end packed-switch

    .line 7744
    :pswitch_data_40
    .packed-switch 0x1
        :pswitch_2e
        :pswitch_30
        :pswitch_33
    .end packed-switch
.end method

.method public getRootStackBoxInfo(I)Landroid/app/ActivityManager$StackBoxInfo;
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 13567
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 13568
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 13569
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    sget-object v1, Lcom/android/server/wm/WindowManagerService$LEVEL;->ROOT:Lcom/android/server/wm/WindowManagerService$LEVEL;

    invoke-virtual {v0, p1, v1}, Lcom/android/server/wm/DisplayContent;->getStackBoxInfoByStackId(ILcom/android/server/wm/WindowManagerService$LEVEL;)Landroid/app/ActivityManager$StackBoxInfo;

    move-result-object v1

    monitor-exit v2

    return-object v1

    .line 13570
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_f
    move-exception v1

    monitor-exit v2
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_f

    throw v1
.end method

.method public getRotation()I
    .registers 2

    .prologue
    .line 7651
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    return v0
.end method

.method public getStackBound(I)Landroid/graphics/Rect;
    .registers 6
    .param p1, "stackId"    # I

    .prologue
    const/4 v1, 0x0

    .line 12884
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 12885
    :try_start_4
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 12886
    .local v0, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_17

    .line 12887
    iget-object v1, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    const/4 v3, 0x0

    invoke-virtual {v1, v3}, Lcom/android/server/wm/StackBox;->getStackBounds(Lcom/android/server/wm/AppWindowToken;)Landroid/graphics/Rect;

    move-result-object v1

    monitor-exit v2

    .line 12890
    :goto_16
    return-object v1

    .line 12889
    :cond_17
    monitor-exit v2

    goto :goto_16

    .end local v0    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_19
    move-exception v1

    monitor-exit v2
    :try_end_1b
    .catchall {:try_start_4 .. :try_end_1b} :catchall_19

    throw v1
.end method

.method public getStackBounds(I)Landroid/graphics/Rect;
    .registers 6
    .param p1, "stackId"    # I

    .prologue
    .line 6377
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 6378
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_7
    if-ge v1, v2, :cond_1b

    .line 6379
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v3, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v3, p1}, Lcom/android/server/wm/DisplayContent;->getStackBounds(I)Landroid/graphics/Rect;

    move-result-object v0

    .line 6380
    .local v0, "bounds":Landroid/graphics/Rect;
    if-eqz v0, :cond_18

    .line 6384
    .end local v0    # "bounds":Landroid/graphics/Rect;
    :goto_17
    return-object v0

    .line 6378
    .restart local v0    # "bounds":Landroid/graphics/Rect;
    :cond_18
    add-int/lit8 v1, v1, 0x1

    goto :goto_7

    .line 6384
    .end local v0    # "bounds":Landroid/graphics/Rect;
    :cond_1b
    const/4 v0, 0x0

    goto :goto_17
.end method

.method public getStackBoxId(I)I
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 13358
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 13359
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 13360
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_13

    .line 13361
    iget-object v1, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    iget v1, v1, Lcom/android/server/wm/StackBox;->mStackBoxId:I

    monitor-exit v2

    .line 13364
    :goto_12
    return v1

    .line 13363
    :cond_13
    monitor-exit v2

    .line 13364
    const/4 v1, 0x1

    goto :goto_12

    .line 13363
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_16
    move-exception v1

    monitor-exit v2
    :try_end_18
    .catchall {:try_start_3 .. :try_end_18} :catchall_16

    throw v1
.end method

.method public getStackBoxInfos()Ljava/util/ArrayList;
    .registers 3
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/app/ActivityManager$StackBoxInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 6371
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 6372
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getStackBoxInfos()Ljava/util/ArrayList;

    move-result-object v0

    monitor-exit v1

    return-object v0

    .line 6373
    :catchall_d
    move-exception v0

    monitor-exit v1
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_d

    throw v0
.end method

.method public getStackBoxPosition(I)Landroid/graphics/Point;
    .registers 12
    .param p1, "stackId"    # I

    .prologue
    .line 12894
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 12895
    :try_start_3
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/TaskStack;

    .line 12896
    .local v3, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v3, :cond_40

    .line 12897
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 12898
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v1

    .line 12900
    .local v1, "displayInfo":Landroid/view/DisplayInfo;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 12902
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v6

    add-int/lit8 v2, v6, -0x1

    .local v2, "i":I
    :goto_1f
    if-ltz v2, :cond_40

    .line 12903
    invoke-virtual {v5, v2}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 12904
    .local v4, "w":Lcom/android/server/wm/WindowState;
    iget-object v6, v4, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v6, v6, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v8, 0x1

    if-ne v6, v8, :cond_3d

    .line 12905
    new-instance v6, Landroid/graphics/Point;

    iget-object v8, v4, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    iget v8, v8, Landroid/graphics/Rect;->left:I

    iget-object v9, v4, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    iget v9, v9, Landroid/graphics/Rect;->top:I

    invoke-direct {v6, v8, v9}, Landroid/graphics/Point;-><init>(II)V

    monitor-exit v7

    .line 12910
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :goto_3c
    return-object v6

    .line 12902
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v1    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v2    # "i":I
    .restart local v4    # "w":Lcom/android/server/wm/WindowState;
    .restart local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3d
    add-int/lit8 v2, v2, -0x1

    goto :goto_1f

    .line 12909
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v2    # "i":I
    .end local v4    # "w":Lcom/android/server/wm/WindowState;
    .end local v5    # "windows":Lcom/android/server/wm/WindowList;
    :cond_40
    monitor-exit v7

    .line 12910
    const/4 v6, 0x0

    goto :goto_3c

    .line 12909
    .end local v3    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_43
    move-exception v6

    monitor-exit v7
    :try_end_45
    .catchall {:try_start_3 .. :try_end_45} :catchall_43

    throw v6
.end method

.method public getStackBoxWeight(I)F
    .registers 4
    .param p1, "level"    # I

    .prologue
    .line 6242
    const/4 v1, 0x0

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 6243
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mWeightList:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-le v1, p1, :cond_1a

    .line 6244
    iget-object v1, v0, Lcom/android/server/wm/DisplayContent;->mWeightList:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/Float;

    invoke-virtual {v1}, Ljava/lang/Float;->floatValue()F

    move-result v1

    .line 6247
    :goto_19
    return v1

    :cond_1a
    const/high16 v1, 0x3f000000

    goto :goto_19
.end method

.method public getStackOrder(Z)Ljava/util/ArrayList;
    .registers 5
    .param p1, "bAllStack"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z)",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation

    .prologue
    .line 13533
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 13534
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 13535
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayContent;->getStackOrder(Z)Ljava/util/ArrayList;

    move-result-object v1

    monitor-exit v2

    return-object v1

    .line 13536
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_d
    move-exception v1

    monitor-exit v2
    :try_end_f
    .catchall {:try_start_3 .. :try_end_f} :catchall_d

    throw v1
.end method

.method public getStackOriginalBound(ILandroid/os/IBinder;)Landroid/graphics/Rect;
    .registers 11
    .param p1, "stackId"    # I
    .param p2, "activityToken"    # Landroid/os/IBinder;

    .prologue
    .line 12918
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7

    .line 12919
    :try_start_3
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v6, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/TaskStack;

    .line 12920
    .local v4, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v4, :cond_44

    .line 12921
    const/4 v0, 0x0

    .line 12922
    .local v0, "appToken":Lcom/android/server/wm/AppWindowToken;
    if-eqz p2, :cond_3c

    .line 12923
    invoke-virtual {v4}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v6

    invoke-virtual {v6}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :cond_18
    :goto_18
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_3c

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/Task;

    .line 12924
    .local v3, "t":Lcom/android/server/wm/Task;
    iget-object v6, v3, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "i$":Ljava/util/Iterator;
    :cond_2a
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_18

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/AppWindowToken;

    .line 12925
    .local v5, "token":Lcom/android/server/wm/AppWindowToken;
    iget-object v6, v5, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-ne v6, p2, :cond_2a

    .line 12926
    move-object v0, v5

    .line 12927
    goto :goto_18

    .line 12932
    .end local v2    # "i$":Ljava/util/Iterator;
    .end local v3    # "t":Lcom/android/server/wm/Task;
    .end local v5    # "token":Lcom/android/server/wm/AppWindowToken;
    :cond_3c
    iget-object v6, v4, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v6, v0}, Lcom/android/server/wm/StackBox;->getStackOriginalBound(Lcom/android/server/wm/AppWindowToken;)Landroid/graphics/Rect;

    move-result-object v6

    monitor-exit v7

    .line 12935
    .end local v0    # "appToken":Lcom/android/server/wm/AppWindowToken;
    :goto_43
    return-object v6

    .line 12934
    :cond_44
    monitor-exit v7

    .line 12935
    const/4 v6, 0x0

    goto :goto_43

    .line 12934
    .end local v4    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_47
    move-exception v6

    monitor-exit v7
    :try_end_49
    .catchall {:try_start_3 .. :try_end_49} :catchall_47

    throw v6
.end method

.method public getTaskOrder()Ljava/util/ArrayList;
    .registers 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/wm/WindowManagerService$TaskOrderInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 13550
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 13551
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 13552
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v4

    .line 13554
    .local v4, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 13556
    .local v3, "taskOrder":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowManagerService$TaskOrderInfo;>;"
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_16
    if-ltz v1, :cond_35

    .line 13557
    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/Task;

    .line 13558
    .local v2, "task":Lcom/android/server/wm/Task;
    iget v5, v2, Lcom/android/server/wm/Task;->mUserId:I

    iget v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    if-ne v5, v7, :cond_32

    .line 13559
    new-instance v5, Lcom/android/server/wm/WindowManagerService$TaskOrderInfo;

    iget v7, v2, Lcom/android/server/wm/Task;->taskId:I

    iget-object v8, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    iget v8, v8, Lcom/android/server/wm/TaskStack;->mStackId:I

    invoke-direct {v5, v7, v8}, Lcom/android/server/wm/WindowManagerService$TaskOrderInfo;-><init>(II)V

    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 13556
    :cond_32
    add-int/lit8 v1, v1, -0x1

    goto :goto_16

    .line 13562
    .end local v2    # "task":Lcom/android/server/wm/Task;
    :cond_35
    monitor-exit v6

    return-object v3

    .line 13563
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "i":I
    .end local v3    # "taskOrder":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowManagerService$TaskOrderInfo;>;"
    .end local v4    # "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    :catchall_37
    move-exception v5

    monitor-exit v6
    :try_end_39
    .catchall {:try_start_3 .. :try_end_39} :catchall_37

    throw v5
.end method

.method getTokenWindowsOnDisplay(Lcom/android/server/wm/WindowToken;Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowList;
    .registers 8
    .param p1, "token"    # Lcom/android/server/wm/WindowToken;
    .param p2, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 1276
    new-instance v3, Lcom/android/server/wm/WindowList;

    invoke-direct {v3}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 1277
    .local v3, "windowList":Lcom/android/server/wm/WindowList;
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 1278
    .local v0, "count":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_c
    if-ge v1, v0, :cond_20

    .line 1279
    iget-object v4, p1, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 1280
    .local v2, "win":Lcom/android/server/wm/WindowState;
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    if-ne v4, p2, :cond_1d

    .line 1281
    invoke-virtual {v3, v2}, Lcom/android/server/wm/WindowList;->add(Ljava/lang/Object;)Z

    .line 1278
    :cond_1d
    add-int/lit8 v1, v1, 0x1

    goto :goto_c

    .line 1284
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_20
    return-object v3
.end method

.method public getWindowContentFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .registers 7
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outContentFrame"    # Landroid/graphics/Rect;

    .prologue
    .line 3321
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3322
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 3323
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_f

    .line 3324
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    .line 3325
    monitor-exit v2

    .line 3329
    :goto_e
    return-void

    .line 3327
    :cond_f
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3328
    monitor-exit v2

    goto :goto_e

    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_16
    move-exception v1

    monitor-exit v2
    :try_end_18
    .catchall {:try_start_4 .. :try_end_18} :catchall_16

    throw v1
.end method

.method public getWindowDisplayFrame(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Rect;)V
    .registers 8
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "outDisplayFrame"    # Landroid/graphics/Rect;

    .prologue
    .line 3299
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3300
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 3301
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_f

    .line 3302
    invoke-virtual {p3}, Landroid/graphics/Rect;->setEmpty()V

    .line 3303
    monitor-exit v2

    .line 3317
    :goto_e
    return-void

    .line 3306
    :cond_f
    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v1

    invoke-virtual {v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v1

    if-eqz v1, :cond_3a

    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v1, v1, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v3, 0x1

    if-ne v1, v3, :cond_3a

    .line 3308
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3309
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    iget v1, v1, Landroid/graphics/Rect;->top:I

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->top:I

    if-ne v1, v3, :cond_35

    .line 3310
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    iget v1, v1, Landroid/graphics/Rect;->bottom:I

    iput v1, p3, Landroid/graphics/Rect;->bottom:I

    .line 3316
    :cond_35
    :goto_35
    monitor-exit v2

    goto :goto_e

    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_37
    move-exception v1

    monitor-exit v2
    :try_end_39
    .catchall {:try_start_4 .. :try_end_39} :catchall_37

    throw v1

    .line 3314
    .restart local v0    # "win":Lcom/android/server/wm/WindowState;
    :cond_3a
    :try_start_3a
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    invoke-virtual {p3, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V
    :try_end_3f
    .catchall {:try_start_3a .. :try_end_3f} :catchall_37

    goto :goto_35
.end method

.method public getWindowFrame(Landroid/os/IBinder;Landroid/graphics/Rect;)V
    .registers 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "outBounds"    # Landroid/graphics/Rect;

    .prologue
    .line 3873
    const-string v1, "android.permission.RETRIEVE_WINDOW_INFO"

    const-string v2, "getWindowInfo()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_12

    .line 3875
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires RETRIEVE_WINDOW_INFO permission."

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 3877
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3878
    :try_start_15
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 3879
    .local v0, "windowState":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_26

    .line 3880
    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    invoke-virtual {p2, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3884
    :goto_24
    monitor-exit v2

    .line 3885
    return-void

    .line 3882
    :cond_26
    invoke-virtual {p2}, Landroid/graphics/Rect;->setEmpty()V

    goto :goto_24

    .line 3884
    .end local v0    # "windowState":Lcom/android/server/wm/WindowState;
    :catchall_2a
    move-exception v1

    monitor-exit v2
    :try_end_2c
    .catchall {:try_start_15 .. :try_end_2c} :catchall_2a

    throw v1
.end method

.method public getWindowId(Landroid/os/IBinder;)Landroid/view/IWindowId;
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 3424
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3425
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 3426
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_11

    iget-object v1, v0, Lcom/android/server/wm/WindowState;->mWindowId:Landroid/view/IWindowId;

    :goto_f
    monitor-exit v2

    return-object v1

    :cond_11
    const/4 v1, 0x0

    goto :goto_f

    .line 3427
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :catchall_13
    move-exception v1

    monitor-exit v2
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_13

    throw v1
.end method

.method public getWindowListLocked(I)Lcom/android/server/wm/WindowList;
    .registers 4
    .param p1, "displayId"    # I

    .prologue
    .line 12748
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 12749
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_b

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v1

    :goto_a
    return-object v1

    :cond_b
    const/4 v1, 0x0

    goto :goto_a
.end method

.method public getWindowListLocked(Landroid/view/Display;)Lcom/android/server/wm/WindowList;
    .registers 3
    .param p1, "display"    # Landroid/view/Display;

    .prologue
    .line 12739
    invoke-virtual {p1}, Landroid/view/Display;->getDisplayId()I

    move-result v0

    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->getWindowListLocked(I)Lcom/android/server/wm/WindowList;

    move-result-object v0

    return-object v0
.end method

.method public getWindowManagerLock()Ljava/lang/Object;
    .registers 2

    .prologue
    .line 12801
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    return-object v0
.end method

.method public handleAppTransitionReadyLocked(Lcom/android/server/wm/WindowList;)I
    .registers 46
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;

    .prologue
    .line 10166
    const/16 v21, 0x0

    .line 10168
    .local v21, "changes":I
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v16

    .line 10169
    .local v16, "NN":I
    const/16 v30, 0x1

    .line 10174
    .local v30, "goodToGo":Z
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v2, :cond_43

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->isTimeout()Z

    move-result v2

    if-nez v2, :cond_43

    .line 10178
    const/16 v31, 0x0

    .local v31, "i":I
    :goto_1e
    move/from16 v0, v31

    move/from16 v1, v16

    if-ge v0, v1, :cond_43

    if-eqz v30, :cond_43

    .line 10179
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    move/from16 v0, v31

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 10185
    .local v3, "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-nez v2, :cond_40

    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    if-nez v2, :cond_40

    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    if-nez v2, :cond_40

    .line 10187
    const/16 v30, 0x0

    .line 10178
    :cond_40
    add-int/lit8 v31, v31, 0x1

    goto :goto_1e

    .line 10191
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v31    # "i":I
    :cond_43
    if-eqz v30, :cond_39f

    .line 10193
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->getAppTransition()I

    move-result v6

    .line 10194
    .local v6, "transit":I
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    if-eqz v2, :cond_54

    .line 10195
    const/4 v6, -0x1

    .line 10197
    :cond_54
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->goodToGo()V

    .line 10198
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mStartingIconInTransition:Z

    .line 10199
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    .line 10201
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0xd

    invoke-virtual {v2, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 10203
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked()V

    .line 10206
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v2, :cond_f8

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v2

    if-eqz v2, :cond_f8

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowStateAnimator;->isDummyAnimation()Z

    move-result v2

    if-nez v2, :cond_f8

    const/16 v36, 0x0

    .line 10211
    .local v36, "oldWallpaper":Lcom/android/server/wm/WindowState;
    :goto_91
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v5, 0x0

    iput-boolean v5, v2, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mWallpaperMayChange:Z

    .line 10215
    const/4 v4, 0x0

    .line 10216
    .local v4, "animLp":Landroid/view/WindowManager$LayoutParams;
    const/16 v19, -0x1

    .line 10217
    .local v19, "bestAnimLayer":I
    const/16 v29, 0x0

    .line 10225
    .local v29, "fullscreenAnim":Z
    const/16 v37, 0x0

    .line 10226
    .local v37, "openingAppHasWallpaper":Z
    const/16 v22, 0x0

    .line 10229
    .local v22, "closingAppHasWallpaper":Z
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-nez v2, :cond_ff

    .line 10230
    const/16 v41, 0x0

    .local v41, "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v34, v41

    .line 10246
    :goto_ab
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v15

    .line 10247
    .local v15, "NC":I
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int v16, v15, v2

    .line 10248
    const/16 v31, 0x0

    .restart local v31    # "i":I
    :goto_bf
    move/from16 v0, v31

    move/from16 v1, v16

    if-ge v0, v1, :cond_142

    .line 10250
    move/from16 v0, v31

    if-ge v0, v15, :cond_110

    .line 10251
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    move/from16 v0, v31

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 10252
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v34

    if-eq v3, v0, :cond_dd

    move-object/from16 v0, v41

    if-ne v3, v0, :cond_df

    .line 10253
    :cond_dd
    const/16 v22, 0x1

    .line 10262
    :cond_df
    :goto_df
    iget-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    if-eqz v2, :cond_127

    .line 10263
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v43

    .line 10264
    .local v43, "ws":Lcom/android/server/wm/WindowState;
    if-eqz v43, :cond_f5

    .line 10265
    move-object/from16 v0, v43

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 10266
    move-object/from16 v0, v43

    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v19, v0

    .line 10267
    const/16 v29, 0x1

    .line 10248
    .end local v43    # "ws":Lcom/android/server/wm/WindowState;
    :cond_f5
    :goto_f5
    add-int/lit8 v31, v31, 0x1

    goto :goto_bf

    .line 10206
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .end local v15    # "NC":I
    .end local v19    # "bestAnimLayer":I
    .end local v22    # "closingAppHasWallpaper":Z
    .end local v29    # "fullscreenAnim":Z
    .end local v31    # "i":I
    .end local v36    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .end local v37    # "openingAppHasWallpaper":Z
    .end local v41    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_f8
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v36, v0

    goto :goto_91

    .line 10232
    .restart local v4    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .restart local v19    # "bestAnimLayer":I
    .restart local v22    # "closingAppHasWallpaper":Z
    .restart local v29    # "fullscreenAnim":Z
    .restart local v36    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .restart local v37    # "openingAppHasWallpaper":Z
    :cond_ff
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v34, v0

    .line 10233
    .local v34, "lowerWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    iget-object v0, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v41, v0

    .restart local v41    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    goto :goto_ab

    .line 10256
    .end local v34    # "lowerWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    .restart local v15    # "NC":I
    .restart local v31    # "i":I
    :cond_110
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    sub-int v5, v31, v15

    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 10257
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    move-object/from16 v0, v34

    if-eq v3, v0, :cond_124

    move-object/from16 v0, v41

    if-ne v3, v0, :cond_df

    .line 10258
    :cond_124
    const/16 v37, 0x1

    goto :goto_df

    .line 10269
    :cond_127
    if-nez v29, :cond_f5

    .line 10270
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v43

    .line 10271
    .restart local v43    # "ws":Lcom/android/server/wm/WindowState;
    if-eqz v43, :cond_f5

    .line 10272
    move-object/from16 v0, v43

    iget v2, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v0, v19

    if-le v2, v0, :cond_f5

    .line 10273
    move-object/from16 v0, v43

    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    .line 10274
    move-object/from16 v0, v43

    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v19, v0

    goto :goto_f5

    .line 10280
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v43    # "ws":Lcom/android/server/wm/WindowState;
    :cond_142
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimateWallpaperWithTarget:Z

    .line 10281
    if-eqz v22, :cond_1c9

    if-eqz v37, :cond_1c9

    .line 10283
    sparse-switch v6, :sswitch_data_3da

    .line 10317
    :goto_14e
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->allowAppAnimationsLw()Z

    move-result v2

    if-nez v2, :cond_159

    .line 10320
    const/4 v4, 0x0

    .line 10323
    :cond_159
    const/16 v39, 0x0

    .line 10324
    .local v39, "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    const/16 v40, 0x0

    .line 10326
    .local v40, "topOpeningLayer":I
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v16

    .line 10327
    const/16 v31, 0x0

    :goto_167
    move/from16 v0, v31

    move/from16 v1, v16

    if-ge v0, v1, :cond_24e

    .line 10328
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    move/from16 v0, v31

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 10329
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v0, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v18, v0

    .line 10331
    .local v18, "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    .line 10332
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 10333
    const/4 v2, 0x0

    move-object/from16 v0, v18

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 10335
    const/4 v2, 0x0

    move-object/from16 v0, v18

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    .line 10337
    const/4 v5, 0x1

    const/4 v7, 0x0

    move-object/from16 v2, p0

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZ)Z

    .line 10338
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 10339
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 10341
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 10342
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v14

    .line 10343
    .local v14, "N":I
    const/16 v32, 0x0

    .local v32, "j":I
    :goto_1a9
    move/from16 v0, v32

    if-ge v0, v14, :cond_202

    .line 10344
    move-object/from16 v0, v18

    iget-object v5, v0, Lcom/android/server/wm/AppWindowAnimator;->mAllAppWinAnimators:Ljava/util/ArrayList;

    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    move/from16 v0, v32

    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    iget-object v2, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10343
    add-int/lit8 v32, v32, 0x1

    goto :goto_1a9

    .line 10287
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v14    # "N":I
    .end local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v32    # "j":I
    .end local v39    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .end local v40    # "topOpeningLayer":I
    :sswitch_1c3
    const/16 v6, 0x100e

    .line 10288
    goto :goto_14e

    .line 10292
    :sswitch_1c6
    const/16 v6, 0x200f

    goto :goto_14e

    .line 10296
    :cond_1c9
    if-eqz v36, :cond_1e7

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v2

    if-nez v2, :cond_1e7

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    move-object/from16 v0, v36

    iget-object v5, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v2, v5}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1e7

    .line 10300
    const/16 v6, 0x200c

    goto/16 :goto_14e

    .line 10303
    :cond_1e7
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v2, :cond_1fb

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v2

    if-eqz v2, :cond_1fb

    .line 10306
    const/16 v6, 0x100d

    goto/16 :goto_14e

    .line 10310
    :cond_1fb
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimateWallpaperWithTarget:Z

    goto/16 :goto_14e

    .line 10346
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v14    # "N":I
    .restart local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .restart local v32    # "j":I
    .restart local v39    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .restart local v40    # "topOpeningLayer":I
    :cond_202
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->showAllWindowsLocked()Z

    move-result v8

    or-int/2addr v5, v8

    iput-boolean v5, v2, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    .line 10348
    if-eqz v4, :cond_24a

    .line 10349
    const/16 v33, -0x1

    .line 10350
    .local v33, "layer":I
    const/16 v32, 0x0

    :goto_215
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    move/from16 v0, v32

    if-ge v0, v2, :cond_23e

    .line 10351
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    move/from16 v0, v32

    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v42

    check-cast v42, Lcom/android/server/wm/WindowState;

    .line 10352
    .local v42, "win":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v42

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v2, v2, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v0, v33

    if-le v2, v0, :cond_23b

    .line 10353
    move-object/from16 v0, v42

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v0, v2, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    move/from16 v33, v0

    .line 10350
    :cond_23b
    add-int/lit8 v32, v32, 0x1

    goto :goto_215

    .line 10356
    .end local v42    # "win":Lcom/android/server/wm/WindowState;
    :cond_23e
    if-eqz v39, :cond_246

    move/from16 v0, v33

    move/from16 v1, v40

    if-le v0, v1, :cond_24a

    .line 10357
    :cond_246
    move-object/from16 v39, v3

    .line 10358
    move/from16 v40, v33

    .line 10327
    .end local v33    # "layer":I
    :cond_24a
    add-int/lit8 v31, v31, 0x1

    goto/16 :goto_167

    .line 10362
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    .end local v14    # "N":I
    .end local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v32    # "j":I
    :cond_24e
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v16

    .line 10363
    const/16 v31, 0x0

    :goto_258
    move/from16 v0, v31

    move/from16 v1, v16

    if-ge v0, v1, :cond_28d

    .line 10364
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    move/from16 v0, v31

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/AppWindowToken;

    .line 10366
    .restart local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v2}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    .line 10367
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 10368
    iget-object v2, v3, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v5, 0x0

    iput-object v5, v2, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 10369
    const/4 v5, 0x0

    const/4 v7, 0x0

    move-object/from16 v2, p0

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZ)Z

    .line 10370
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 10371
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->waitingToHide:Z

    .line 10375
    const/4 v2, 0x1

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 10376
    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 10363
    add-int/lit8 v31, v31, 0x1

    goto :goto_258

    .line 10379
    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_28d
    if-nez v39, :cond_3a0

    const/16 v18, 0x0

    .line 10381
    .restart local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :goto_291
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->getNextAppTransitionThumbnail()Landroid/graphics/Bitmap;

    move-result-object v35

    .line 10382
    .local v35, "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    if-eqz v35, :cond_354

    if-eqz v18, :cond_354

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v2, :cond_354

    .line 10386
    new-instance v23, Landroid/graphics/Rect;

    const/4 v2, 0x0

    const/4 v5, 0x0

    invoke-virtual/range {v35 .. v35}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v8

    invoke-virtual/range {v35 .. v35}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v9

    move-object/from16 v0, v23

    invoke-direct {v0, v2, v5, v8, v9}, Landroid/graphics/Rect;-><init>(IIII)V

    .line 10390
    .local v23, "dirty":Landroid/graphics/Rect;
    :try_start_2b4
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v25

    .line 10391
    .local v25, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v24

    .line 10392
    .local v24, "display":Landroid/view/Display;
    new-instance v7, Landroid/view/SurfaceControl;

    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    const-string/jumbo v9, "thumbnail anim"

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->width()I

    move-result v10

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    move-result v11

    const/4 v12, -0x3

    const/4 v13, 0x4

    invoke-direct/range {v7 .. v13}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    .line 10396
    .local v7, "surfaceControl":Landroid/view/SurfaceControl;
    invoke-virtual/range {v24 .. v24}, Landroid/view/Display;->getLayerStack()I

    move-result v2

    invoke-virtual {v7, v2}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    .line 10397
    move-object/from16 v0, v18

    iput-object v7, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    .line 10399
    new-instance v27, Landroid/view/Surface;

    invoke-direct/range {v27 .. v27}, Landroid/view/Surface;-><init>()V

    .line 10400
    .local v27, "drawSurface":Landroid/view/Surface;
    move-object/from16 v0, v27

    invoke-virtual {v0, v7}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    .line 10401
    move-object/from16 v0, v27

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Landroid/view/Surface;->lockCanvas(Landroid/graphics/Rect;)Landroid/graphics/Canvas;

    move-result-object v20

    .line 10402
    .local v20, "c":Landroid/graphics/Canvas;
    const/4 v2, 0x0

    const/4 v5, 0x0

    const/4 v8, 0x0

    move-object/from16 v0, v20

    move-object/from16 v1, v35

    invoke-virtual {v0, v1, v2, v5, v8}, Landroid/graphics/Canvas;->drawBitmap(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V

    .line 10403
    move-object/from16 v0, v27

    move-object/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/view/Surface;->unlockCanvasAndPost(Landroid/graphics/Canvas;)V

    .line 10404
    invoke-virtual/range {v27 .. v27}, Landroid/view/Surface;->release()V

    .line 10405
    move/from16 v0, v40

    move-object/from16 v1, v18

    iput v0, v1, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    .line 10406
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v26

    .line 10407
    .local v26, "displayInfo":Landroid/view/DisplayInfo;
    move-object/from16 v0, p0

    iget-object v8, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    const/4 v10, 0x1

    const/4 v11, 0x1

    move-object/from16 v0, v26

    iget v12, v0, Landroid/view/DisplayInfo;->appWidth:I

    move-object/from16 v0, v26

    iget v13, v0, Landroid/view/DisplayInfo;->appHeight:I

    move v9, v6

    invoke-virtual/range {v8 .. v13}, Lcom/android/server/wm/AppTransition;->createThumbnailAnimationLocked(IZZII)Landroid/view/animation/Animation;

    move-result-object v17

    .line 10409
    .local v17, "anim":Landroid/view/animation/Animation;
    move-object/from16 v0, v17

    move-object/from16 v1, v18

    iput-object v0, v1, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    .line 10410
    const-wide/16 v8, 0x2710

    move-object/from16 v0, v17

    invoke-virtual {v0, v8, v9}, Landroid/view/animation/Animation;->restrictDuration(J)V

    .line 10411
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Landroid/view/animation/Animation;->scaleCurrentDuration(F)V

    .line 10412
    new-instance v38, Landroid/graphics/Point;

    invoke-direct/range {v38 .. v38}, Landroid/graphics/Point;-><init>()V

    .line 10413
    .local v38, "p":Landroid/graphics/Point;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object/from16 v0, v38

    invoke-virtual {v2, v0}, Lcom/android/server/wm/AppTransition;->getStartingPoint(Landroid/graphics/Point;)V

    .line 10414
    move-object/from16 v0, v38

    iget v2, v0, Landroid/graphics/Point;->x:I

    move-object/from16 v0, v18

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    .line 10415
    move-object/from16 v0, v38

    iget v2, v0, Landroid/graphics/Point;->y:I

    move-object/from16 v0, v18

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I
    :try_end_354
    .catch Landroid/view/SurfaceControl$OutOfResourcesException; {:try_start_2b4 .. :try_end_354} :catch_3a8

    .line 10423
    .end local v7    # "surfaceControl":Landroid/view/SurfaceControl;
    .end local v17    # "anim":Landroid/view/animation/Animation;
    .end local v20    # "c":Landroid/graphics/Canvas;
    .end local v23    # "dirty":Landroid/graphics/Rect;
    .end local v24    # "display":Landroid/view/Display;
    .end local v25    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v26    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v27    # "drawSurface":Landroid/view/Surface;
    .end local v38    # "p":Landroid/graphics/Point;
    :cond_354
    :goto_354
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->postAnimationCallback()V

    .line 10424
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v2}, Lcom/android/server/wm/AppTransition;->clear()V

    .line 10426
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 10427
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->clear()V

    .line 10430
    const/4 v2, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    .line 10435
    or-int/lit8 v21, v21, 0x3

    .line 10437
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const/4 v5, 0x1

    iput-boolean v5, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 10440
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v2

    move-object/from16 v0, p1

    if-ne v0, v2, :cond_393

    const/4 v2, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v2

    if-nez v2, :cond_393

    .line 10442
    invoke-direct/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 10444
    :cond_393
    const/4 v2, 0x2

    const/4 v5, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v5}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 10445
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mFocusMayChange:Z

    .line 10448
    .end local v4    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .end local v6    # "transit":I
    .end local v15    # "NC":I
    .end local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v19    # "bestAnimLayer":I
    .end local v22    # "closingAppHasWallpaper":Z
    .end local v29    # "fullscreenAnim":Z
    .end local v31    # "i":I
    .end local v35    # "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    .end local v36    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .end local v37    # "openingAppHasWallpaper":Z
    .end local v39    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .end local v40    # "topOpeningLayer":I
    .end local v41    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_39f
    return v21

    .line 10379
    .restart local v4    # "animLp":Landroid/view/WindowManager$LayoutParams;
    .restart local v6    # "transit":I
    .restart local v15    # "NC":I
    .restart local v19    # "bestAnimLayer":I
    .restart local v22    # "closingAppHasWallpaper":Z
    .restart local v29    # "fullscreenAnim":Z
    .restart local v31    # "i":I
    .restart local v36    # "oldWallpaper":Lcom/android/server/wm/WindowState;
    .restart local v37    # "openingAppHasWallpaper":Z
    .restart local v39    # "topOpeningApp":Lcom/android/server/wm/AppWindowToken;
    .restart local v40    # "topOpeningLayer":I
    .restart local v41    # "upperWallpaperAppToken":Lcom/android/server/wm/AppWindowToken;
    :cond_3a0
    move-object/from16 v0, v39

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v18, v0

    goto/16 :goto_291

    .line 10416
    .restart local v18    # "appAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .restart local v23    # "dirty":Landroid/graphics/Rect;
    .restart local v35    # "nextAppTransitionThumbnail":Landroid/graphics/Bitmap;
    :catch_3a8
    move-exception v28

    .line 10417
    .local v28, "e":Landroid/view/SurfaceControl$OutOfResourcesException;
    const-string v2, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Can\'t allocate thumbnail/Canvas surface w="

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->width()I

    move-result v8

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v8, " h="

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual/range {v23 .. v23}, Landroid/graphics/Rect;->height()I

    move-result v8

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, v28

    invoke-static {v2, v5, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 10419
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->clearThumbnail()V

    goto/16 :goto_354

    .line 10283
    :sswitch_data_3da
    .sparse-switch
        0x1006 -> :sswitch_1c3
        0x1008 -> :sswitch_1c3
        0x100a -> :sswitch_1c3
        0x2007 -> :sswitch_1c6
        0x2009 -> :sswitch_1c6
        0x200b -> :sswitch_1c6
    .end sparse-switch
.end method

.method public hasNavigationBar()Z
    .registers 2

    .prologue
    .line 12107
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hasNavigationBar()Z

    move-result v0

    return v0
.end method

.method public hideBootMessagesLocked()V
    .registers 2

    .prologue
    .line 7049
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-eqz v0, :cond_c

    .line 7050
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 7051
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->hideBootMessages()V

    .line 7053
    :cond_c
    return-void
.end method

.method public inKeyguardRestrictedInputMode()Z
    .registers 2

    .prologue
    .line 6500
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->inKeyguardRestrictedKeyInputMode()Z

    move-result v0

    return v0
.end method

.method public inputMethodClientHasFocus(Lcom/android/internal/view/IInputMethodClient;)Z
    .registers 12
    .param p1, "client"    # Lcom/android/internal/view/IInputMethodClient;

    .prologue
    const/4 v4, 0x1

    const/4 v5, 0x0

    .line 9251
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 9254
    const/4 v7, 0x0

    :try_start_6
    invoke-virtual {p0, v7}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v1

    .line 9255
    .local v1, "idx":I
    if-lez v1, :cond_71

    .line 9259
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v7

    add-int/lit8 v8, v1, -0x1

    iget v9, p0, Lcom/android/server/wm/WindowManagerService;->mWindowCountBetweenIMTargetAndTopWidget:I

    sub-int/2addr v8, v9

    invoke-virtual {v7, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 9266
    .local v2, "imFocus":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_71

    .line 9269
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v8, 0x3

    if-ne v7, v8, :cond_58

    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_58

    .line 9273
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_29
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-ge v0, v7, :cond_58

    .line 9274
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v7, v7, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v7, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 9275
    .local v3, "w":Lcom/android/server/wm/WindowState;
    if-eq v3, v2, :cond_6e

    .line 9276
    const-string v7, "WindowManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Switching to real app window: "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9277
    move-object v2, v3

    .line 9290
    .end local v0    # "i":I
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_58
    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v7, v7, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    if-eqz v7, :cond_71

    iget-object v7, v2, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v7, v7, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    invoke-interface {v7}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    if-ne v7, v8, :cond_71

    .line 9292
    monitor-exit v6

    .line 9310
    .end local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    :goto_6d
    return v4

    .line 9273
    .restart local v0    # "i":I
    .restart local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    .restart local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_6e
    add-int/lit8 v0, v0, 0x1

    goto :goto_29

    .line 9305
    .end local v0    # "i":I
    .end local v2    # "imFocus":Lcom/android/server/wm/WindowState;
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_71
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v7, :cond_92

    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget-object v7, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v7, v7, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    if-eqz v7, :cond_92

    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    iget-object v7, v7, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    iget-object v7, v7, Lcom/android/server/wm/Session;->mClient:Lcom/android/internal/view/IInputMethodClient;

    invoke-interface {v7}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    invoke-interface {p1}, Lcom/android/internal/view/IInputMethodClient;->asBinder()Landroid/os/IBinder;

    move-result-object v8

    if-ne v7, v8, :cond_92

    .line 9307
    monitor-exit v6

    goto :goto_6d

    .line 9309
    .end local v1    # "idx":I
    :catchall_8f
    move-exception v4

    monitor-exit v6
    :try_end_91
    .catchall {:try_start_6 .. :try_end_91} :catchall_8f

    throw v4

    .restart local v1    # "idx":I
    :cond_92
    :try_start_92
    monitor-exit v6
    :try_end_93
    .catchall {:try_start_92 .. :try_end_93} :catchall_8f

    move v4, v5

    .line 9310
    goto :goto_6d
.end method

.method public isCoverOpen()Z
    .registers 2

    .prologue
    .line 12812
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isCoverOpen()Z

    move-result v0

    return v0
.end method

.method public isFrontStack(I)Z
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 13378
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 13379
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 13380
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_15

    .line 13381
    iget-object v1, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v1}, Lcom/android/server/wm/StackBox;->isFrontStackBox()Z

    move-result v1

    monitor-exit v2

    .line 13384
    :goto_14
    return v1

    .line 13383
    :cond_15
    monitor-exit v2

    .line 13384
    const/4 v1, 0x0

    goto :goto_14

    .line 13383
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_18
    move-exception v1

    monitor-exit v2
    :try_end_1a
    .catchall {:try_start_3 .. :try_end_1a} :catchall_18

    throw v1
.end method

.method public isGloveModeEnabled()Z
    .registers 2

    .prologue
    .line 12823
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isGloveModeEnabled()Z

    move-result v0

    return v0
.end method

.method public isHardKeyboardAvailable()Z
    .registers 3

    .prologue
    .line 8395
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8396
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    monitor-exit v1

    return v0

    .line 8397
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public isHardKeyboardEnabled()Z
    .registers 3

    .prologue
    .line 8401
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8402
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardEnabled:Z

    monitor-exit v1

    return v0

    .line 8403
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public isKeyguardHidden()Z
    .registers 2

    .prologue
    .line 6505
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardHidden()Z

    move-result v0

    return v0
.end method

.method public isKeyguardLocked()Z
    .registers 2

    .prologue
    .line 6510
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardLocked()Z

    move-result v0

    return v0
.end method

.method public isKeyguardSecure()Z
    .registers 2

    .prologue
    .line 6515
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isKeyguardSecure()Z

    move-result v0

    return v0
.end method

.method public isNavigationBarVisible()Z
    .registers 3

    .prologue
    .line 12849
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12850
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isNavigationBarVisible()Z

    move-result v0

    monitor-exit v1

    return v0

    .line 12851
    :catchall_b
    move-exception v0

    monitor-exit v1
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw v0
.end method

.method public isPreviewScaleEnabled()Z
    .registers 2

    .prologue
    .line 13047
    sget-boolean v0, Lcom/android/server/am/MultiWindowPolicy;->sPreviewScaleEnabled:Z

    return v0
.end method

.method public isRotationFrozen()Z
    .registers 3

    .prologue
    const/4 v0, 0x1

    .line 7656
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1}, Landroid/view/WindowManagerPolicy;->getUserRotationMode()I

    move-result v1

    if-ne v1, v0, :cond_a

    :goto_9
    return v0

    :cond_a
    const/4 v0, 0x0

    goto :goto_9
.end method

.method public isSafeModeEnabled()Z
    .registers 2

    .prologue
    .line 12117
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSafeMode:Z

    return v0
.end method

.method public isSplitedStack(I)Z
    .registers 5
    .param p1, "stackId"    # I

    .prologue
    .line 6396
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 6397
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/TaskStack;

    .line 6398
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v0, :cond_1a

    iget-object v1, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    if-eqz v1, :cond_1a

    .line 6399
    iget-object v1, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    iget-object v1, v1, Lcom/android/server/wm/StackBox;->mParent:Lcom/android/server/wm/StackBox;

    if-eqz v1, :cond_1a

    .line 6400
    const/4 v1, 0x1

    monitor-exit v2

    .line 6403
    :goto_19
    return v1

    :cond_1a
    const/4 v1, 0x0

    monitor-exit v2

    goto :goto_19

    .line 6404
    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_1d
    move-exception v1

    monitor-exit v2
    :try_end_1f
    .catchall {:try_start_3 .. :try_end_1f} :catchall_1d

    throw v1
.end method

.method public isStatusBarVisible()Z
    .registers 3

    .prologue
    .line 12835
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12836
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isStatusBarVisible()Z

    move-result v0

    monitor-exit v1

    return v0

    .line 12837
    :catchall_b
    move-exception v0

    monitor-exit v1
    :try_end_d
    .catchall {:try_start_3 .. :try_end_d} :catchall_b

    throw v0
.end method

.method public isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z
    .registers 4
    .param p1, "keyCode"    # I
    .param p2, "componentName"    # Landroid/content/ComponentName;

    .prologue
    .line 13207
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2}, Landroid/view/WindowManagerPolicy;->isSystemKeyEventRequested(ILandroid/content/ComponentName;)Z

    move-result v0

    return v0
.end method

.method public isViewServerRunning()Z
    .registers 4

    .prologue
    const/4 v0, 0x0

    .line 7840
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 7848
    :cond_7
    :goto_7
    return v0

    .line 7844
    :cond_8
    const-string v1, "android.permission.DUMP"

    const-string v2, "isViewServerRunning"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 7848
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v1, :cond_7

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v1}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v1

    if-eqz v1, :cond_7

    const/4 v0, 0x1

    goto :goto_7
.end method

.method final isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z
    .registers 3
    .param p1, "wallpaperTarget"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 2172
    if-eqz p1, :cond_12

    iget-boolean v0, p1, Lcom/android/server/wm/WindowState;->mObscured:Z

    if-eqz v0, :cond_1a

    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v0, :cond_12

    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v0, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-nez v0, :cond_1a

    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-nez v0, :cond_1a

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_1c

    :cond_1a
    const/4 v0, 0x1

    :goto_1b
    return v0

    :cond_1c
    const/4 v0, 0x0

    goto :goto_1b
.end method

.method public lockNow(Landroid/os/Bundle;)V
    .registers 3
    .param p1, "options"    # Landroid/os/Bundle;

    .prologue
    .line 12112
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->lockNow(Landroid/os/Bundle;)V

    .line 12113
    return-void
.end method

.method logWindowList(Lcom/android/server/wm/WindowList;Ljava/lang/String;)V
    .registers 7
    .param p1, "windows"    # Lcom/android/server/wm/WindowList;
    .param p2, "prefix"    # Ljava/lang/String;

    .prologue
    .line 2006
    invoke-virtual {p1}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 2007
    .local v0, "N":I
    :goto_4
    if-lez v0, :cond_33

    .line 2008
    add-int/lit8 v0, v0, -0x1

    .line 2009
    const-string v1, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "#"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {p1, v0}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 2011
    :cond_33
    return-void
.end method

.method makeWindowFreezingScreenIfNeededLocked(Lcom/android/server/wm/WindowState;)V
    .registers 6
    .param p1, "w"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/16 v3, 0xb

    const/4 v2, 0x1

    const/4 v1, 0x0

    .line 10143
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v0

    if-nez v0, :cond_24

    .line 10146
    iput-boolean v2, p1, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 10147
    iput v1, p1, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 10148
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v1, v0, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 10149
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    if-nez v0, :cond_24

    .line 10150
    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    .line 10153
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 10154
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v1, 0x7d0

    invoke-virtual {v0, v3, v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 10158
    :cond_24
    return-void
.end method

.method public monitor()V
    .registers 3

    .prologue
    .line 12655
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    :try_start_3
    monitor-exit v1

    .line 12656
    return-void

    .line 12655
    :catchall_5
    move-exception v0

    monitor-exit v1
    :try_end_7
    .catchall {:try_start_3 .. :try_end_7} :catchall_5

    throw v0
.end method

.method public monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;
    .registers 3
    .param p1, "inputChannelName"    # Ljava/lang/String;

    .prologue
    .line 6731
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/input/InputManagerService;->monitorInput(Ljava/lang/String;)Landroid/view/InputChannel;

    move-result-object v0

    return-object v0
.end method

.method moveInputMethodDialogsLocked(I)V
    .registers 10
    .param p1, "pos"    # I

    .prologue
    .line 2014
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    .line 2017
    .local v1, "dialogs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/WindowState;>;"
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 2018
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 2020
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_b
    if-ge v2, v0, :cond_1a

    .line 2021
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    invoke-direct {p0, p1, v7}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result p1

    .line 2020
    add-int/lit8 v2, v2, 0x1

    goto :goto_b

    .line 2028
    :cond_1a
    if-ltz p1, :cond_44

    .line 2029
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2030
    .local v3, "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v7

    if-ge p1, v7, :cond_32

    .line 2031
    invoke-virtual {v5, p1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 2032
    .local v6, "wp":Lcom/android/server/wm/WindowState;
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-ne v6, v7, :cond_32

    .line 2033
    add-int/lit8 p1, p1, 0x1

    .line 2037
    .end local v6    # "wp":Lcom/android/server/wm/WindowState;
    :cond_32
    const/4 v2, 0x0

    :goto_33
    if-ge v2, v0, :cond_56

    .line 2038
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 2039
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iput-object v3, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2040
    invoke-direct {p0, p1, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result p1

    .line 2037
    add-int/lit8 v2, v2, 0x1

    goto :goto_33

    .line 2048
    .end local v3    # "targetAppToken":Lcom/android/server/wm/AppWindowToken;
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_44
    const/4 v2, 0x0

    :goto_45
    if-ge v2, v0, :cond_56

    .line 2049
    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 2050
    .restart local v4    # "win":Lcom/android/server/wm/WindowState;
    const/4 v7, 0x0

    iput-object v7, v4, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2051
    invoke-direct {p0, v4}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    .line 2048
    add-int/lit8 v2, v2, 0x1

    goto :goto_45

    .line 2057
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_56
    return-void
.end method

.method moveInputMethodWindowsIfNeededLocked(Z)Z
    .registers 15
    .param p1, "needAssignLayers"    # Z

    .prologue
    const/4 v4, 0x0

    const/4 v11, 0x1

    const/4 v12, -0x1

    const/4 v10, 0x0

    .line 2060
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 2061
    .local v6, "imWin":Lcom/android/server/wm/WindowState;
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 2062
    .local v0, "DN":I
    if-nez v6, :cond_12

    if-nez v0, :cond_12

    move v9, v10

    .line 2162
    :goto_11
    return v9

    .line 2067
    :cond_12
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v8

    .line 2069
    .local v8, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->findDesiredInputMethodWindowIndexLocked(Z)I

    move-result v5

    .line 2070
    .local v5, "imPos":I
    if-ltz v5, :cond_9d

    .line 2076
    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 2077
    .local v1, "N":I
    if-ge v5, v1, :cond_29

    invoke-virtual {v8, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    move-object v4, v9

    .line 2082
    .local v4, "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_29
    if-eqz v6, :cond_6b

    move-object v2, v6

    .line 2084
    .local v2, "baseImWin":Lcom/android/server/wm/WindowState;
    :goto_2c
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v9

    if-lez v9, :cond_41

    .line 2085
    iget-object v9, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 2086
    .local v3, "cw":Lcom/android/server/wm/WindowState;
    iget v9, v3, Lcom/android/server/wm/WindowState;->mSubLayer:I

    if-gez v9, :cond_41

    move-object v2, v3

    .line 2089
    .end local v3    # "cw":Lcom/android/server/wm/WindowState;
    :cond_41
    if-ne v4, v2, :cond_7b

    .line 2092
    add-int/lit8 v7, v5, 0x1

    .line 2093
    .local v7, "pos":I
    :goto_45
    if-ge v7, v1, :cond_51

    .line 2094
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-nez v9, :cond_75

    .line 2099
    :cond_51
    add-int/lit8 v7, v7, 0x1

    .line 2101
    :goto_53
    if-ge v7, v1, :cond_5f

    .line 2102
    invoke-virtual {v8, v7}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    iget-boolean v9, v9, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    if-eqz v9, :cond_78

    .line 2107
    :cond_5f
    if-lt v7, v1, :cond_7b

    .line 2110
    if-eqz v6, :cond_69

    .line 2111
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    :cond_69
    move v9, v10

    .line 2113
    goto :goto_11

    .line 2082
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v7    # "pos":I
    :cond_6b
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    move-object v2, v9

    goto :goto_2c

    .line 2097
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .restart local v7    # "pos":I
    :cond_75
    add-int/lit8 v7, v7, 0x1

    goto :goto_45

    .line 2105
    :cond_78
    add-int/lit8 v7, v7, 0x1

    goto :goto_53

    .line 2117
    .end local v7    # "pos":I
    :cond_7b
    if-eqz v6, :cond_99

    .line 2122
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result v5

    .line 2127
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v9, v9, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iput-object v9, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2128
    invoke-direct {p0, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 2133
    if-lez v0, :cond_91

    add-int/lit8 v9, v5, 0x1

    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    .line 2158
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v4    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_91
    :goto_91
    if-eqz p1, :cond_96

    .line 2159
    invoke-direct {p0, v8}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    :cond_96
    move v9, v11

    .line 2162
    goto/16 :goto_11

    .line 2135
    .restart local v1    # "N":I
    .restart local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .restart local v4    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_99
    invoke-virtual {p0, v5}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    goto :goto_91

    .line 2142
    .end local v1    # "N":I
    .end local v2    # "baseImWin":Lcom/android/server/wm/WindowState;
    .end local v4    # "firstImWin":Lcom/android/server/wm/WindowState;
    :cond_9d
    if-eqz v6, :cond_ad

    .line 2144
    invoke-direct {p0, v10, v6}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 2145
    iput-object v4, v6, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 2146
    invoke-direct {p0, v6}, Lcom/android/server/wm/WindowManagerService;->reAddWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;)V

    .line 2151
    if-lez v0, :cond_91

    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    goto :goto_91

    .line 2153
    :cond_ad
    invoke-virtual {p0, v12}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodDialogsLocked(I)V

    goto :goto_91
.end method

.method moveMultiWindowCenterBar(Z)Z
    .registers 23
    .param p1, "needAssignLayers"    # Z

    .prologue
    .line 13388
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    .line 13389
    .local v3, "centerBarWin":Lcom/android/server/wm/WindowState;
    if-nez v3, :cond_9

    .line 13390
    const/16 v17, 0x0

    .line 13529
    :goto_8
    return v17

    .line 13392
    :cond_9
    new-instance v2, Landroid/graphics/Rect;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-direct {v2, v0}, Landroid/graphics/Rect;-><init>(Landroid/graphics/Rect;)V

    .line 13393
    .local v2, "centerBarRect":Landroid/graphics/Rect;
    const/16 v17, 0x5

    const/16 v18, 0x5

    move/from16 v0, v17

    move/from16 v1, v18

    invoke-virtual {v2, v0, v1}, Landroid/graphics/Rect;->inset(II)V

    .line 13395
    const/4 v6, -0x1

    .line 13396
    .local v6, "controlBarPos":I
    iget-object v0, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v7, v0, Landroid/view/WindowManager$LayoutParams;->y:I

    .line 13397
    .local v7, "controlBarTop":I
    const/4 v13, 0x0

    .line 13398
    .local v13, "targetControlBarWin":Lcom/android/server/wm/WindowState;
    const/4 v11, 0x0

    .line 13399
    .local v11, "startingWin":Lcom/android/server/wm/WindowState;
    const/4 v12, -0x1

    .line 13402
    .local v12, "startingWinPos":I
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v16

    .line 13404
    .local v16, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Landroid/graphics/Rect;->centerX()I

    move-result v4

    .line 13405
    .local v4, "centerbarCenterX":I
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Landroid/graphics/Rect;->centerY()I

    move-result v5

    .line 13407
    .local v5, "centerbarCenterY":I
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v17

    add-int/lit8 v8, v17, -0x1

    .local v8, "i":I
    :goto_45
    if-ltz v8, :cond_12c

    .line 13408
    move-object/from16 v0, v16

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/wm/WindowState;

    .line 13409
    .local v14, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v9

    .line 13410
    .local v9, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    invoke-virtual {v9}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v17

    const/16 v18, 0x2

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_62

    .line 13407
    :cond_5f
    :goto_5f
    add-int/lit8 v8, v8, -0x1

    goto :goto_45

    .line 13414
    :cond_62
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    if-eqz v17, :cond_7e

    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getSurfaceLayer()I

    move-result v17

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/WindowState;->getSurfaceLayer()I

    move-result v18

    move/from16 v0, v17

    move/from16 v1, v18

    if-gt v0, v1, :cond_5f

    .line 13418
    :cond_7e
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_98

    iget v0, v14, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v17, v0

    if-nez v17, :cond_98

    .line 13419
    move-object v11, v14

    .line 13420
    move v12, v8

    .line 13423
    :cond_98
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v15

    .line 13425
    .local v15, "windowFrame":Landroid/graphics/Rect;
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_c0

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_139

    :cond_c0
    iget v0, v14, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v17, v0

    if-nez v17, :cond_139

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v17, v0

    and-int/lit8 v17, v17, 0x4

    if-nez v17, :cond_139

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    move/from16 v17, v0

    if-nez v17, :cond_126

    const/16 v17, 0x20

    move/from16 v0, v17

    invoke-virtual {v9, v0}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v17

    if-nez v17, :cond_126

    iget v0, v15, Landroid/graphics/Rect;->left:I

    move/from16 v17, v0

    iget v0, v15, Landroid/graphics/Rect;->right:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ge v0, v1, :cond_126

    iget v0, v15, Landroid/graphics/Rect;->top:I

    move/from16 v17, v0

    iget v0, v15, Landroid/graphics/Rect;->bottom:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ge v0, v1, :cond_126

    iget v0, v15, Landroid/graphics/Rect;->left:I

    move/from16 v17, v0

    move/from16 v0, v17

    if-le v4, v0, :cond_126

    iget v0, v15, Landroid/graphics/Rect;->right:I

    move/from16 v17, v0

    move/from16 v0, v17

    if-ge v4, v0, :cond_126

    iget v0, v15, Landroid/graphics/Rect;->top:I

    move/from16 v17, v0

    move/from16 v0, v17

    if-le v5, v0, :cond_126

    iget v0, v15, Landroid/graphics/Rect;->bottom:I

    move/from16 v17, v0

    move/from16 v0, v17

    if-lt v5, v0, :cond_139

    .line 13433
    :cond_126
    const/16 v17, -0x1

    move/from16 v0, v17

    if-eq v6, v0, :cond_134

    .line 13501
    .end local v9    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v14    # "w":Lcom/android/server/wm/WindowState;
    .end local v15    # "windowFrame":Landroid/graphics/Rect;
    :cond_12c
    :goto_12c
    if-nez v13, :cond_3d3

    .line 13502
    if-nez v11, :cond_3d1

    .line 13503
    const/16 v17, 0x0

    goto/16 :goto_8

    .line 13436
    .restart local v9    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .restart local v14    # "w":Lcom/android/server/wm/WindowState;
    .restart local v15    # "windowFrame":Landroid/graphics/Rect;
    :cond_134
    move-object v13, v14

    .line 13437
    add-int/lit8 v6, v8, 0x1

    goto/16 :goto_5f

    .line 13438
    :cond_139
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x2

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_1f2

    iget v0, v14, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v17, v0

    if-nez v17, :cond_1f2

    .line 13439
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v17, v0

    and-int/lit8 v17, v17, 0x6

    if-nez v17, :cond_18d

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v17, v0

    const/16 v18, -0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_18d

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v17, v0

    const/16 v18, -0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_18d

    .line 13441
    const/16 v17, -0x1

    move/from16 v0, v17

    if-ne v6, v0, :cond_12c

    .line 13444
    move-object v13, v14

    .line 13445
    add-int/lit8 v6, v8, 0x1

    .line 13446
    goto :goto_12c

    .line 13447
    :cond_18d
    const/16 v17, -0x1

    move/from16 v0, v17

    if-eq v6, v0, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->gravity:I

    move/from16 v17, v0

    const/16 v18, 0x11

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-boolean v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mHasTransformation:Z

    move/from16 v17, v0

    if-eqz v17, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mLastAlpha:F

    move/from16 v17, v0

    move/from16 v0, v17

    float-to-double v0, v0

    move-wide/from16 v17, v0

    const-wide/16 v19, 0x0

    cmpl-double v17, v17, v19

    if-eqz v17, :cond_5f

    .line 13449
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    if-eqz v17, :cond_12c

    if-eqz v13, :cond_12c

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    if-eqz v17, :cond_12c

    .line 13450
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    move/from16 v17, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    move/from16 v18, v0

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_12c

    .line 13451
    move-object v13, v14

    .line 13452
    move v6, v8

    goto/16 :goto_12c

    .line 13457
    :cond_1f2
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x8a4

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_223

    iget v0, v14, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v17, v0

    if-nez v17, :cond_223

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v17, v0

    and-int/lit8 v17, v17, 0x18

    if-nez v17, :cond_223

    .line 13459
    const/16 v17, -0x1

    move/from16 v0, v17

    if-ne v6, v0, :cond_12c

    .line 13462
    move-object v13, v14

    .line 13463
    add-int/lit8 v6, v8, 0x1

    .line 13464
    goto/16 :goto_12c

    .line 13465
    :cond_223
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3e9

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_247

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3e8

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_328

    :cond_247
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v17

    if-eqz v17, :cond_328

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    if-eqz v17, :cond_328

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v17

    if-nez v17, :cond_328

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v17, v0

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v17

    if-eqz v17, :cond_328

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v17, v0

    if-lez v17, :cond_328

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v17, v0

    if-lez v17, :cond_328

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x2

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_328

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x834

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_328

    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v0, v2}, Landroid/graphics/Rect;->intersects(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    move-result v17

    if-eqz v17, :cond_328

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v17

    if-eqz v17, :cond_31d

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Landroid/graphics/Rect;->width()I

    move-result v18

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mScreenRect:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/graphics/Rect;->height()I

    move-result v19

    invoke-virtual/range {v17 .. v19}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    move-result v17

    if-nez v17, :cond_31d

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v17

    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v17

    if-eqz v17, :cond_31d

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v17

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v17

    if-nez v17, :cond_328

    .line 13478
    :cond_31d
    const/16 v17, -0x1

    move/from16 v0, v17

    if-ne v6, v0, :cond_12c

    .line 13481
    move-object v13, v14

    .line 13482
    add-int/lit8 v6, v8, 0x1

    .line 13483
    goto/16 :goto_12c

    .line 13484
    :cond_328
    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3e9

    move/from16 v0, v17

    move/from16 v1, v18

    if-eq v0, v1, :cond_34c

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v17, v0

    const/16 v18, 0x3e8

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_5f

    :cond_34c
    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v17

    if-eqz v17, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    if-eqz v17, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v17

    const/16 v18, 0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v17, v0

    invoke-virtual/range {v17 .. v17}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v17

    if-nez v17, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v17, v0

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v17

    if-eqz v17, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v17, v0

    const/16 v18, -0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_5f

    iget-object v0, v14, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v17, v0

    const/16 v18, -0x1

    move/from16 v0, v17

    move/from16 v1, v18

    if-ne v0, v1, :cond_5f

    invoke-virtual {v14}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v0, v2}, Landroid/graphics/Rect;->intersects(Landroid/graphics/Rect;Landroid/graphics/Rect;)Z

    move-result v17

    if-eqz v17, :cond_5f

    .line 13492
    const/16 v17, -0x1

    move/from16 v0, v17

    if-ne v6, v0, :cond_12c

    .line 13495
    move-object v13, v14

    .line 13496
    add-int/lit8 v6, v8, 0x1

    .line 13497
    goto/16 :goto_12c

    .line 13505
    .end local v9    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v14    # "w":Lcom/android/server/wm/WindowState;
    .end local v15    # "windowFrame":Landroid/graphics/Rect;
    :cond_3d1
    move-object v13, v11

    .line 13506
    move v6, v12

    .line 13510
    :cond_3d3
    move-object/from16 v0, v16

    invoke-virtual {v0, v3}, Lcom/android/server/wm/WindowList;->indexOf(Ljava/lang/Object;)I

    move-result v10

    .line 13511
    .local v10, "pos":I
    if-ne v10, v6, :cond_3e1

    if-nez p1, :cond_3e1

    .line 13512
    const/16 v17, 0x0

    goto/16 :goto_8

    .line 13515
    :cond_3e1
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    iput-object v0, v3, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 13516
    move-object/from16 v0, p0

    invoke-direct {v0, v6, v3}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result v6

    .line 13517
    move-object/from16 v0, p0

    invoke-direct {v0, v6, v3}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 13519
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    if-eqz v17, :cond_427

    .line 13520
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    move-object/from16 v1, v17

    iput-object v0, v1, Lcom/android/server/wm/WindowState;->mTargetAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 13521
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-direct {v0, v6, v1}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveWindowLocked(ILcom/android/server/wm/WindowState;)I

    move-result v6

    .line 13522
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowSwitchWindowTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v17, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-direct {v0, v6, v1}, Lcom/android/server/wm/WindowManagerService;->reAddWindowLocked(ILcom/android/server/wm/WindowState;)I

    .line 13525
    :cond_427
    if-eqz p1, :cond_436

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v17

    if-eqz v17, :cond_436

    .line 13526
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 13529
    :cond_436
    const/16 v17, 0x1

    goto/16 :goto_8
.end method

.method moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V
    .registers 3
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;

    .prologue
    .line 5883
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;Z)V

    .line 5884
    return-void
.end method

.method moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;Z)V
    .registers 14
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "layoutNeeded"    # Z

    .prologue
    const/4 v10, 0x0

    .line 5890
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v5

    .line 5891
    .local v5, "tasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 5892
    .local v1, "numTasks":I
    const/4 v4, 0x0

    .local v4, "taskNdx":I
    :goto_a
    if-ge v4, v1, :cond_2b

    .line 5893
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v7, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 5894
    .local v7, "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v7}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v2

    .line 5895
    .local v2, "numTokens":I
    add-int/lit8 v6, v2, -0x1

    .local v6, "tokenNdx":I
    :goto_1a
    if-ltz v6, :cond_28

    .line 5896
    invoke-virtual {v7, v6}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowToken;

    invoke-direct {p0, v9}, Lcom/android/server/wm/WindowManagerService;->tmpRemoveAppWindowsLocked(Lcom/android/server/wm/WindowToken;)Z

    .line 5895
    add-int/lit8 v6, v6, -0x1

    goto :goto_1a

    .line 5892
    :cond_28
    add-int/lit8 v4, v4, 0x1

    goto :goto_a

    .line 5902
    .end local v2    # "numTokens":I
    .end local v6    # "tokenNdx":I
    .end local v7    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_2b
    const/4 v4, 0x0

    :goto_2c
    if-ge v4, v1, :cond_5f

    .line 5903
    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/Task;

    iget-object v7, v9, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 5904
    .restart local v7    # "tokens":Lcom/android/server/wm/AppTokenList;
    invoke-virtual {v7, v10}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/AppWindowToken;

    invoke-direct {p0, v9}, Lcom/android/server/wm/WindowManagerService;->findAppWindowInsertionPointLocked(Lcom/android/server/wm/AppWindowToken;)I

    move-result v3

    .line 5905
    .local v3, "pos":I
    invoke-virtual {v7}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v2

    .line 5906
    .restart local v2    # "numTokens":I
    const/4 v6, 0x0

    .restart local v6    # "tokenNdx":I
    :goto_45
    if-ge v6, v2, :cond_5c

    .line 5907
    invoke-virtual {v7, v6}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/AppWindowToken;

    .line 5908
    .local v8, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v8, :cond_59

    .line 5909
    invoke-direct {p0, p1, v3, v8}, Lcom/android/server/wm/WindowManagerService;->reAddAppWindowsLocked(Lcom/android/server/wm/DisplayContent;ILcom/android/server/wm/WindowToken;)I

    move-result v0

    .line 5910
    .local v0, "newPos":I
    if-eq v0, v3, :cond_58

    .line 5911
    const/4 v9, 0x1

    iput-boolean v9, p1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5913
    :cond_58
    move v3, v0

    .line 5906
    .end local v0    # "newPos":I
    :cond_59
    add-int/lit8 v6, v6, 0x1

    goto :goto_45

    .line 5902
    .end local v8    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_5c
    add-int/lit8 v4, v4, 0x1

    goto :goto_2c

    .line 5918
    .end local v2    # "numTokens":I
    .end local v3    # "pos":I
    .end local v6    # "tokenNdx":I
    .end local v7    # "tokens":Lcom/android/server/wm/AppTokenList;
    :cond_5f
    const/4 v9, 0x3

    invoke-direct {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v9

    if-nez v9, :cond_73

    .line 5921
    invoke-virtual {p0, v10}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    .line 5922
    invoke-virtual {p0, v10}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    .line 5924
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v9

    invoke-direct {p0, v9}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 5927
    :cond_73
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v9}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 5929
    if-eqz p2, :cond_7d

    .line 5930
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 5933
    :cond_7d
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v9, v10}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 5936
    return-void
.end method

.method public moveTaskToBottom(I)V
    .registers 10
    .param p1, "taskId"    # I

    .prologue
    .line 5989
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5991
    .local v0, "origId":J
    :try_start_4
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_4f

    .line 5992
    :try_start_7
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/Task;

    .line 5993
    .local v3, "task":Lcom/android/server/wm/Task;
    if-nez v3, :cond_34

    .line 5994
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "moveTaskToBottom: taskId="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " not found in mTaskIdToTask"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5996
    monitor-exit v5
    :try_end_30
    .catchall {:try_start_7 .. :try_end_30} :catchall_4c

    .line 6003
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6005
    :goto_33
    return-void

    .line 5998
    :cond_34
    :try_start_34
    iget-object v2, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 5999
    .local v2, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->moveTaskToBottom(Lcom/android/server/wm/Task;)Z

    .line 6000
    invoke-virtual {v2}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v6

    iget v4, v2, Lcom/android/server/wm/TaskStack;->mStackId:I

    if-nez v4, :cond_4a

    const/4 v4, 0x0

    :goto_42
    invoke-virtual {p0, v6, v4}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;Z)V

    .line 6001
    monitor-exit v5
    :try_end_46
    .catchall {:try_start_34 .. :try_end_46} :catchall_4c

    .line 6003
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_33

    .line 6000
    :cond_4a
    const/4 v4, 0x1

    goto :goto_42

    .line 6001
    .end local v2    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "task":Lcom/android/server/wm/Task;
    :catchall_4c
    move-exception v4

    :try_start_4d
    monitor-exit v5
    :try_end_4e
    .catchall {:try_start_4d .. :try_end_4e} :catchall_4c

    :try_start_4e
    throw v4
    :try_end_4f
    .catchall {:try_start_4e .. :try_end_4f} :catchall_4f

    .line 6003
    :catchall_4f
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public moveTaskToTop(I)V
    .registers 3
    .param p1, "taskId"    # I

    .prologue
    .line 5940
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->moveTaskToTop(IZ)V

    .line 5941
    return-void
.end method

.method public moveTaskToTop(IZ)V
    .registers 15
    .param p1, "taskId"    # I
    .param p2, "tapOutSide"    # Z

    .prologue
    .line 5945
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v5

    .line 5947
    .local v5, "origId":J
    :try_start_4
    iget-object v11, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v11
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_58

    .line 5948
    :try_start_7
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v10, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/Task;

    .line 5949
    .local v8, "task":Lcom/android/server/wm/Task;
    if-nez v8, :cond_16

    .line 5951
    monitor-exit v11
    :try_end_12
    .catchall {:try_start_7 .. :try_end_12} :catchall_55

    .line 5984
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5986
    :goto_15
    return-void

    .line 5958
    :cond_16
    const/4 v10, 0x1

    :try_start_17
    iput-boolean v10, p0, Lcom/android/server/wm/WindowManagerService;->mSkipWidgetFocus:Z

    .line 5961
    iget-object v7, v8, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 5962
    .local v7, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual {v8}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 5963
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v7}, Lcom/android/server/wm/TaskStack;->hasSibling()Z

    move-result v10

    if-eqz v10, :cond_5d

    .line 5964
    iget-object v10, v7, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v10}, Lcom/android/server/wm/StackBox;->getRootStackBox()Lcom/android/server/wm/StackBox;

    move-result-object v9

    .line 5965
    .local v9, "taskRootStackBox":Lcom/android/server/wm/StackBox;
    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getTasks()Ljava/util/ArrayList;

    move-result-object v10

    invoke-virtual {v10}, Ljava/util/ArrayList;->clone()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/ArrayList;

    .line 5966
    .local v4, "orderedTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_39
    :goto_39
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_5d

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/Task;

    .line 5967
    .local v3, "orderedTask":Lcom/android/server/wm/Task;
    iget-object v2, v3, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 5968
    .local v2, "orderedStack":Lcom/android/server/wm/TaskStack;
    if-eq v7, v2, :cond_39

    iget-object v10, v2, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v10}, Lcom/android/server/wm/StackBox;->getRootStackBox()Lcom/android/server/wm/StackBox;

    move-result-object v10

    if-ne v10, v9, :cond_39

    .line 5969
    invoke-virtual {v2, v3}, Lcom/android/server/wm/TaskStack;->moveTaskToTop(Lcom/android/server/wm/Task;)Z

    goto :goto_39

    .line 5982
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v1    # "i$":Ljava/util/Iterator;
    .end local v2    # "orderedStack":Lcom/android/server/wm/TaskStack;
    .end local v3    # "orderedTask":Lcom/android/server/wm/Task;
    .end local v4    # "orderedTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    .end local v7    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v8    # "task":Lcom/android/server/wm/Task;
    .end local v9    # "taskRootStackBox":Lcom/android/server/wm/StackBox;
    :catchall_55
    move-exception v10

    monitor-exit v11
    :try_end_57
    .catchall {:try_start_17 .. :try_end_57} :catchall_55

    :try_start_57
    throw v10
    :try_end_58
    .catchall {:try_start_57 .. :try_end_58} :catchall_58

    .line 5984
    :catchall_58
    move-exception v10

    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v10

    .line 5973
    .restart local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v7    # "stack":Lcom/android/server/wm/TaskStack;
    .restart local v8    # "task":Lcom/android/server/wm/Task;
    :cond_5d
    :try_start_5d
    invoke-virtual {v7, v8, p2}, Lcom/android/server/wm/TaskStack;->moveTaskToTop(Lcom/android/server/wm/Task;Z)Z

    .line 5978
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v10}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v10

    if-nez v10, :cond_6f

    .line 5979
    invoke-virtual {v7}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    invoke-virtual {p0, v10}, Lcom/android/server/wm/WindowManagerService;->moveStackWindowsLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 5982
    :cond_6f
    monitor-exit v11
    :try_end_70
    .catchall {:try_start_5d .. :try_end_70} :catchall_55

    .line 5984
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_15
.end method

.method public multiwindowSettingChanged(Z)V
    .registers 3
    .param p1, "value"    # Z

    .prologue
    .line 13190
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    invoke-interface {v0, p1}, Landroid/app/IActivityManager;->multiWindowSettingChanged(Z)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_5} :catch_6

    .line 13193
    :goto_5
    return-void

    .line 13191
    :catch_6
    move-exception v0

    goto :goto_5
.end method

.method notifyHardKeyboardStatusChange()V
    .registers 6

    .prologue
    .line 8425
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 8426
    :try_start_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

    .line 8427
    .local v2, "listener":Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardAvailable:Z

    .line 8428
    .local v0, "available":Z
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardEnabled:Z

    .line 8429
    .local v1, "enabled":Z
    monitor-exit v4
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_10

    .line 8430
    if-eqz v2, :cond_f

    .line 8431
    invoke-interface {v2, v0, v1}, Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;->onHardKeyboardStatusChange(ZZ)V

    .line 8433
    :cond_f
    return-void

    .line 8429
    .end local v0    # "available":Z
    .end local v1    # "enabled":Z
    .end local v2    # "listener":Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;
    :catchall_10
    move-exception v3

    :try_start_11
    monitor-exit v4
    :try_end_12
    .catchall {:try_start_11 .. :try_end_12} :catchall_10

    throw v3
.end method

.method notifyOrientationToSSRM(Z)V
    .registers 6
    .param p1, "isLandscape"    # Z

    .prologue
    .line 13638
    :try_start_0
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->cfmsService:Landroid/os/ICustomFrequencyManager;

    if-nez v1, :cond_12

    .line 13639
    const-string v1, "CustomFrequencyManagerService"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 13640
    .local v0, "b":Landroid/os/IBinder;
    if-eqz v0, :cond_12

    .line 13641
    invoke-static {v0}, Landroid/os/ICustomFrequencyManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/ICustomFrequencyManager;

    move-result-object v1

    sput-object v1, Lcom/android/server/wm/WindowManagerService;->cfmsService:Landroid/os/ICustomFrequencyManager;

    .line 13644
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_12
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->cfmsService:Landroid/os/ICustomFrequencyManager;

    if-eqz v1, :cond_21

    .line 13645
    if-eqz p1, :cond_22

    .line 13646
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->cfmsService:Landroid/os/ICustomFrequencyManager;

    const-string v2, "TYPE_WINDOW_ORIENTATION"

    const-string v3, "LANDSCAPE"

    invoke-interface {v1, v2, v3}, Landroid/os/ICustomFrequencyManager;->sendCommandToSSRM(Ljava/lang/String;Ljava/lang/String;)V

    .line 13653
    :cond_21
    :goto_21
    return-void

    .line 13648
    :cond_22
    sget-object v1, Lcom/android/server/wm/WindowManagerService;->cfmsService:Landroid/os/ICustomFrequencyManager;

    const-string v2, "TYPE_WINDOW_ORIENTATION"

    const-string v3, "PORTRAIT"

    invoke-interface {v1, v2, v3}, Landroid/os/ICustomFrequencyManager;->sendCommandToSSRM(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_2b
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_2b} :catch_2c

    goto :goto_21

    .line 13651
    :catch_2c
    move-exception v1

    goto :goto_21
.end method

.method public notifySystemUiVisibility(I)V
    .registers 12
    .param p1, "visibility"    # I

    .prologue
    .line 13024
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 13026
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v2

    .line 13027
    .local v2, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v2}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 13028
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_c
    if-ge v1, v0, :cond_3a

    .line 13029
    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 13030
    .local v3, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v5

    invoke-virtual {v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I
    :try_end_1b
    .catchall {:try_start_3 .. :try_end_1b} :catchall_3c

    move-result v4

    .line 13033
    .local v4, "zoneInfo":I
    :try_start_1c
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v7, 0x8000000

    and-int/2addr v5, v7

    if-eqz v5, :cond_37

    .line 13034
    if-nez v4, :cond_2f

    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v7, 0x899

    if-ne v5, v7, :cond_37

    .line 13035
    :cond_2f
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    invoke-interface {v5, v7, p1, v8, v9}, Landroid/view/IWindow;->dispatchSystemUiVisibilityChanged(IIII)V
    :try_end_37
    .catch Landroid/os/RemoteException; {:try_start_1c .. :try_end_37} :catch_3f
    .catchall {:try_start_1c .. :try_end_37} :catchall_3c

    .line 13028
    :cond_37
    :goto_37
    add-int/lit8 v1, v1, 0x1

    goto :goto_c

    .line 13042
    .end local v3    # "ws":Lcom/android/server/wm/WindowState;
    .end local v4    # "zoneInfo":I
    :cond_3a
    :try_start_3a
    monitor-exit v6

    .line 13043
    return-void

    .line 13042
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_3c
    move-exception v5

    monitor-exit v6
    :try_end_3e
    .catchall {:try_start_3a .. :try_end_3e} :catchall_3c

    throw v5

    .line 13038
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    .restart local v2    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v3    # "ws":Lcom/android/server/wm/WindowState;
    .restart local v4    # "zoneInfo":I
    :catch_3f
    move-exception v5

    goto :goto_37
.end method

.method okToDisplay()Z
    .registers 2

    .prologue
    .line 4188
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFrozen:Z

    if-nez v0, :cond_12

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_12

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->isScreenOnFully()Z

    move-result v0

    if-eqz v0, :cond_12

    const/4 v0, 0x1

    :goto_11
    return v0

    :cond_12
    const/4 v0, 0x0

    goto :goto_11
.end method

.method public onDisplayAdded(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 12754
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1b

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 12755
    return-void
.end method

.method public onDisplayChanged(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 12789
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1d

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 12790
    return-void
.end method

.method public onDisplayRemoved(I)V
    .registers 6
    .param p1, "displayId"    # I

    .prologue
    .line 12767
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x1c

    const/4 v3, 0x0

    invoke-virtual {v1, v2, p1, v3}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 12768
    return-void
.end method

.method public onRectangleOnScreenRequested(Landroid/os/IBinder;Landroid/graphics/Rect;Z)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "rectangle"    # Landroid/graphics/Rect;
    .param p3, "immediate"    # Z

    .prologue
    .line 3412
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3413
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v1, :cond_1c

    .line 3414
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 3416
    .local v0, "window":Lcom/android/server/wm/WindowState;
    if-eqz v0, :cond_1c

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v1

    if-nez v1, :cond_1c

    .line 3417
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    invoke-virtual {v1, p2, p3}, Lcom/android/server/wm/DisplayMagnifier;->onRectangleOnScreenRequestedLocked(Landroid/graphics/Rect;Z)V

    .line 3420
    .end local v0    # "window":Lcom/android/server/wm/WindowState;
    :cond_1c
    monitor-exit v2

    .line 3421
    return-void

    .line 3420
    :catchall_1e
    move-exception v1

    monitor-exit v2
    :try_end_20
    .catchall {:try_start_3 .. :try_end_20} :catchall_1e

    throw v1
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .registers 8
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 1221
    :try_start_0
    invoke-super {p0, p1, p2, p3, p4}, Landroid/view/IWindowManager$Stub;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_3} :catch_5

    move-result v1

    return v1

    .line 1222
    :catch_5
    move-exception v0

    .line 1225
    .local v0, "e":Ljava/lang/RuntimeException;
    instance-of v1, v0, Ljava/lang/SecurityException;

    if-nez v1, :cond_11

    .line 1226
    const-string v1, "WindowManager"

    const-string v2, "Window Manager Crash"

    invoke-static {v1, v2, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 1228
    :cond_11
    throw v0
.end method

.method public openSession(Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)Landroid/view/IWindowSession;
    .registers 6
    .param p1, "client"    # Lcom/android/internal/view/IInputMethodClient;
    .param p2, "inputContext"    # Lcom/android/internal/view/IInputContext;

    .prologue
    .line 9243
    if-nez p1, :cond_a

    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "null client"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9244
    :cond_a
    if-nez p2, :cond_14

    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "null inputContext"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 9245
    :cond_14
    new-instance v0, Lcom/android/server/wm/Session;

    invoke-direct {v0, p0, p1, p2}, Lcom/android/server/wm/Session;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/internal/view/IInputMethodClient;Lcom/android/internal/view/IInputContext;)V

    .line 9246
    .local v0, "session":Lcom/android/server/wm/Session;
    return-object v0
.end method

.method public outOfMemoryWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)Z
    .registers 10
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    const/4 v3, 0x0

    .line 3821
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3824
    .local v0, "origId":J
    :try_start_5
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_8
    .catchall {:try_start_5 .. :try_end_8} :catchall_25

    .line 3825
    const/4 v5, 0x0

    :try_start_9
    invoke-virtual {p0, p1, p2, v5}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 3826
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_14

    .line 3827
    monitor-exit v4
    :try_end_10
    .catchall {:try_start_9 .. :try_end_10} :catchall_22

    .line 3832
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_13
    return v3

    .line 3829
    :cond_14
    :try_start_14
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const-string v5, "from-client"

    const/4 v6, 0x0

    invoke-virtual {p0, v3, v5, v6}, Lcom/android/server/wm/WindowManagerService;->reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z

    move-result v3

    monitor-exit v4
    :try_end_1e
    .catchall {:try_start_14 .. :try_end_1e} :catchall_22

    .line 3832
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_13

    .line 3830
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_22
    move-exception v3

    :try_start_23
    monitor-exit v4
    :try_end_24
    .catchall {:try_start_23 .. :try_end_24} :catchall_22

    :try_start_24
    throw v3
    :try_end_25
    .catchall {:try_start_24 .. :try_end_25} :catchall_25

    .line 3832
    :catchall_25
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V
    .registers 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "enterAnim"    # I
    .param p3, "exitAnim"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;

    .prologue
    .line 5021
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5022
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V

    .line 5024
    monitor-exit v1

    .line 5025
    return-void

    .line 5024
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method public overridePendingAppTransitionScaleUp(IIII)V
    .registers 7
    .param p1, "startX"    # I
    .param p2, "startY"    # I
    .param p3, "startWidth"    # I
    .param p4, "startHeight"    # I

    .prologue
    .line 5030
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 5031
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionScaleUp(IIII)V

    .line 5033
    monitor-exit v1

    .line 5034
    return-void

    .line 5033
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method public overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V
    .registers 13
    .param p1, "srcThumb"    # Landroid/graphics/Bitmap;
    .param p2, "startX"    # I
    .param p3, "startY"    # I
    .param p4, "startedCallback"    # Landroid/os/IRemoteCallback;
    .param p5, "scaleUp"    # Z

    .prologue
    .line 5039
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 5040
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/AppTransition;->overridePendingAppTransitionThumb(Landroid/graphics/Bitmap;IILandroid/os/IRemoteCallback;Z)V

    .line 5042
    monitor-exit v6

    .line 5043
    return-void

    .line 5042
    :catchall_f
    move-exception v0

    monitor-exit v6
    :try_end_11
    .catchall {:try_start_3 .. :try_end_11} :catchall_f

    throw v0
.end method

.method public pauseKeyDispatching(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "_token"    # Landroid/os/IBinder;

    .prologue
    .line 8504
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string v2, "pauseKeyDispatching()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_12

    .line 8506
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8509
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8510
    :try_start_15
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 8511
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_24

    .line 8512
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->pauseDispatchingLw(Lcom/android/server/wm/WindowToken;)V

    .line 8514
    :cond_24
    monitor-exit v2

    .line 8515
    return-void

    .line 8514
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_26
    move-exception v1

    monitor-exit v2
    :try_end_28
    .catchall {:try_start_15 .. :try_end_28} :catchall_26

    throw v1
.end method

.method pauseRotationLocked()V
    .registers 2

    .prologue
    .line 7456
    iget v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    .line 7457
    return-void
.end method

.method public performBootTimeout()V
    .registers 4

    .prologue
    .line 6866
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 6867
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-nez v0, :cond_b

    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHeadless:Z

    if-eqz v0, :cond_d

    .line 6868
    :cond_b
    monitor-exit v1

    .line 6874
    :goto_c
    return-void

    .line 6870
    :cond_d
    const-string v0, "WindowManager"

    const-string v2, "***** BOOT TIMEOUT: forcing display enabled"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6871
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    .line 6872
    monitor-exit v1
    :try_end_18
    .catchall {:try_start_3 .. :try_end_18} :catchall_1c

    .line 6873
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    goto :goto_c

    .line 6872
    :catchall_1c
    move-exception v0

    :try_start_1d
    monitor-exit v1
    :try_end_1e
    .catchall {:try_start_1d .. :try_end_1e} :catchall_1c

    throw v0
.end method

.method public performDeferredDestroyWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 8
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 3805
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3808
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_20

    .line 3809
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 3810
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-nez v2, :cond_13

    .line 3811
    monitor-exit v4
    :try_end_f
    .catchall {:try_start_8 .. :try_end_f} :catchall_1d

    .line 3816
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3818
    :goto_12
    return-void

    .line 3813
    :cond_13
    :try_start_13
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowStateAnimator;->destroyDeferredSurfaceLocked()V

    .line 3814
    monitor-exit v4
    :try_end_19
    .catchall {:try_start_13 .. :try_end_19} :catchall_1d

    .line 3816
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_12

    .line 3814
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :catchall_1d
    move-exception v3

    :try_start_1e
    monitor-exit v4
    :try_end_1f
    .catchall {:try_start_1e .. :try_end_1f} :catchall_1d

    :try_start_1f
    throw v3
    :try_end_20
    .catchall {:try_start_1f .. :try_end_20} :catchall_20

    .line 3816
    :catchall_20
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public performEnableScreen()V
    .registers 20

    .prologue
    .line 6877
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v16, v0

    monitor-enter v16

    .line 6887
    :try_start_7
    move-object/from16 v0, p0

    iget-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v15, :cond_f

    .line 6888
    monitor-exit v16

    .line 7007
    :goto_e
    return-void

    .line 6890
    :cond_f
    move-object/from16 v0, p0

    iget-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v15, :cond_20

    move-object/from16 v0, p0

    iget-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v15, :cond_20

    .line 6891
    monitor-exit v16

    goto :goto_e

    .line 7001
    :catchall_1d
    move-exception v15

    monitor-exit v16
    :try_end_1f
    .catchall {:try_start_7 .. :try_end_1f} :catchall_1d

    throw v15

    .line 6894
    :cond_20
    :try_start_20
    move-object/from16 v0, p0

    iget-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mForceDisplayEnabled:Z

    if-nez v15, :cond_147

    .line 6897
    const/4 v6, 0x0

    .line 6898
    .local v6, "haveBootMsg":Z
    const/4 v5, 0x0

    .line 6901
    .local v5, "haveApp":Z
    const/4 v8, 0x0

    .line 6902
    .local v8, "haveWallpaper":Z
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v15}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v15

    const v17, 0x1110032

    move/from16 v0, v17

    invoke-virtual {v15, v0}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v15

    if-eqz v15, :cond_c2

    move-object/from16 v0, p0

    iget-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mOnlyCore:Z

    if-nez v15, :cond_c2

    const/4 v13, 0x1

    .line 6905
    .local v13, "wallpaperEnabled":Z
    :goto_43
    const/4 v7, 0x1

    .line 6907
    .local v7, "haveKeyguard":Z
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v14

    .line 6908
    .local v14, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v14}, Lcom/android/server/wm/WindowList;->size()I

    move-result v2

    .line 6909
    .local v2, "N":I
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_4d
    if-ge v9, v2, :cond_12b

    .line 6910
    invoke-virtual {v14, v9}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/WindowState;

    .line 6911
    .local v12, "w":Lcom/android/server/wm/WindowState;
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v15, v15, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v17, 0x7d4

    move/from16 v0, v17

    if-ne v15, v0, :cond_6b

    .line 6919
    iget v15, v12, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    if-nez v15, :cond_c4

    iget-boolean v15, v12, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    if-eqz v15, :cond_c4

    const/4 v11, 0x1

    .line 6921
    .local v11, "vis":Z
    :goto_68
    if-nez v11, :cond_c6

    const/4 v7, 0x1

    .line 6923
    .end local v11    # "vis":Z
    :cond_6b
    :goto_6b
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v15

    if-eqz v15, :cond_ae

    iget-boolean v15, v12, Lcom/android/server/wm/WindowState;->mObscured:Z

    if-nez v15, :cond_ae

    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v15

    if-nez v15, :cond_ae

    .line 6926
    new-instance v15, Ljava/lang/StringBuilder;

    invoke-direct {v15}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v15

    const-string v17, ""

    move-object/from16 v0, v17

    invoke-virtual {v15, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v15

    invoke-virtual {v15}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v15

    const-string v17, "com.android.systemui.ImageWallpaper"

    move-object/from16 v0, v17

    invoke-virtual {v15, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v15

    if-eqz v15, :cond_c8

    .line 6928
    const-string v15, "WindowManager"

    const-string v17, "!@skp"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6929
    const/4 v8, 0x1

    .line 6938
    :cond_ae
    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v15

    if-eqz v15, :cond_bf

    .line 6939
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v15, v15, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v17, 0x7e5

    move/from16 v0, v17

    if-ne v15, v0, :cond_107

    .line 6940
    const/4 v6, 0x1

    .line 6909
    :cond_bf
    :goto_bf
    add-int/lit8 v9, v9, 0x1

    goto :goto_4d

    .line 6902
    .end local v2    # "N":I
    .end local v7    # "haveKeyguard":Z
    .end local v9    # "i":I
    .end local v12    # "w":Lcom/android/server/wm/WindowState;
    .end local v13    # "wallpaperEnabled":Z
    .end local v14    # "windows":Lcom/android/server/wm/WindowList;
    :cond_c2
    const/4 v13, 0x0

    goto :goto_43

    .line 6919
    .restart local v2    # "N":I
    .restart local v7    # "haveKeyguard":Z
    .restart local v9    # "i":I
    .restart local v12    # "w":Lcom/android/server/wm/WindowState;
    .restart local v13    # "wallpaperEnabled":Z
    .restart local v14    # "windows":Lcom/android/server/wm/WindowList;
    :cond_c4
    const/4 v11, 0x0

    goto :goto_68

    .line 6921
    .restart local v11    # "vis":Z
    :cond_c6
    const/4 v7, 0x0

    goto :goto_6b

    .line 6933
    .end local v11    # "vis":Z
    :cond_c8
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string v18, "!@performEnableScreen return becase "

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    const-string v18, " "

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual {v12}, Lcom/android/server/wm/WindowState;->getAttrs()Landroid/view/WindowManager$LayoutParams;

    move-result-object v18

    move-object/from16 v0, v18

    iget-object v0, v0, Landroid/view/WindowManager$LayoutParams;->packageName:Ljava/lang/String;

    move-object/from16 v18, v0

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    const-string v18, " is not fully drawn!"

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 6934
    monitor-exit v16

    goto/16 :goto_e

    .line 6941
    :cond_107
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v15, v15, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v17, 0x2

    move/from16 v0, v17

    if-ne v15, v0, :cond_113

    .line 6942
    const/4 v5, 0x1

    goto :goto_bf

    .line 6943
    :cond_113
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v15, v15, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v17, 0x7dd

    move/from16 v0, v17

    if-ne v15, v0, :cond_11f

    .line 6944
    const/4 v8, 0x1

    goto :goto_bf

    .line 6945
    :cond_11f
    iget-object v15, v12, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v15, v15, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v17, 0x7d4

    move/from16 v0, v17

    if-ne v15, v0, :cond_bf

    .line 6946
    const/4 v7, 0x1

    goto :goto_bf

    .line 6960
    .end local v12    # "w":Lcom/android/server/wm/WindowState;
    :cond_12b
    move-object/from16 v0, p0

    iget-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-nez v15, :cond_136

    if-nez v6, :cond_136

    .line 6961
    monitor-exit v16

    goto/16 :goto_e

    .line 6967
    :cond_136
    move-object/from16 v0, p0

    iget-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-eqz v15, :cond_147

    if-nez v5, :cond_140

    if-eqz v7, :cond_144

    :cond_140
    if-eqz v13, :cond_147

    if-nez v8, :cond_147

    .line 6969
    :cond_144
    monitor-exit v16

    goto/16 :goto_e

    .line 6973
    .end local v2    # "N":I
    .end local v5    # "haveApp":Z
    .end local v6    # "haveBootMsg":Z
    .end local v7    # "haveKeyguard":Z
    .end local v8    # "haveWallpaper":Z
    .end local v9    # "i":I
    .end local v13    # "wallpaperEnabled":Z
    .end local v14    # "windows":Lcom/android/server/wm/WindowList;
    :cond_147
    const/4 v15, 0x1

    move-object/from16 v0, p0

    iput-boolean v15, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    .line 6983
    const-string v15, "WindowManager"

    const-string v17, "!@Boot: Enabling Screen!"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_155
    .catchall {:try_start_20 .. :try_end_155} :catchall_1d

    .line 6986
    :try_start_155
    const-string v15, "SurfaceFlinger"

    invoke-static {v15}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v10

    .line 6987
    .local v10, "surfaceFlinger":Landroid/os/IBinder;
    if-eqz v10, :cond_175

    .line 6989
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v3

    .line 6990
    .local v3, "data":Landroid/os/Parcel;
    const-string v15, "android.ui.ISurfaceComposer"

    invoke-virtual {v3, v15}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 6991
    const/4 v15, 0x1

    const/16 v17, 0x0

    const/16 v18, 0x0

    move-object/from16 v0, v17

    move/from16 v1, v18

    invoke-interface {v10, v15, v3, v0, v1}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 6993
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V
    :try_end_175
    .catch Landroid/os/RemoteException; {:try_start_155 .. :try_end_175} :catch_198
    .catchall {:try_start_155 .. :try_end_175} :catchall_1d

    .line 7000
    .end local v3    # "data":Landroid/os/Parcel;
    .end local v10    # "surfaceFlinger":Landroid/os/IBinder;
    :cond_175
    :goto_175
    :try_start_175
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v0, p0

    iget-boolean v0, v0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    move/from16 v17, v0

    move/from16 v0, v17

    invoke-virtual {v15, v0}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V

    .line 7001
    monitor-exit v16
    :try_end_185
    .catchall {:try_start_175 .. :try_end_185} :catchall_1d

    .line 7003
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v15}, Landroid/view/WindowManagerPolicy;->enableScreenAfterBoot()V

    .line 7006
    const/4 v15, 0x0

    const/16 v16, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v16

    invoke-virtual {v0, v15, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    goto/16 :goto_e

    .line 6995
    :catch_198
    move-exception v4

    .line 6996
    .local v4, "ex":Landroid/os/RemoteException;
    :try_start_199
    const-string v15, "WindowManager"

    const-string v17, "Boot completed: SurfaceFlinger is dead!"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1a2
    .catchall {:try_start_199 .. :try_end_1a2} :catchall_1d

    goto :goto_175
.end method

.method public prepareAppTransition(IZ)V
    .registers 8
    .param p1, "transit"    # I
    .param p2, "alwaysKeepCurrent"    # Z

    .prologue
    .line 4977
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "prepareAppTransition()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 4979
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4982
    :cond_12
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4988
    :try_start_15
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v0

    if-eqz v0, :cond_4b

    .line 4989
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v0

    if-eqz v0, :cond_2b

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionNone()Z

    move-result v0

    if-eqz v0, :cond_4d

    .line 4990
    :cond_2b
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    .line 5004
    :cond_30
    :goto_30
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->prepare()V

    .line 5005
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mStartingIconInTransition:Z

    .line 5006
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    .line 5007
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0xd

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 5008
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0xd

    const-wide/16 v3, 0x1388

    invoke-virtual {v0, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 5010
    :cond_4b
    monitor-exit v1

    .line 5011
    return-void

    .line 4991
    :cond_4d
    if-nez p2, :cond_30

    .line 4992
    const/16 v0, 0x1008

    if-ne p1, v0, :cond_66

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    const/16 v2, 0x2009

    invoke-virtual {v0, v2}, Lcom/android/server/wm/AppTransition;->isTransitionEqual(I)Z

    move-result v0

    if-eqz v0, :cond_66

    .line 4996
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V

    goto :goto_30

    .line 5010
    :catchall_63
    move-exception v0

    monitor-exit v1
    :try_end_65
    .catchall {:try_start_15 .. :try_end_65} :catchall_63

    throw v0

    .line 4997
    :cond_66
    const/16 v0, 0x1006

    if-ne p1, v0, :cond_30

    :try_start_6a
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    const/16 v2, 0x2007

    invoke-virtual {v0, v2}, Lcom/android/server/wm/AppTransition;->isTransitionEqual(I)Z

    move-result v0

    if-eqz v0, :cond_30

    .line 5001
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/AppTransition;->setAppTransition(I)V
    :try_end_79
    .catchall {:try_start_6a .. :try_end_79} :catchall_63

    goto :goto_30
.end method

.method prepareDragSurface(Landroid/view/IWindow;Landroid/view/SurfaceSession;IIILandroid/view/Surface;)Landroid/os/IBinder;
    .registers 24
    .param p1, "window"    # Landroid/view/IWindow;
    .param p2, "session"    # Landroid/view/SurfaceSession;
    .param p3, "flags"    # I
    .param p4, "width"    # I
    .param p5, "height"    # I
    .param p6, "outSurface"    # Landroid/view/Surface;

    .prologue
    .line 8447
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v8

    .line 8448
    .local v8, "callerPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v13

    .line 8449
    .local v13, "origId":J
    const/4 v15, 0x0

    .line 8452
    .local v15, "token":Landroid/os/IBinder;
    :try_start_9
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v16, v0

    monitor-enter v16
    :try_end_10
    .catchall {:try_start_9 .. :try_end_10} :catchall_c8

    .line 8454
    :try_start_10
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    if-nez v2, :cond_7c

    .line 8456
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v10

    .line 8457
    .local v10, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v10}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v9

    .line 8458
    .local v9, "display":Landroid/view/Display;
    new-instance v1, Landroid/view/SurfaceControl;

    const-string v3, "drag surface"

    const/4 v6, -0x3

    const/4 v7, 0x4

    move-object/from16 v2, p2

    move/from16 v4, p4

    move/from16 v5, p5

    invoke-direct/range {v1 .. v7}, Landroid/view/SurfaceControl;-><init>(Landroid/view/SurfaceSession;Ljava/lang/String;IIII)V

    .line 8460
    .local v1, "surface":Landroid/view/SurfaceControl;
    invoke-virtual {v9}, Landroid/view/Display;->getLayerStack()I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/view/SurfaceControl;->setLayerStack(I)V

    .line 8463
    move-object/from16 v0, p6

    invoke-virtual {v0, v1}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V

    .line 8464
    invoke-interface/range {p1 .. p1}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    .line 8465
    .local v7, "winBinder":Landroid/os/IBinder;
    new-instance v4, Landroid/os/Binder;

    invoke-direct {v4}, Landroid/os/Binder;-><init>()V
    :try_end_42
    .catch Landroid/view/SurfaceControl$OutOfResourcesException; {:try_start_10 .. :try_end_42} :catch_85
    .catchall {:try_start_10 .. :try_end_42} :catchall_cb

    .line 8469
    .end local v15    # "token":Landroid/os/IBinder;
    .local v4, "token":Landroid/os/IBinder;
    :try_start_42
    new-instance v2, Lcom/android/server/wm/DragState;

    const/4 v6, 0x1

    move-object/from16 v3, p0

    move-object v5, v1

    invoke-direct/range {v2 .. v7}, Lcom/android/server/wm/DragState;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;Landroid/view/SurfaceControl;ILandroid/os/IBinder;)V

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    .line 8471
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    new-instance v15, Landroid/os/Binder;

    invoke-direct {v15}, Landroid/os/Binder;-><init>()V

    iput-object v15, v2, Lcom/android/server/wm/DragState;->mToken:Landroid/os/IBinder;
    :try_end_5a
    .catch Landroid/view/SurfaceControl$OutOfResourcesException; {:try_start_42 .. :try_end_5a} :catch_ce
    .catchall {:try_start_42 .. :try_end_5a} :catchall_c0

    .line 8474
    .end local v4    # "token":Landroid/os/IBinder;
    .restart local v15    # "token":Landroid/os/IBinder;
    :try_start_5a
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x14

    invoke-virtual {v2, v3, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 8475
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v3, 0x14

    invoke-virtual {v2, v3, v7}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v12

    .line 8476
    .local v12, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v5, 0x1388

    invoke-virtual {v2, v12, v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z
    :try_end_76
    .catch Landroid/view/SurfaceControl$OutOfResourcesException; {:try_start_5a .. :try_end_76} :catch_85
    .catchall {:try_start_5a .. :try_end_76} :catchall_cb

    move-object v4, v15

    .line 8487
    .end local v1    # "surface":Landroid/view/SurfaceControl;
    .end local v7    # "winBinder":Landroid/os/IBinder;
    .end local v9    # "display":Landroid/view/Display;
    .end local v10    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "msg":Landroid/os/Message;
    .end local v15    # "token":Landroid/os/IBinder;
    .restart local v4    # "token":Landroid/os/IBinder;
    :cond_77
    :goto_77
    :try_start_77
    monitor-exit v16
    :try_end_78
    .catchall {:try_start_77 .. :try_end_78} :catchall_c0

    .line 8489
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8492
    return-object v4

    .line 8478
    .end local v4    # "token":Landroid/os/IBinder;
    .restart local v15    # "token":Landroid/os/IBinder;
    :cond_7c
    :try_start_7c
    const-string v2, "WindowManager"

    const-string v3, "Drag already in progress"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_83
    .catch Landroid/view/SurfaceControl$OutOfResourcesException; {:try_start_7c .. :try_end_83} :catch_85
    .catchall {:try_start_7c .. :try_end_83} :catchall_cb

    move-object v4, v15

    .end local v15    # "token":Landroid/os/IBinder;
    .restart local v4    # "token":Landroid/os/IBinder;
    goto :goto_77

    .line 8480
    .end local v4    # "token":Landroid/os/IBinder;
    .restart local v15    # "token":Landroid/os/IBinder;
    :catch_85
    move-exception v11

    move-object v4, v15

    .line 8481
    .end local v15    # "token":Landroid/os/IBinder;
    .restart local v4    # "token":Landroid/os/IBinder;
    .local v11, "e":Landroid/view/SurfaceControl$OutOfResourcesException;
    :goto_87
    :try_start_87
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Can\'t allocate drag surface w="

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p4

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, " h="

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, v11}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8482
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    if-eqz v2, :cond_77

    .line 8483
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    invoke-virtual {v2}, Lcom/android/server/wm/DragState;->reset()V

    .line 8484
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mDragState:Lcom/android/server/wm/DragState;

    goto :goto_77

    .line 8487
    .end local v11    # "e":Landroid/view/SurfaceControl$OutOfResourcesException;
    :catchall_c0
    move-exception v2

    :goto_c1
    monitor-exit v16
    :try_end_c2
    .catchall {:try_start_87 .. :try_end_c2} :catchall_c0

    :try_start_c2
    throw v2
    :try_end_c3
    .catchall {:try_start_c2 .. :try_end_c3} :catchall_c3

    .line 8489
    :catchall_c3
    move-exception v2

    :goto_c4
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .end local v4    # "token":Landroid/os/IBinder;
    .restart local v15    # "token":Landroid/os/IBinder;
    :catchall_c8
    move-exception v2

    move-object v4, v15

    .end local v15    # "token":Landroid/os/IBinder;
    .restart local v4    # "token":Landroid/os/IBinder;
    goto :goto_c4

    .line 8487
    .end local v4    # "token":Landroid/os/IBinder;
    .restart local v15    # "token":Landroid/os/IBinder;
    :catchall_cb
    move-exception v2

    move-object v4, v15

    .end local v15    # "token":Landroid/os/IBinder;
    .restart local v4    # "token":Landroid/os/IBinder;
    goto :goto_c1

    .line 8480
    .restart local v1    # "surface":Landroid/view/SurfaceControl;
    .restart local v7    # "winBinder":Landroid/os/IBinder;
    .restart local v9    # "display":Landroid/view/Display;
    .restart local v10    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catch_ce
    move-exception v11

    goto :goto_87
.end method

.method public reboot()V
    .registers 4

    .prologue
    .line 6772
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "GlobalActions restart"

    const/4 v2, 0x1

    invoke-static {v0, v1, v2}, Lcom/android/server/power/ShutdownThread;->reboot(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 6773
    return-void
.end method

.method public reboot(Z)V
    .registers 4
    .param p1, "confirm"    # Z

    .prologue
    .line 6778
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "GlobalActions restart"

    invoke-static {v0, v1, p1}, Lcom/android/server/power/ShutdownThread;->reboot(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 6779
    return-void
.end method

.method public rebootSafeMode()V
    .registers 4

    .prologue
    .line 6766
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "GlobalActions restart"

    const/4 v2, 0x1

    invoke-static {v0, v1, v2}, Lcom/android/server/power/ShutdownThread;->rebootSafeMode(Landroid/content/Context;Ljava/lang/String;Z)V

    .line 6767
    return-void
.end method

.method final rebuildAppWindowListLocked()V
    .registers 2

    .prologue
    .line 9658
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 9659
    return-void
.end method

.method reclaimSomeSurfaceMemoryLocked(Lcom/android/server/wm/WindowStateAnimator;Ljava/lang/String;Z)Z
    .registers 26
    .param p1, "winAnimator"    # Lcom/android/server/wm/WindowStateAnimator;
    .param p2, "operation"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    .prologue
    .line 11510
    move-object/from16 v0, p1

    iget-object v13, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 11511
    .local v13, "surface":Landroid/view/SurfaceControl;
    const/4 v8, 0x0

    .line 11512
    .local v8, "leakedSurface":Z
    const/4 v7, 0x0

    .line 11514
    .local v7, "killedApps":Z
    const/16 v18, 0x7918

    const/16 v19, 0x3

    move/from16 v0, v19

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v21, v0

    invoke-virtual/range {v21 .. v21}, Lcom/android/server/wm/WindowState;->toString()Ljava/lang/String;

    move-result-object v21

    aput-object v21, v19, v20

    const/16 v20, 0x1

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v21, v0

    move-object/from16 v0, v21

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v21, v0

    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v21

    aput-object v21, v19, v20

    const/16 v20, 0x2

    aput-object p2, v19, v20

    invoke-static/range {v18 .. v19}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 11517
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    move-object/from16 v18, v0

    if-nez v18, :cond_4c

    .line 11518
    new-instance v18, Ljava/util/ArrayList;

    invoke-direct/range {v18 .. v18}, Ljava/util/ArrayList;-><init>()V

    move-object/from16 v0, v18

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    .line 11521
    :cond_4c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v3

    .line 11527
    .local v3, "callingIdentity":J
    :try_start_50
    const-string v18, "WindowManager"

    const-string v19, "Out of memory for surface!  Looking for leaks..."

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11528
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Landroid/util/SparseArray;->size()I

    move-result v9

    .line 11529
    .local v9, "numDisplays":I
    const/4 v5, 0x0

    .local v5, "displayNdx":I
    :goto_62
    if-ge v5, v9, :cond_1b7

    .line 11530
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/DisplayContent;

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v15

    .line 11531
    .local v15, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v15}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    .line 11532
    .local v10, "numWindows":I
    const/4 v14, 0x0

    .local v14, "winNdx":I
    :goto_7b
    if-ge v14, v10, :cond_1b3

    .line 11533
    invoke-virtual {v15, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    .line 11534
    .local v16, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    .line 11535
    .local v17, "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v18, v0

    if-eqz v18, :cond_13a

    .line 11536
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mSessions:Ljava/util/HashSet;

    move-object/from16 v18, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v19, v0

    invoke-virtual/range {v18 .. v19}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v18

    if-nez v18, :cond_13e

    .line 11537
    const-string v18, "WindowManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string v20, "LEAKED SURFACE (session doesn\'t exist): "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " surface="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " token="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    move-object/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " pid="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " uid="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/Session;->mUid:I

    move/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11543
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Landroid/view/SurfaceControl;->destroy()V

    .line 11544
    const/16 v18, 0x0

    move/from16 v0, v18

    move-object/from16 v1, v17

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    .line 11545
    const/16 v18, 0x0

    move-object/from16 v0, v18

    move-object/from16 v1, v17

    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 11546
    const/16 v18, 0x0

    move/from16 v0, v18

    move-object/from16 v1, v16

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    .line 11547
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11548
    const/4 v8, 0x1

    .line 11532
    :cond_13a
    :goto_13a
    add-int/lit8 v14, v14, 0x1

    goto/16 :goto_7b

    .line 11549
    :cond_13e
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v18, v0

    if-eqz v18, :cond_13a

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move/from16 v18, v0

    if-eqz v18, :cond_13a

    .line 11550
    const-string v18, "WindowManager"

    new-instance v19, Ljava/lang/StringBuilder;

    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V

    const-string v20, "LEAKED SURFACE (app token hidden): "

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " surface="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    const-string v20, " token="

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v19

    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11554
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Landroid/view/SurfaceControl;->destroy()V

    .line 11555
    const/16 v18, 0x0

    move/from16 v0, v18

    move-object/from16 v1, v17

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    .line 11556
    const/16 v18, 0x0

    move-object/from16 v0, v18

    move-object/from16 v1, v17

    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 11557
    const/16 v18, 0x0

    move/from16 v0, v18

    move-object/from16 v1, v16

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    .line 11558
    const/4 v8, 0x1

    goto :goto_13a

    .line 11529
    .end local v16    # "ws":Lcom/android/server/wm/WindowState;
    .end local v17    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :cond_1b3
    add-int/lit8 v5, v5, 0x1

    goto/16 :goto_62

    .line 11564
    .end local v10    # "numWindows":I
    .end local v14    # "winNdx":I
    .end local v15    # "windows":Lcom/android/server/wm/WindowList;
    :cond_1b7
    if-nez v8, :cond_265

    .line 11565
    const-string v18, "WindowManager"

    const-string v19, "No leaked surfaces; killing applicatons!"

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11566
    new-instance v11, Landroid/util/SparseIntArray;

    invoke-direct {v11}, Landroid/util/SparseIntArray;-><init>()V

    .line 11567
    .local v11, "pidCandidates":Landroid/util/SparseIntArray;
    const/4 v5, 0x0

    :goto_1c6
    if-ge v5, v9, :cond_265

    .line 11568
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/wm/DisplayContent;

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v15

    .line 11569
    .restart local v15    # "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v15}, Lcom/android/server/wm/WindowList;->size()I

    move-result v10

    .line 11570
    .restart local v10    # "numWindows":I
    const/4 v14, 0x0

    .restart local v14    # "winNdx":I
    :goto_1df
    if-ge v14, v10, :cond_22d

    .line 11571
    invoke-virtual {v15, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/wm/WindowState;

    .line 11572
    .restart local v16    # "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mForceRemoves:Ljava/util/ArrayList;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v18

    if-eqz v18, :cond_1fa

    .line 11570
    :cond_1f7
    :goto_1f7
    add-int/lit8 v14, v14, 0x1

    goto :goto_1df

    .line 11575
    :cond_1fa
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v17, v0

    .line 11576
    .restart local v17    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v18, v0

    if-eqz v18, :cond_1f7

    .line 11577
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v18, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSession:Lcom/android/server/wm/Session;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget v0, v0, Lcom/android/server/wm/Session;->mPid:I

    move/from16 v19, v0

    move/from16 v0, v18

    move/from16 v1, v19

    invoke-virtual {v11, v0, v1}, Landroid/util/SparseIntArray;->append(II)V
    :try_end_227
    .catchall {:try_start_50 .. :try_end_227} :catchall_228

    goto :goto_1f7

    .line 11619
    .end local v5    # "displayNdx":I
    .end local v9    # "numDisplays":I
    .end local v10    # "numWindows":I
    .end local v11    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v14    # "winNdx":I
    .end local v15    # "windows":Lcom/android/server/wm/WindowList;
    .end local v16    # "ws":Lcom/android/server/wm/WindowState;
    .end local v17    # "wsa":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_228
    move-exception v18

    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v18

    .line 11580
    .restart local v5    # "displayNdx":I
    .restart local v9    # "numDisplays":I
    .restart local v10    # "numWindows":I
    .restart local v11    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v14    # "winNdx":I
    .restart local v15    # "windows":Lcom/android/server/wm/WindowList;
    :cond_22d
    :try_start_22d
    invoke-virtual {v11}, Landroid/util/SparseIntArray;->size()I

    move-result v18

    if-lez v18, :cond_261

    .line 11581
    invoke-virtual {v11}, Landroid/util/SparseIntArray;->size()I

    move-result v18

    move/from16 v0, v18

    new-array v12, v0, [I

    .line 11582
    .local v12, "pids":[I
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_23c
    array-length v0, v12

    move/from16 v18, v0

    move/from16 v0, v18

    if-ge v6, v0, :cond_24c

    .line 11583
    invoke-virtual {v11, v6}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v18

    aput v18, v12, v6
    :try_end_249
    .catchall {:try_start_22d .. :try_end_249} :catchall_228

    .line 11582
    add-int/lit8 v6, v6, 0x1

    goto :goto_23c

    .line 11586
    :cond_24c
    :try_start_24c
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    move-object/from16 v18, v0

    const-string v19, "Free memory"

    move-object/from16 v0, v18

    move-object/from16 v1, v19

    move/from16 v2, p3

    invoke-interface {v0, v12, v1, v2}, Landroid/app/IActivityManager;->killPids([ILjava/lang/String;Z)Z
    :try_end_25d
    .catch Landroid/os/RemoteException; {:try_start_24c .. :try_end_25d} :catch_2cd
    .catchall {:try_start_24c .. :try_end_25d} :catchall_228

    move-result v18

    if-eqz v18, :cond_261

    .line 11587
    const/4 v7, 0x1

    .line 11567
    .end local v6    # "i":I
    .end local v12    # "pids":[I
    :cond_261
    :goto_261
    add-int/lit8 v5, v5, 0x1

    goto/16 :goto_1c6

    .line 11596
    .end local v10    # "numWindows":I
    .end local v11    # "pidCandidates":Landroid/util/SparseIntArray;
    .end local v14    # "winNdx":I
    .end local v15    # "windows":Lcom/android/server/wm/WindowList;
    :cond_265
    const/16 v18, 0x1

    :try_start_267
    move-object/from16 v0, p0

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    .line 11599
    if-nez v8, :cond_272

    if-eqz v7, :cond_2be

    .line 11602
    :cond_272
    const-string v18, "WindowManager"

    const-string v19, "Looks like we have reclaimed some memory, clearing surface for retry."

    invoke-static/range {v18 .. v19}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11603
    if-eqz v13, :cond_2af

    .line 11606
    invoke-virtual {v13}, Landroid/view/SurfaceControl;->destroy()V

    .line 11607
    const/16 v18, 0x0

    move/from16 v0, v18

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceShown:Z

    .line 11608
    const/16 v18, 0x0

    move-object/from16 v0, v18

    move-object/from16 v1, p1

    iput-object v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    .line 11609
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v18, v0

    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, v18

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    .line 11610
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v18, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindow(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_2af
    .catchall {:try_start_267 .. :try_end_2af} :catchall_228

    .line 11614
    :cond_2af
    :try_start_2af
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mWin:Lcom/android/server/wm/WindowState;

    move-object/from16 v18, v0

    move-object/from16 v0, v18

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v18, v0

    invoke-interface/range {v18 .. v18}, Landroid/view/IWindow;->dispatchGetNewSurface()V
    :try_end_2be
    .catch Landroid/os/RemoteException; {:try_start_2af .. :try_end_2be} :catch_2cb
    .catchall {:try_start_2af .. :try_end_2be} :catchall_228

    .line 11619
    :cond_2be
    :goto_2be
    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11622
    if-nez v8, :cond_2c5

    if-eqz v7, :cond_2c8

    :cond_2c5
    const/16 v18, 0x1

    :goto_2c7
    return v18

    :cond_2c8
    const/16 v18, 0x0

    goto :goto_2c7

    .line 11615
    :catch_2cb
    move-exception v18

    goto :goto_2be

    .line 11589
    .restart local v6    # "i":I
    .restart local v10    # "numWindows":I
    .restart local v11    # "pidCandidates":Landroid/util/SparseIntArray;
    .restart local v12    # "pids":[I
    .restart local v14    # "winNdx":I
    .restart local v15    # "windows":Lcom/android/server/wm/WindowList;
    :catch_2cd
    move-exception v18

    goto :goto_261
.end method

.method public reenableKeyguard(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6468
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.DISABLE_KEYGUARD"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 6470
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires DISABLE_KEYGUARD permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6473
    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mKeyguardDisableHandler:Lcom/android/server/wm/KeyguardDisableHandler;

    const/4 v2, 0x2

    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/KeyguardDisableHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/wm/KeyguardDisableHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6475
    return-void
.end method

.method public reevaluateStatusBarVisibility()V
    .registers 5

    .prologue
    .line 12043
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 12044
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    invoke-interface {v1, v3}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    move-result v0

    .line 12045
    .local v0, "visibility":I
    invoke-virtual {p0, v0}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)V

    .line 12046
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 12047
    monitor-exit v2

    .line 12048
    return-void

    .line 12047
    .end local v0    # "visibility":I
    :catchall_13
    move-exception v1

    monitor-exit v2
    :try_end_15
    .catchall {:try_start_3 .. :try_end_15} :catchall_13

    throw v1
.end method

.method public registerEasyOneHandWatcher(Landroid/sec/easyonehand/IEasyOneHandWatcher;)V
    .registers 7
    .param p1, "watcher"    # Landroid/sec/easyonehand/IEasyOneHandWatcher;

    .prologue
    .line 3995
    invoke-interface {p1}, Landroid/sec/easyonehand/IEasyOneHandWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 3997
    .local v0, "watcherBinder":Landroid/os/IBinder;
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 3999
    :try_start_7
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    if-nez v1, :cond_13

    .line 4000
    new-instance v1, Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    const/4 v3, 0x0

    invoke-direct {v1, p0, v3}, Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;-><init>(Lcom/android/server/wm/WindowManagerService;Lcom/android/server/wm/WindowManagerService$1;)V

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    .line 4003
    :cond_13
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

    if-nez v1, :cond_23

    .line 4004
    invoke-interface {p1}, Landroid/sec/easyonehand/IEasyOneHandWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    const/4 v4, 0x0

    invoke-interface {v1, v3, v4}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 4005
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;
    :try_end_23
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_23} :catch_28
    .catchall {:try_start_7 .. :try_end_23} :catchall_25

    .line 4010
    :cond_23
    :goto_23
    :try_start_23
    monitor-exit v2

    .line 4011
    return-void

    .line 4010
    :catchall_25
    move-exception v1

    monitor-exit v2
    :try_end_27
    .catchall {:try_start_23 .. :try_end_27} :catchall_25

    throw v1

    .line 4007
    :catch_28
    move-exception v1

    goto :goto_23
.end method

.method public registerPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .registers 3
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    .prologue
    .line 6619
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->registerInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 6620
    return-void
.end method

.method public relayoutStatusBarVisibility()V
    .registers 3

    .prologue
    .line 12057
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12058
    :try_start_3
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 12059
    monitor-exit v1

    .line 12060
    return-void

    .line 12059
    :catchall_8
    move-exception v0

    monitor-exit v1
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_8

    throw v0
.end method

.method public relayoutWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/view/WindowManager$LayoutParams;IIIILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/content/res/Configuration;Landroid/view/Surface;Landroid/graphics/PointF;)I
    .registers 57
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "seq"    # I
    .param p4, "attrs"    # Landroid/view/WindowManager$LayoutParams;
    .param p5, "requestedWidth"    # I
    .param p6, "requestedHeight"    # I
    .param p7, "viewVisibility"    # I
    .param p8, "flags"    # I
    .param p9, "outFrame"    # Landroid/graphics/Rect;
    .param p10, "outOverscanInsets"    # Landroid/graphics/Rect;
    .param p11, "outContentInsets"    # Landroid/graphics/Rect;
    .param p12, "outVisibleInsets"    # Landroid/graphics/Rect;
    .param p13, "outConfig"    # Landroid/content/res/Configuration;
    .param p14, "outSurface"    # Landroid/view/Surface;
    .param p15, "outScale"    # Landroid/graphics/PointF;

    .prologue
    .line 3436
    const/16 v31, 0x0

    .line 3439
    .local v31, "toBeDisplayed":Z
    const/16 v27, 0x0

    .line 3443
    .local v27, "surfaceChanged":Z
    const/16 v29, 0x0

    .line 3444
    .local v29, "systemUiVisibility":I
    if-eqz p4, :cond_2f

    .line 3445
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->systemUiVisibility:I

    move/from16 v37, v0

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->subtreeSystemUiVisibility:I

    move/from16 v38, v0

    or-int v29, v37, v38

    .line 3446
    const/high16 v37, 0x3ff0000

    and-int v37, v37, v29

    if-eqz v37, :cond_2f

    .line 3447
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v37, v0

    const-string v38, "android.permission.STATUS_BAR"

    invoke-virtual/range {v37 .. v38}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v37

    if-eqz v37, :cond_2f

    .line 3449
    const v37, -0x3ff0001

    and-int v29, v29, v37

    .line 3453
    :cond_2f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v22

    .line 3455
    .local v22, "origId":J
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v38, v0

    monitor-enter v38

    .line 3456
    const/16 v37, 0x0

    :try_start_3c
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, v37

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v35

    .line 3457
    .local v35, "win":Lcom/android/server/wm/WindowState;
    if-nez v35, :cond_4e

    .line 3458
    const/16 v37, 0x0

    monitor-exit v38

    .line 3798
    :goto_4d
    return v37

    .line 3460
    :cond_4e
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v36, v0

    .line 3461
    .local v36, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    move/from16 v37, v0

    move/from16 v0, v37

    move/from16 v1, p5

    if-ne v0, v1, :cond_6c

    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    move/from16 v37, v0

    move/from16 v0, v37

    move/from16 v1, p6

    if-eq v0, v1, :cond_80

    .line 3463
    :cond_6c
    const/16 v37, 0x1

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 3464
    move/from16 v0, p5

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mRequestedWidth:I

    .line 3465
    move/from16 v0, p6

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mRequestedHeight:I

    .line 3467
    :cond_80
    if-eqz p4, :cond_94

    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mSeq:I

    move/from16 v37, v0

    move/from16 v0, p3

    move/from16 v1, v37

    if-ne v0, v1, :cond_94

    .line 3468
    move/from16 v0, v29

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 3471
    :cond_94
    if-eqz p4, :cond_a3

    .line 3472
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    move-object/from16 v1, p4

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->adjustWindowParamsLw(Landroid/view/WindowManager$LayoutParams;)V

    .line 3475
    :cond_a3
    and-int/lit8 v37, p8, 0x2

    if-eqz v37, :cond_da

    const/16 v37, 0x1

    :goto_a9
    move/from16 v0, v37

    move-object/from16 v1, v36

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceDestroyDeferred:Z

    .line 3478
    const/4 v7, 0x0

    .line 3479
    .local v7, "attrChanges":I
    const/4 v12, 0x0

    .line 3480
    .local v12, "flagChanges":I
    if-eqz p4, :cond_111

    .line 3481
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v37, v0

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v39, v0

    move/from16 v0, v37

    move/from16 v1, v39

    if-eq v0, v1, :cond_dd

    .line 3482
    new-instance v37, Ljava/lang/IllegalArgumentException;

    const-string v39, "Window type can not be changed after the window is added."

    move-object/from16 v0, v37

    move-object/from16 v1, v39

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v37

    .line 3790
    .end local v7    # "attrChanges":I
    .end local v12    # "flagChanges":I
    .end local v35    # "win":Lcom/android/server/wm/WindowState;
    .end local v36    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :catchall_d7
    move-exception v37

    monitor-exit v38
    :try_end_d9
    .catchall {:try_start_3c .. :try_end_d9} :catchall_d7

    throw v37

    .line 3475
    .restart local v35    # "win":Lcom/android/server/wm/WindowState;
    .restart local v36    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_da
    const/16 v37, 0x0

    goto :goto_a9

    .line 3485
    .restart local v7    # "attrChanges":I
    .restart local v12    # "flagChanges":I
    :cond_dd
    :try_start_dd
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v39, v0

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v40, v0

    xor-int v12, v39, v40

    move-object/from16 v0, v37

    iput v12, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 3486
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    move-object/from16 v1, p4

    invoke-virtual {v0, v1}, Landroid/view/WindowManager$LayoutParams;->copyFrom(Landroid/view/WindowManager$LayoutParams;)I

    move-result v7

    .line 3487
    and-int/lit16 v0, v7, 0x4001

    move/from16 v37, v0

    if-eqz v37, :cond_111

    .line 3489
    const/16 v37, 0x1

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mLayoutNeeded:Z

    .line 3496
    :cond_111
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v37, v0

    move/from16 v0, v37

    and-int/lit16 v0, v0, 0x80

    move/from16 v37, v0

    if-eqz v37, :cond_668

    const/16 v37, 0x1

    :goto_127
    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mEnforceSizeCompat:Z

    .line 3499
    and-int/lit16 v0, v7, 0x80

    move/from16 v37, v0

    if-eqz v37, :cond_13f

    .line 3500
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->alpha:F

    move/from16 v37, v0

    move/from16 v0, v37

    move-object/from16 v1, v36

    iput v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAlpha:F

    .line 3503
    :cond_13f
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v37, v0

    move/from16 v0, v37

    and-int/lit16 v0, v0, 0x4000

    move/from16 v37, v0

    if-eqz v37, :cond_66c

    const/16 v26, 0x1

    .line 3508
    .local v26, "scaledWindow":Z
    :goto_155
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v19

    .line 3509
    .local v19, "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    const/16 v37, 0x800

    move-object/from16 v0, v19

    move/from16 v1, v37

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v37

    if-eqz v37, :cond_670

    const/16 v37, 0x4

    move-object/from16 v0, v19

    move/from16 v1, v37

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v37

    if-nez v37, :cond_670

    const/16 v21, 0x1

    .line 3511
    .local v21, "optionScale":Z
    :goto_173
    if-nez v21, :cond_195

    .line 3512
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isFloating()Z

    move-result v37

    if-eqz v37, :cond_674

    const/16 v37, 0x800

    move-object/from16 v0, v19

    move/from16 v1, v37

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v37

    if-eqz v37, :cond_674

    const/16 v37, 0x4

    move-object/from16 v0, v19

    move/from16 v1, v37

    invoke-virtual {v0, v1}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v37

    if-eqz v37, :cond_674

    const/16 v21, 0x1

    .line 3516
    :cond_195
    :goto_195
    const/high16 v33, 0x3f800000

    .line 3517
    .local v33, "vScale":F
    const/high16 v14, 0x3f800000

    .line 3519
    .local v14, "hScale":F
    if-eqz v21, :cond_2d3

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    move/from16 v37, v0

    const/high16 v39, 0x200000

    and-int v37, v37, v39

    if-nez v37, :cond_2d3

    .line 3520
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    if-eqz v37, :cond_678

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v37, v0

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v39, v0

    move-object/from16 v0, v39

    iget v0, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    move/from16 v39, v0

    move-object/from16 v0, v37

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v37

    check-cast v37, Lcom/android/server/wm/Task;

    move-object/from16 v30, v37

    .line 3521
    .local v30, "task":Lcom/android/server/wm/Task;
    :goto_1d3
    if-eqz v30, :cond_67c

    move-object/from16 v0, v30

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v37, v0

    if-eqz v37, :cond_67c

    move-object/from16 v0, v30

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v37, v0

    invoke-virtual/range {v37 .. v37}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v9

    .line 3523
    .local v9, "displayContent":Lcom/android/server/wm/DisplayContent;
    :goto_1e7
    if-eqz v9, :cond_2d3

    .line 3525
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    move/from16 v37, v0

    const/16 v39, 0x1

    move/from16 v0, v37

    move/from16 v1, v39

    if-ne v0, v1, :cond_211

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    move/from16 v37, v0

    const/16 v39, 0x2

    move/from16 v0, v37

    move/from16 v1, v39

    if-eq v0, v1, :cond_233

    :cond_211
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    move/from16 v37, v0

    if-nez v37, :cond_67f

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    move/from16 v37, v0

    const/16 v39, 0x1

    move/from16 v0, v37

    move/from16 v1, v39

    if-ne v0, v1, :cond_67f

    .line 3527
    :cond_233
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    move/from16 v37, v0

    move/from16 v0, v37

    invoke-virtual {v9, v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo(I)Landroid/view/DisplayInfo;

    move-result-object v10

    .line 3531
    .local v10, "displayInfo":Landroid/view/DisplayInfo;
    :goto_245
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v39, v0

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v37, v0

    if-nez v37, :cond_685

    move-object/from16 v37, v35

    :goto_255
    move-object/from16 v0, v39

    move-object/from16 v1, v37

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->getFloatingWindowPadding(Landroid/view/WindowManagerPolicy$WindowState;)Landroid/graphics/Rect;

    move-result-object v24

    .line 3532
    .local v24, "padding":Landroid/graphics/Rect;
    move-object/from16 v0, v30

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-object v0, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-object v0, v0, Lcom/android/server/wm/StackBox;->mBounds:Landroid/graphics/Rect;

    move-object/from16 v37, v0

    invoke-virtual/range {v37 .. v37}, Landroid/graphics/Rect;->width()I

    move-result v37

    move/from16 v0, v37

    int-to-float v0, v0

    move/from16 v37, v0

    iget v0, v10, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v39, v0

    move-object/from16 v0, v24

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v40, v0

    add-int v39, v39, v40

    move-object/from16 v0, v24

    iget v0, v0, Landroid/graphics/Rect;->right:I

    move/from16 v40, v0

    add-int v39, v39, v40

    move/from16 v0, v39

    int-to-float v0, v0

    move/from16 v39, v0

    div-float v14, v37, v39

    .line 3533
    move-object/from16 v0, v30

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-object v0, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-object v0, v0, Lcom/android/server/wm/StackBox;->mBounds:Landroid/graphics/Rect;

    move-object/from16 v37, v0

    invoke-virtual/range {v37 .. v37}, Landroid/graphics/Rect;->height()I

    move-result v37

    move/from16 v0, v37

    int-to-float v0, v0

    move/from16 v37, v0

    iget v0, v10, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v39, v0

    move-object/from16 v0, v24

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v40, v0

    add-int v39, v39, v40

    move-object/from16 v0, v24

    iget v0, v0, Landroid/graphics/Rect;->bottom:I

    move/from16 v40, v0

    add-int v39, v39, v40

    move/from16 v0, v39

    int-to-float v0, v0

    move/from16 v39, v0

    div-float v33, v37, v39

    .line 3534
    move-object/from16 v0, v35

    iput v14, v0, Lcom/android/server/wm/WindowState;->mFloatingAppHScale:F

    .line 3535
    move/from16 v0, v33

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mFloatingAppVScale:F

    .line 3540
    .end local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v24    # "padding":Landroid/graphics/Rect;
    .end local v30    # "task":Lcom/android/server/wm/Task;
    :cond_2d3
    if-eqz v26, :cond_695

    if-eqz p4, :cond_695

    .line 3543
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v37, v0

    move/from16 v0, v37

    move/from16 v1, p5

    if-eq v0, v1, :cond_68d

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    move/from16 v37, v0

    move/from16 v0, v37

    int-to-float v0, v0

    move/from16 v37, v0

    move/from16 v0, p5

    int-to-float v0, v0

    move/from16 v39, v0

    div-float v37, v37, v39

    :goto_2f5
    move/from16 v0, v37

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 3545
    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v37, v0

    move/from16 v0, v37

    move/from16 v1, p6

    if-eq v0, v1, :cond_691

    move-object/from16 v0, p4

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    move/from16 v37, v0

    move/from16 v0, v37

    int-to-float v0, v0

    move/from16 v37, v0

    move/from16 v0, p6

    int-to-float v0, v0

    move/from16 v39, v0

    div-float v37, v37, v39

    :goto_319
    move/from16 v0, v37

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 3553
    :cond_31f
    :goto_31f
    if-eqz v21, :cond_33f

    .line 3554
    if-eqz v26, :cond_6b9

    .line 3555
    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    move/from16 v37, v0

    mul-float v37, v37, v14

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 3556
    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v37, v0

    mul-float v37, v37, v33

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    .line 3562
    :cond_33f
    :goto_33f
    if-nez v26, :cond_359

    .line 3563
    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    move/from16 v37, v0

    move/from16 v0, v37

    move-object/from16 v1, p15

    iput v0, v1, Landroid/graphics/PointF;->x:F

    .line 3564
    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v37, v0

    move/from16 v0, v37

    move-object/from16 v1, p15

    iput v0, v1, Landroid/graphics/PointF;->y:F

    .line 3568
    :cond_359
    const v37, 0x20008

    and-int v37, v37, v12

    if-eqz v37, :cond_6c5

    const/4 v15, 0x1

    .line 3570
    .local v15, "imMayMove":Z
    :goto_361
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    move-result v17

    .line 3571
    .local v17, "isDefaultDisplay":Z
    if-eqz v17, :cond_6c8

    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v37, v0

    move/from16 v0, v37

    move/from16 v1, p7

    if-ne v0, v1, :cond_37f

    and-int/lit8 v37, v12, 0x8

    if-nez v37, :cond_37f

    move-object/from16 v0, v35

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    move/from16 v37, v0

    if-nez v37, :cond_6c8

    :cond_37f
    const/4 v13, 0x1

    .line 3575
    .local v13, "focusMayChange":Z
    :goto_380
    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v37, v0

    move/from16 v0, v37

    move/from16 v1, p7

    if-eq v0, v1, :cond_6cb

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v37, v0

    const/high16 v39, 0x100000

    and-int v37, v37, v39

    if-eqz v37, :cond_6cb

    const/16 v34, 0x1

    .line 3577
    .local v34, "wallpaperMayMove":Z
    :goto_3a0
    const/high16 v37, 0x100000

    and-int v37, v37, v12

    if-eqz v37, :cond_6cf

    const/16 v37, 0x1

    :goto_3a8
    or-int v34, v34, v37

    .line 3579
    const/16 v37, 0x1

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mRelayoutCalled:Z

    .line 3580
    move-object/from16 v0, v35

    iget v0, v0, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    move/from16 v20, v0

    .line 3581
    .local v20, "oldVisibility":I
    move/from16 v0, p7

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mViewVisibility:I

    .line 3588
    if-nez p7, :cond_72e

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    if-eqz v37, :cond_3d6

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-boolean v0, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move/from16 v37, v0

    if-nez v37, :cond_72e

    .line 3590
    :cond_3d6
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v37

    if-nez v37, :cond_6d3

    const/16 v31, 0x1

    .line 3591
    :goto_3de
    move-object/from16 v0, v35

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    move/from16 v37, v0

    if-eqz v37, :cond_3f1

    .line 3592
    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/WindowStateAnimator;->cancelExitAnimationForNextAnimationLocked()V

    .line 3593
    const/16 v37, 0x0

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 3595
    :cond_3f1
    move-object/from16 v0, v35

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mDestroying:Z

    move/from16 v37, v0

    if-eqz v37, :cond_40e

    .line 3596
    const/16 v37, 0x0

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mDestroying:Z

    .line 3597
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDestroySurface:Ljava/util/ArrayList;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 3599
    :cond_40e
    const/16 v37, 0x8

    move/from16 v0, v20

    move/from16 v1, v37

    if-ne v0, v1, :cond_41e

    .line 3600
    const/16 v37, 0x1

    move/from16 v0, v37

    move-object/from16 v1, v36

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 3602
    :cond_41e
    if-eqz v31, :cond_45c

    .line 3603
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v37

    if-eqz v37, :cond_42f

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v37

    if-eqz v37, :cond_42f

    .line 3604
    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/WindowStateAnimator;->applyEnterAnimationLocked()V

    .line 3606
    :cond_42f
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v37, v0

    const/high16 v39, 0x200000

    and-int v37, v37, v39

    if-eqz v37, :cond_449

    .line 3610
    const/16 v37, 0x1

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mTurnOnScreen:Z

    .line 3612
    :cond_449
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isConfigChanged()Z

    move-result v37

    if-eqz v37, :cond_45c

    .line 3615
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v37, v0

    move-object/from16 v0, p13

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->setTo(Landroid/content/res/Configuration;)V

    .line 3618
    :cond_45c
    and-int/lit8 v37, v7, 0x8

    if-eqz v37, :cond_467

    .line 3620
    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V
    :try_end_463
    .catchall {:try_start_dd .. :try_end_463} :catchall_d7

    .line 3621
    const/16 v31, 0x1

    .line 3622
    const/16 v27, 0x1

    .line 3625
    :cond_467
    :try_start_467
    move-object/from16 v0, v35

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    move/from16 v37, v0

    if-nez v37, :cond_471

    .line 3626
    const/16 v27, 0x1

    .line 3628
    :cond_471
    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/WindowStateAnimator;->createSurfaceLocked()Landroid/view/SurfaceControl;

    move-result-object v28

    .line 3629
    .local v28, "surfaceControl":Landroid/view/SurfaceControl;
    if-eqz v28, :cond_6d7

    .line 3630
    move-object/from16 v0, p14

    move-object/from16 v1, v28

    invoke-virtual {v0, v1}, Landroid/view/Surface;->copyFrom(Landroid/view/SurfaceControl;)V
    :try_end_47e
    .catch Ljava/lang/Exception; {:try_start_467 .. :try_end_47e} :catch_6dc
    .catchall {:try_start_467 .. :try_end_47e} :catchall_d7

    .line 3647
    :goto_47e
    if-eqz v31, :cond_482

    .line 3648
    move/from16 v13, v17

    .line 3650
    :cond_482
    :try_start_482
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v37, v0

    const/16 v39, 0x7db

    move/from16 v0, v37

    move/from16 v1, v39

    if-ne v0, v1, :cond_4a5

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v37, v0

    if-nez v37, :cond_4a5

    .line 3652
    move-object/from16 v0, v35

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 3653
    const/4 v15, 0x1

    .line 3655
    :cond_4a5
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v37, v0

    const/16 v39, 0x1

    move/from16 v0, v37

    move/from16 v1, v39

    if-ne v0, v1, :cond_508

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    if-eqz v37, :cond_508

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v37, v0

    if-eqz v37, :cond_508

    .line 3661
    const v18, 0x480001

    .line 3665
    .local v18, "mask":I
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v25, v0

    .line 3666
    .local v25, "sa":Landroid/view/WindowManager$LayoutParams;
    move-object/from16 v0, v25

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v37, v0

    const v39, -0x480002

    and-int v37, v37, v39

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v39, v0

    move-object/from16 v0, v39

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    move/from16 v39, v0

    const v40, 0x480001

    and-int v39, v39, v40

    or-int v37, v37, v39

    move/from16 v0, v37

    move-object/from16 v1, v25

    iput v0, v1, Landroid/view/WindowManager$LayoutParams;->flags:I

    .line 3716
    .end local v18    # "mask":I
    .end local v25    # "sa":Landroid/view/WindowManager$LayoutParams;
    .end local v28    # "surfaceControl":Landroid/view/SurfaceControl;
    :cond_508
    :goto_508
    const/4 v6, 0x0

    .line 3717
    .local v6, "assignLayers":Z
    const/16 v37, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v37

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->moveMultiWindowCenterBar(Z)Z

    move-result v37

    if-eqz v37, :cond_516

    .line 3718
    const/4 v6, 0x1

    .line 3722
    :cond_516
    if-eqz v13, :cond_529

    .line 3724
    const/16 v37, 0x3

    const/16 v39, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v37

    move/from16 v2, v39

    invoke-direct {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    move-result v37

    if-eqz v37, :cond_529

    .line 3726
    const/4 v15, 0x0

    .line 3733
    :cond_529
    if-eqz v15, :cond_544

    const/16 v37, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v37

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->moveInputMethodWindowsIfNeededLocked(Z)Z

    move-result v37

    if-nez v37, :cond_539

    if-eqz v31, :cond_544

    .line 3739
    :cond_539
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v37

    move-object/from16 v0, p0

    move-object/from16 v1, v37

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 3742
    :cond_544
    if-eqz v34, :cond_558

    .line 3743
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v37

    move-object/from16 v0, v37

    iget v0, v0, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    move/from16 v39, v0

    or-int/lit8 v39, v39, 0x4

    move/from16 v0, v39

    move-object/from16 v1, v37

    iput v0, v1, Lcom/android/server/wm/DisplayContent;->pendingLayoutChanges:I

    .line 3747
    :cond_558
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    move-object/from16 v37, v0

    const/16 v39, 0x1

    move/from16 v0, v39

    move-object/from16 v1, v37

    iput-boolean v0, v1, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3748
    and-int/lit8 v37, p8, 0x1

    if-eqz v37, :cond_7f0

    const/16 v37, 0x1

    :goto_56c
    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 3750
    if-eqz v6, :cond_57f

    .line 3751
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v37

    move-object/from16 v0, p0

    move-object/from16 v1, v37

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->assignLayersLocked(Lcom/android/server/wm/WindowList;)V

    .line 3754
    :cond_57f
    const/16 v37, 0x0

    move-object/from16 v0, p0

    move/from16 v1, v37

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v8

    .line 3755
    .local v8, "configChanged":Z
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 3756
    if-eqz v31, :cond_5b1

    move-object/from16 v0, v35

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    move/from16 v37, v0

    if-eqz v37, :cond_5b1

    .line 3757
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayInfoLocked()Landroid/view/DisplayInfo;

    move-result-object v10

    .line 3758
    .restart local v10    # "displayInfo":Landroid/view/DisplayInfo;
    iget v0, v10, Landroid/view/DisplayInfo;->logicalWidth:I

    move/from16 v37, v0

    iget v0, v10, Landroid/view/DisplayInfo;->logicalHeight:I

    move/from16 v39, v0

    const/16 v40, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v35

    move/from16 v2, v37

    move/from16 v3, v39

    move/from16 v4, v40

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    .line 3761
    .end local v10    # "displayInfo":Landroid/view/DisplayInfo;
    :cond_5b1
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    if-eqz v37, :cond_5c2

    .line 3762
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v37, v0

    invoke-virtual/range {v37 .. v37}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 3764
    :cond_5c2
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mCompatFrame:Landroid/graphics/Rect;

    move-object/from16 v37, v0

    move-object/from16 v0, p9

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3765
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mOverscanInsets:Landroid/graphics/Rect;

    move-object/from16 v37, v0

    move-object/from16 v0, p10

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3766
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    move-object/from16 v37, v0

    move-object/from16 v0, p11

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3767
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mVisibleInsets:Landroid/graphics/Rect;

    move-object/from16 v37, v0

    move-object/from16 v0, p12

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3779
    move-object/from16 v0, p0

    iget-boolean v0, v0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    move/from16 v16, v0

    .line 3780
    .local v16, "inTouchMode":Z
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget-boolean v0, v0, Lcom/android/server/wm/WindowAnimator;->mAnimating:Z

    move/from16 v37, v0

    if-eqz v37, :cond_7f4

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v37, v0

    invoke-virtual/range {v37 .. v37}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v37

    if-eqz v37, :cond_7f4

    const/4 v5, 0x1

    .line 3781
    .local v5, "animating":Z
    :goto_617
    if-eqz v5, :cond_636

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRelayoutWhileAnimating:Ljava/util/ArrayList;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v37

    if-nez v37, :cond_636

    .line 3782
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mRelayoutWhileAnimating:Ljava/util/ArrayList;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3785
    :cond_636
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v37, v0

    const/16 v39, 0x1

    move-object/from16 v0, v37

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 3790
    monitor-exit v38
    :try_end_646
    .catchall {:try_start_482 .. :try_end_646} :catchall_d7

    .line 3792
    if-eqz v8, :cond_64b

    .line 3793
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    .line 3796
    :cond_64b
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3798
    if-eqz v16, :cond_7f7

    const/16 v37, 0x1

    move/from16 v38, v37

    :goto_654
    if-eqz v31, :cond_7fd

    const/16 v37, 0x2

    :goto_658
    or-int v38, v38, v37

    if-eqz v27, :cond_801

    const/16 v37, 0x4

    :goto_65e
    or-int v38, v38, v37

    if-eqz v5, :cond_805

    const/16 v37, 0x8

    :goto_664
    or-int v37, v37, v38

    goto/16 :goto_4d

    .line 3496
    .end local v5    # "animating":Z
    .end local v6    # "assignLayers":Z
    .end local v8    # "configChanged":Z
    .end local v13    # "focusMayChange":Z
    .end local v14    # "hScale":F
    .end local v15    # "imMayMove":Z
    .end local v16    # "inTouchMode":Z
    .end local v17    # "isDefaultDisplay":Z
    .end local v19    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v20    # "oldVisibility":I
    .end local v21    # "optionScale":Z
    .end local v26    # "scaledWindow":Z
    .end local v33    # "vScale":F
    .end local v34    # "wallpaperMayMove":Z
    :cond_668
    const/16 v37, 0x0

    goto/16 :goto_127

    .line 3503
    :cond_66c
    const/16 v26, 0x0

    goto/16 :goto_155

    .line 3509
    .restart local v19    # "multiWindowStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .restart local v26    # "scaledWindow":Z
    :cond_670
    const/16 v21, 0x0

    goto/16 :goto_173

    .line 3512
    .restart local v21    # "optionScale":Z
    :cond_674
    const/16 v21, 0x0

    goto/16 :goto_195

    .line 3520
    .restart local v14    # "hScale":F
    .restart local v33    # "vScale":F
    :cond_678
    const/16 v30, 0x0

    goto/16 :goto_1d3

    .line 3521
    .restart local v30    # "task":Lcom/android/server/wm/Task;
    :cond_67c
    const/4 v9, 0x0

    goto/16 :goto_1e7

    .line 3529
    .restart local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_67f
    :try_start_67f
    invoke-virtual {v9}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v10

    .restart local v10    # "displayInfo":Landroid/view/DisplayInfo;
    goto/16 :goto_245

    .line 3531
    :cond_685
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v37, v0

    goto/16 :goto_255

    .line 3543
    .end local v9    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v10    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v30    # "task":Lcom/android/server/wm/Task;
    :cond_68d
    const/high16 v37, 0x3f800000

    goto/16 :goto_2f5

    .line 3545
    :cond_691
    const/high16 v37, 0x3f800000

    goto/16 :goto_319

    .line 3547
    :cond_695
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v37, v0

    const/16 v39, 0x7d5

    move/from16 v0, v37

    move/from16 v1, v39

    if-eq v0, v1, :cond_31f

    .line 3548
    const/high16 v37, 0x3f800000

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mHScale:F

    goto/16 :goto_31f

    .line 3558
    :cond_6b9
    move-object/from16 v0, v35

    iput v14, v0, Lcom/android/server/wm/WindowState;->mHScale:F

    .line 3559
    move/from16 v0, v33

    move-object/from16 v1, v35

    iput v0, v1, Lcom/android/server/wm/WindowState;->mVScale:F
    :try_end_6c3
    .catchall {:try_start_67f .. :try_end_6c3} :catchall_d7

    goto/16 :goto_33f

    .line 3568
    :cond_6c5
    const/4 v15, 0x0

    goto/16 :goto_361

    .line 3571
    .restart local v15    # "imMayMove":Z
    .restart local v17    # "isDefaultDisplay":Z
    :cond_6c8
    const/4 v13, 0x0

    goto/16 :goto_380

    .line 3575
    .restart local v13    # "focusMayChange":Z
    :cond_6cb
    const/16 v34, 0x0

    goto/16 :goto_3a0

    .line 3577
    .restart local v34    # "wallpaperMayMove":Z
    :cond_6cf
    const/16 v37, 0x0

    goto/16 :goto_3a8

    .line 3590
    .restart local v20    # "oldVisibility":I
    :cond_6d3
    const/16 v31, 0x0

    goto/16 :goto_3de

    .line 3636
    .restart local v28    # "surfaceControl":Landroid/view/SurfaceControl;
    :cond_6d7
    :try_start_6d7
    invoke-virtual/range {p14 .. p14}, Landroid/view/Surface;->release()V
    :try_end_6da
    .catch Ljava/lang/Exception; {:try_start_6d7 .. :try_end_6da} :catch_6dc
    .catchall {:try_start_6d7 .. :try_end_6da} :catchall_d7

    goto/16 :goto_47e

    .line 3638
    .end local v28    # "surfaceControl":Landroid/view/SurfaceControl;
    :catch_6dc
    move-exception v11

    .line 3639
    .local v11, "e":Ljava/lang/Exception;
    :try_start_6dd
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    move-object/from16 v37, v0

    const/16 v39, 0x1

    move-object/from16 v0, v37

    move/from16 v1, v39

    invoke-virtual {v0, v1}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 3641
    const-string v37, "WindowManager"

    new-instance v39, Ljava/lang/StringBuilder;

    invoke-direct/range {v39 .. v39}, Ljava/lang/StringBuilder;-><init>()V

    const-string v40, "Exception thrown when creating surface for client "

    invoke-virtual/range {v39 .. v40}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v39

    move-object/from16 v0, v39

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v39

    const-string v40, " ("

    invoke-virtual/range {v39 .. v40}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v39

    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v40, v0

    invoke-virtual/range {v40 .. v40}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v40

    invoke-virtual/range {v39 .. v40}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v39

    const-string v40, ")"

    invoke-virtual/range {v39 .. v40}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v39

    invoke-virtual/range {v39 .. v39}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v39

    move-object/from16 v0, v37

    move-object/from16 v1, v39

    invoke-static {v0, v1, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 3644
    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3645
    const/16 v37, 0x0

    monitor-exit v38

    goto/16 :goto_4d

    .line 3669
    .end local v11    # "e":Ljava/lang/Exception;
    :cond_72e
    const/16 v37, 0x0

    move/from16 v0, v37

    move-object/from16 v1, v36

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mEnterAnimationPending:Z

    .line 3670
    move-object/from16 v0, v36

    iget-object v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceControl:Landroid/view/SurfaceControl;

    move-object/from16 v37, v0

    if-eqz v37, :cond_79b

    .line 3675
    move-object/from16 v0, v35

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mExiting:Z

    move/from16 v37, v0

    if-nez v37, :cond_79b

    .line 3676
    const/16 v27, 0x1

    .line 3679
    const/16 v32, 0x2

    .line 3680
    .local v32, "transit":I
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    move/from16 v37, v0

    const/16 v39, 0x3

    move/from16 v0, v37

    move/from16 v1, v39

    if-ne v0, v1, :cond_760

    .line 3681
    const/16 v32, 0x5

    .line 3683
    :cond_760
    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    move-result v37

    if-eqz v37, :cond_7a0

    const/16 v37, 0x0

    move-object/from16 v0, v36

    move/from16 v1, v32

    move/from16 v2, v37

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    move-result v37

    if-eqz v37, :cond_7a0

    .line 3685
    move/from16 v13, v17

    .line 3686
    const/16 v37, 0x1

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 3704
    :goto_77e
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    move-object/from16 v37, v0

    if-eqz v37, :cond_79b

    invoke-virtual/range {v35 .. v35}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v37

    if-nez v37, :cond_79b

    .line 3706
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    move-object/from16 v1, v35

    move/from16 v2, v32

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/DisplayMagnifier;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 3711
    .end local v32    # "transit":I
    :cond_79b
    invoke-virtual/range {p14 .. p14}, Landroid/view/Surface;->release()V

    goto/16 :goto_508

    .line 3687
    .restart local v32    # "transit":I
    :cond_7a0
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v37, v0

    invoke-virtual/range {v37 .. v37}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v37

    if-eqz v37, :cond_7b5

    .line 3690
    const/16 v37, 0x1

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    goto :goto_77e

    .line 3691
    :cond_7b5
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v37, v0

    move-object/from16 v0, v35

    move-object/from16 v1, v37

    if-ne v0, v1, :cond_7d8

    .line 3695
    const/16 v37, 0x1

    move/from16 v0, v37

    move-object/from16 v1, v35

    iput-boolean v0, v1, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 3696
    move-object/from16 v0, v35

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v37, v0

    const/16 v39, 0x1

    move/from16 v0, v39

    move-object/from16 v1, v37

    iput-boolean v0, v1, Lcom/android/server/wm/WindowStateAnimator;->mAnimating:Z

    goto :goto_77e

    .line 3698
    :cond_7d8
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    move-object/from16 v37, v0

    move-object/from16 v0, v37

    move-object/from16 v1, v35

    if-ne v0, v1, :cond_7ec

    .line 3699
    const/16 v37, 0x0

    move-object/from16 v0, v37

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 3701
    :cond_7ec
    invoke-virtual/range {v36 .. v36}, Lcom/android/server/wm/WindowStateAnimator;->destroySurfaceLocked()V
    :try_end_7ef
    .catchall {:try_start_6dd .. :try_end_7ef} :catchall_d7

    goto :goto_77e

    .line 3748
    .end local v32    # "transit":I
    .restart local v6    # "assignLayers":Z
    :cond_7f0
    const/16 v37, 0x0

    goto/16 :goto_56c

    .line 3780
    .restart local v8    # "configChanged":Z
    .restart local v16    # "inTouchMode":Z
    :cond_7f4
    const/4 v5, 0x0

    goto/16 :goto_617

    .line 3798
    .restart local v5    # "animating":Z
    :cond_7f7
    const/16 v37, 0x0

    move/from16 v38, v37

    goto/16 :goto_654

    :cond_7fd
    const/16 v37, 0x0

    goto/16 :goto_658

    :cond_801
    const/16 v37, 0x0

    goto/16 :goto_65e

    :cond_805
    const/16 v37, 0x0

    goto/16 :goto_664
.end method

.method public removeAdaptiveEvent(Ljava/lang/String;)V
    .registers 3
    .param p1, "requestClass"    # Ljava/lang/String;

    .prologue
    .line 13626
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->removeAdaptiveEvent(Ljava/lang/String;)V

    .line 13627
    return-void
.end method

.method public removeAppToken(Landroid/os/IBinder;)V
    .registers 16
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 5624
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v2, "removeAppToken()"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 5626
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5629
    :cond_12
    const/4 v1, 0x0

    .line 5630
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    const/4 v11, 0x0

    .line 5631
    .local v11, "startingToken":Lcom/android/server/wm/AppWindowToken;
    const/4 v7, 0x0

    .line 5633
    .local v7, "delayed":Z
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v9

    .line 5634
    .local v9, "origId":J
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v13

    .line 5635
    :try_start_1c
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 5636
    .local v6, "basewtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v6, :cond_b7

    iget-object v1, v6, Lcom/android/server/wm/WindowToken;->appWindowToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v1, :cond_b7

    .line 5638
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x1

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZ)Z

    move-result v7

    .line 5640
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 5641
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5642
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 5643
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_97

    .line 5644
    const/4 v7, 0x1

    .line 5654
    :cond_47
    :goto_47
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    iget v2, v1, Lcom/android/server/wm/AppWindowToken;->groupId:I

    invoke-virtual {v0, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/wm/Task;

    .line 5655
    .local v12, "task":Lcom/android/server/wm/Task;
    invoke-virtual {v12}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v8

    .line 5656
    .local v8, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v7, :cond_a9

    .line 5660
    iget-object v0, v8, Lcom/android/server/wm/DisplayContent;->mExitingAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v0, v1}, Lcom/android/server/wm/AppTokenList;->add(Ljava/lang/Object;)Z

    .line 5671
    :goto_5c
    invoke-virtual {v12, v1}, Lcom/android/server/wm/Task;->removeAppToken(Lcom/android/server/wm/AppWindowToken;)Z

    move-result v0

    if-eqz v0, :cond_69

    .line 5672
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    iget v2, v1, Lcom/android/server/wm/AppWindowToken;->groupId:I

    invoke-virtual {v0, v2}, Landroid/util/SparseArray;->delete(I)V

    .line 5674
    :cond_69
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->removed:Z

    .line 5675
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v0, :cond_71

    .line 5676
    move-object v11, v1

    .line 5678
    :cond_71
    const/4 v0, 0x1

    const/4 v2, 0x1

    invoke-virtual {p0, v1, v0, v2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 5679
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-ne v0, v1, :cond_88

    .line 5681
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 5682
    const/4 v0, 0x0

    const/4 v2, 0x1

    invoke-direct {p0, v0, v2}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 5683
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    .line 5689
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "task":Lcom/android/server/wm/Task;
    :cond_88
    :goto_88
    if-nez v7, :cond_8f

    if-eqz v1, :cond_8f

    .line 5690
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 5692
    :cond_8f
    monitor-exit v13
    :try_end_90
    .catchall {:try_start_1c .. :try_end_90} :catchall_b4

    .line 5693
    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5696
    invoke-virtual {p0, v11}, Lcom/android/server/wm/WindowManagerService;->scheduleRemoveStartingWindow(Lcom/android/server/wm/AppWindowToken;)V

    .line 5697
    return-void

    .line 5645
    :cond_97
    :try_start_97
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v0}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v0

    if-eqz v0, :cond_47

    .line 5646
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5647
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToHide:Z

    .line 5648
    const/4 v7, 0x1

    goto :goto_47

    .line 5665
    .restart local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v12    # "task":Lcom/android/server/wm/Task;
    :cond_a9
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->clearAnimation()V

    .line 5666
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v2, 0x0

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    goto :goto_5c

    .line 5692
    .end local v6    # "basewtoken":Lcom/android/server/wm/WindowToken;
    .end local v8    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "task":Lcom/android/server/wm/Task;
    :catchall_b4
    move-exception v0

    monitor-exit v13
    :try_end_b6
    .catchall {:try_start_97 .. :try_end_b6} :catchall_b4

    throw v0

    .line 5686
    .restart local v6    # "basewtoken":Lcom/android/server/wm/WindowToken;
    :cond_b7
    :try_start_b7
    const-string v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Attempted to remove non-existing app token: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_cf
    .catchall {:try_start_b7 .. :try_end_cf} :catchall_b4

    goto :goto_88
.end method

.method public removeContextualEvent(Ljava/lang/String;)V
    .registers 3
    .param p1, "requestClass"    # Ljava/lang/String;

    .prologue
    .line 13614
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->removeContextualEvent(Ljava/lang/String;)V

    .line 13615
    return-void
.end method

.method removeFakeWindowLocked(Landroid/view/WindowManagerPolicy$FakeWindow;)Z
    .registers 6
    .param p1, "window"    # Landroid/view/WindowManagerPolicy$FakeWindow;

    .prologue
    const/4 v0, 0x1

    .line 12085
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 12086
    :try_start_4
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mFakeWindows:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_14

    .line 12087
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 12088
    monitor-exit v1

    .line 12090
    :goto_13
    return v0

    :cond_14
    const/4 v0, 0x0

    monitor-exit v1

    goto :goto_13

    .line 12091
    :catchall_17
    move-exception v0

    monitor-exit v1
    :try_end_19
    .catchall {:try_start_4 .. :try_end_19} :catchall_17

    throw v0
.end method

.method public removeRotationWatcher(Landroid/view/IRotationWatcher;)V
    .registers 6
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    .prologue
    .line 7693
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    .line 7694
    .local v1, "watcherBinder":Landroid/os/IBinder;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 7695
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_8
    :try_start_8
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v0, v2, :cond_28

    .line 7696
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/IRotationWatcher;

    invoke-interface {v2}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    if-ne v1, v2, :cond_25

    .line 7697
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 7698
    add-int/lit8 v0, v0, -0x1

    .line 7695
    :cond_25
    add-int/lit8 v0, v0, 0x1

    goto :goto_8

    .line 7701
    :cond_28
    monitor-exit v3

    .line 7702
    return-void

    .line 7701
    :catchall_2a
    move-exception v2

    monitor-exit v3
    :try_end_2c
    .catchall {:try_start_8 .. :try_end_2c} :catchall_2a

    throw v2
.end method

.method public removeStack(I)I
    .registers 9
    .param p1, "stackId"    # I

    .prologue
    const/4 v2, 0x1

    .line 6152
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 6153
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/TaskStack;

    .line 6154
    .local v3, "stack":Lcom/android/server/wm/TaskStack;
    if-eqz v3, :cond_38

    .line 6156
    const/4 v1, 0x0

    .line 6157
    .local v1, "nextStackBoxInfo":Landroid/app/ActivityManager$StackBoxInfo;
    iget-object v4, v3, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v4}, Lcom/android/server/wm/StackBox;->isFloatingStackBox()Z

    move-result v0

    .line 6158
    .local v0, "isFloatingStack":Z
    if-eqz v0, :cond_1d

    .line 6159
    const/4 v4, 0x1

    const/4 v6, 0x1

    invoke-virtual {p0, p1, v4, v6}, Lcom/android/server/wm/WindowManagerService;->findNextFocusableStackBoxInfo(IZZ)Landroid/app/ActivityManager$StackBoxInfo;

    move-result-object v1

    .line 6162
    :cond_1d
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v4, p1}, Landroid/util/SparseArray;->delete(I)V

    .line 6163
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->remove()I

    move-result v2

    .line 6165
    .local v2, "nextStackId":I
    if-eqz v0, :cond_2c

    if-eqz v1, :cond_2c

    .line 6166
    iget v2, v1, Landroid/app/ActivityManager$StackBoxInfo;->stackId:I

    .line 6169
    :cond_2c
    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v4

    const/4 v6, 0x1

    iput-boolean v6, v4, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 6170
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V

    .line 6171
    monitor-exit v5

    .line 6175
    .end local v0    # "isFloatingStack":Z
    .end local v1    # "nextStackBoxInfo":Landroid/app/ActivityManager$StackBoxInfo;
    .end local v2    # "nextStackId":I
    :goto_37
    return v2

    .line 6174
    :cond_38
    monitor-exit v5

    goto :goto_37

    .end local v3    # "stack":Lcom/android/server/wm/TaskStack;
    :catchall_3a
    move-exception v4

    monitor-exit v5
    :try_end_3c
    .catchall {:try_start_4 .. :try_end_3c} :catchall_3a

    throw v4
.end method

.method removeStartingWindowTimeout(Lcom/android/server/wm/AppWindowToken;)V
    .registers 4
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    .line 5700
    if-eqz p1, :cond_9

    .line 5704
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0x21

    invoke-virtual {v0, v1, p1}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(ILjava/lang/Object;)V

    .line 5706
    :cond_9
    return-void
.end method

.method public removeTask(I)V
    .registers 9
    .param p1, "taskId"    # I

    .prologue
    .line 6179
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 6180
    :try_start_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Task;

    .line 6181
    .local v1, "task":Lcom/android/server/wm/Task;
    if-nez v1, :cond_f

    .line 6183
    monitor-exit v3

    .line 6190
    :goto_e
    return-void

    .line 6185
    :cond_f
    iget-object v0, v1, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    .line 6186
    .local v0, "stack":Lcom/android/server/wm/TaskStack;
    const/16 v2, 0x791b

    const/4 v4, 0x2

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v4, v5

    const/4 v5, 0x1

    const-string v6, "removeTask"

    aput-object v6, v4, v5

    invoke-static {v2, v4}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 6187
    invoke-virtual {v0, v1}, Lcom/android/server/wm/TaskStack;->removeTask(Lcom/android/server/wm/Task;)V

    .line 6188
    invoke-virtual {v0}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const/4 v4, 0x1

    iput-boolean v4, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 6189
    monitor-exit v3

    goto :goto_e

    .end local v0    # "stack":Lcom/android/server/wm/TaskStack;
    .end local v1    # "task":Lcom/android/server/wm/Task;
    :catchall_31
    move-exception v2

    monitor-exit v3
    :try_end_33
    .catchall {:try_start_3 .. :try_end_33} :catchall_31

    throw v2
.end method

.method public removeWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;)V
    .registers 6
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;

    .prologue
    .line 2990
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 2991
    const/4 v1, 0x0

    :try_start_4
    invoke-virtual {p0, p1, p2, v1}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    .line 2992
    .local v0, "win":Lcom/android/server/wm/WindowState;
    if-nez v0, :cond_c

    .line 2993
    monitor-exit v2

    .line 2997
    :goto_b
    return-void

    .line 2995
    :cond_c
    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->removeWindowLocked(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowState;)V

    .line 2996
    monitor-exit v2

    goto :goto_b

    .end local v0    # "win":Lcom/android/server/wm/WindowState;
    :catchall_11
    move-exception v1

    monitor-exit v2
    :try_end_13
    .catchall {:try_start_4 .. :try_end_13} :catchall_11

    throw v1
.end method

.method public removeWindowChangeListener(Lcom/android/server/wm/WindowManagerService$WindowChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$WindowChangeListener;

    .prologue
    .line 8059
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8060
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowChangeListeners:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 8061
    monitor-exit v1

    .line 8062
    return-void

    .line 8061
    :catchall_a
    move-exception v0

    monitor-exit v1
    :try_end_c
    .catchall {:try_start_3 .. :try_end_c} :catchall_a

    throw v0
.end method

.method public removeWindowLocked(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowState;)V
    .registers 11
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    const/4 v5, 0x3

    const/4 v7, 0x0

    const/4 v6, 0x1

    .line 3000
    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v4, v5, :cond_e

    .line 3002
    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->removeStartingWindowTimeout(Lcom/android/server/wm/AppWindowToken;)V

    .line 3011
    :cond_e
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3013
    .local v0, "origId":J
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->disposeInputChannel()V

    .line 3025
    const/4 v3, 0x0

    .line 3030
    .local v3, "wasVisible":Z
    iget-boolean v4, p2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_7c

    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v4

    if-eqz v4, :cond_7c

    .line 3033
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->isWinVisibleLw()Z

    move-result v3

    .line 3034
    if-eqz v3, :cond_47

    .line 3036
    const/4 v2, 0x2

    .line 3037
    .local v2, "transit":I
    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v4, v4, Landroid/view/WindowManager$LayoutParams;->type:I

    if-ne v4, v5, :cond_2e

    .line 3038
    const/4 v2, 0x5

    .line 3041
    :cond_2e
    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v4, v2, v7}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    move-result v4

    if-eqz v4, :cond_38

    .line 3042
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 3045
    :cond_38
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v4, :cond_47

    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v4

    if-nez v4, :cond_47

    .line 3047
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    invoke-virtual {v4, p2, v2}, Lcom/android/server/wm/DisplayMagnifier;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 3050
    .end local v2    # "transit":I
    :cond_47
    iget-boolean v4, p2, Lcom/android/server/wm/WindowState;->mExiting:Z

    if-nez v4, :cond_53

    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v4

    if-eqz v4, :cond_7c

    :cond_53
    invoke-virtual {p2}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    move-result v4

    if-nez v4, :cond_61

    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowStateAnimator;->isDummyAnimation()Z

    move-result v4

    if-nez v4, :cond_7c

    .line 3054
    :cond_61
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mExiting:Z

    .line 3055
    iput-boolean v6, p2, Lcom/android/server/wm/WindowState;->mRemoveOnExit:Z

    .line 3056
    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    iput-boolean v6, v4, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3057
    invoke-direct {p0, v5, v7}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 3059
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 3060
    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v4, :cond_78

    .line 3061
    iget-object v4, p2, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    invoke-virtual {v4}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 3064
    :cond_78
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3077
    :goto_7b
    return-void

    .line 3069
    :cond_7c
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->removeWindowInnerLocked(Lcom/android/server/wm/Session;Lcom/android/server/wm/WindowState;)V

    .line 3072
    if-eqz v3, :cond_8e

    invoke-virtual {p0, v7}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v4

    if-eqz v4, :cond_8e

    .line 3073
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x12

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 3075
    :cond_8e
    invoke-direct {p0, v7, v6}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 3076
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_7b
.end method

.method public removeWindowToken(Landroid/os/IBinder;)V
    .registers 15
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4222
    const-string v9, "android.permission.MANAGE_APP_TOKENS"

    const-string v10, "removeWindowToken()"

    invoke-virtual {p0, v9, v10}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v9

    if-nez v9, :cond_12

    .line 4224
    new-instance v9, Ljava/lang/SecurityException;

    const-string v10, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v9, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v9

    .line 4227
    :cond_12
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v5

    .line 4228
    .local v5, "origId":J
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v10

    .line 4229
    const/4 v3, 0x0

    .line 4230
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    :try_start_1a
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v9, p1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowToken;

    .line 4231
    .local v8, "wtoken":Lcom/android/server/wm/WindowToken;
    if-eqz v8, :cond_98

    .line 4232
    const/4 v2, 0x0

    .line 4233
    .local v2, "delayed":Z
    iget-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    if-nez v9, :cond_7e

    .line 4234
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 4235
    .local v0, "N":I
    const/4 v1, 0x0

    .line 4237
    .local v1, "changed":Z
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_31
    if-ge v4, v0, :cond_6a

    .line 4238
    iget-object v9, v8, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, v4}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowState;

    .line 4239
    .local v7, "win":Lcom/android/server/wm/WindowState;
    iget-object v3, v7, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 4241
    iget-object v9, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowStateAnimator;->isAnimating()Z

    move-result v9

    if-eqz v9, :cond_46

    .line 4242
    const/4 v2, 0x1

    .line 4245
    :cond_46
    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v9

    if-eqz v9, :cond_67

    .line 4246
    iget-object v9, v7, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v11, 0x2

    const/4 v12, 0x0

    invoke-virtual {v9, v11, v12}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 4249
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v9, :cond_63

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->isDefaultDisplay()Z

    move-result v9

    if-eqz v9, :cond_63

    .line 4250
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    const/4 v11, 0x2

    invoke-virtual {v9, v7, v11}, Lcom/android/server/wm/DisplayMagnifier;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 4253
    :cond_63
    const/4 v1, 0x1

    .line 4254
    const/4 v9, 0x1

    iput-boolean v9, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 4237
    :cond_67
    add-int/lit8 v4, v4, 0x1

    goto :goto_31

    .line 4258
    .end local v7    # "win":Lcom/android/server/wm/WindowState;
    :cond_6a
    const/4 v9, 0x1

    iput-boolean v9, v8, Lcom/android/server/wm/WindowToken;->hidden:Z

    .line 4260
    if-eqz v1, :cond_77

    .line 4261
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 4262
    const/4 v9, 0x0

    const/4 v11, 0x0

    invoke-direct {p0, v9, v11}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 4266
    :cond_77
    if-eqz v2, :cond_89

    .line 4267
    iget-object v9, v3, Lcom/android/server/wm/DisplayContent;->mExitingTokens:Ljava/util/ArrayList;

    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4273
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v4    # "i":I
    :cond_7e
    :goto_7e
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v11, 0x1

    invoke-virtual {v9, v11}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 4277
    .end local v2    # "delayed":Z
    :goto_84
    monitor-exit v10
    :try_end_85
    .catchall {:try_start_1a .. :try_end_85} :catchall_95

    .line 4278
    invoke-static {v5, v6}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4279
    return-void

    .line 4268
    .restart local v0    # "N":I
    .restart local v1    # "changed":Z
    .restart local v2    # "delayed":Z
    .restart local v4    # "i":I
    :cond_89
    :try_start_89
    iget v9, v8, Lcom/android/server/wm/WindowToken;->windowType:I

    const/16 v11, 0x7dd

    if-ne v9, v11, :cond_7e

    .line 4269
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_7e

    .line 4277
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v2    # "delayed":Z
    .end local v4    # "i":I
    .end local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :catchall_95
    move-exception v9

    monitor-exit v10
    :try_end_97
    .catchall {:try_start_89 .. :try_end_97} :catchall_95

    throw v9

    .line 4275
    .restart local v8    # "wtoken":Lcom/android/server/wm/WindowToken;
    :cond_98
    :try_start_98
    const-string v9, "WindowManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Attempted to remove non-existing token: "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v9, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_b0
    .catchall {:try_start_98 .. :try_end_b0} :catchall_95

    goto :goto_84
.end method

.method public requestHideSoftInputMethodLocked(Lcom/android/server/wm/WindowState;)V
    .registers 4
    .param p1, "win"    # Lcom/android/server/wm/WindowState;

    .prologue
    .line 13589
    if-eqz p1, :cond_33

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v0, v1, :cond_33

    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v0, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v1, 0x1

    if-ne v0, v1, :cond_33

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_33

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-eqz v0, :cond_33

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    iget-object v1, p1, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    if-ne v0, v1, :cond_33

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v0

    if-eqz v0, :cond_33

    .line 13596
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    new-instance v1, Lcom/android/server/wm/WindowManagerService$9;

    invoke-direct {v1, p0}, Lcom/android/server/wm/WindowManagerService$9;-><init>(Lcom/android/server/wm/WindowManagerService;)V

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->post(Ljava/lang/Runnable;)Z

    .line 13605
    :cond_33
    return-void
.end method

.method public requestSplitPreview(ZZI)V
    .registers 37
    .param p1, "enablePreview"    # Z
    .param p2, "willbSplit"    # Z
    .param p3, "appListSize"    # I

    .prologue
    .line 13051
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v29, v0

    monitor-enter v29

    .line 13052
    const/4 v8, 0x0

    .line 13053
    .local v8, "doTraversal":Z
    :try_start_8
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v7

    .line 13054
    .local v7, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v26

    .line 13056
    .local v26, "windows":Lcom/android/server/wm/WindowList;
    sget v13, Lcom/android/server/am/MultiWindowPolicy;->sPreviewNormalAppZone:I

    .line 13057
    .local v13, "normalTaretZone":I
    if-nez v13, :cond_16

    .line 13058
    const/16 v13, 0xc

    .line 13060
    :cond_16
    new-instance v10, Landroid/graphics/Point;

    invoke-direct {v10}, Landroid/graphics/Point;-><init>()V

    .line 13061
    .local v10, "fullscreen":Landroid/graphics/Point;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v28

    move-object/from16 v0, v28

    invoke-virtual {v0, v10}, Landroid/view/Display;->getSize(Landroid/graphics/Point;)V

    .line 13063
    new-instance v6, Landroid/graphics/Point;

    iget v0, v10, Landroid/graphics/Point;->x:I

    move/from16 v28, v0

    div-int/lit8 v28, v28, 0x2

    iget v0, v10, Landroid/graphics/Point;->y:I

    move/from16 v30, v0

    div-int/lit8 v30, v30, 0x2

    move/from16 v0, v28

    move/from16 v1, v30

    invoke-direct {v6, v0, v1}, Landroid/graphics/Point;-><init>(II)V

    .line 13064
    .local v6, "centerPoint":Landroid/graphics/Point;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v28, v0

    if-eqz v28, :cond_6c

    .line 13065
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->centerX()I

    move-result v28

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    invoke-virtual/range {v30 .. v30}, Landroid/graphics/Rect;->centerY()I

    move-result v30

    move/from16 v0, v28

    move/from16 v1, v30

    invoke-virtual {v6, v0, v1}, Landroid/graphics/Point;->set(II)V

    .line 13066
    :cond_6c
    const/16 v28, 0x3

    move/from16 v0, v28

    if-ne v13, v0, :cond_2a6

    iget v0, v6, Landroid/graphics/Point;->y:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v18, v0

    .line 13067
    .local v18, "targetHeight":F
    :goto_7b
    const/16 v28, 0x3

    move/from16 v0, v28

    if-ne v13, v0, :cond_2b7

    iget v0, v6, Landroid/graphics/Point;->x:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v19, v0

    .line 13069
    .local v19, "targetWidth":F
    :goto_8a
    sput-boolean p1, Lcom/android/server/am/MultiWindowPolicy;->sPreviewScaleEnabled:Z

    .line 13072
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v28

    const/high16 v30, 0x10e0000

    move-object/from16 v0, v28

    move/from16 v1, v30

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getInteger(I)I

    move-result v9

    .line 13074
    .local v9, "duration":I
    invoke-virtual/range {v26 .. v26}, Lcom/android/server/wm/WindowList;->size()I

    move-result v28

    add-int/lit8 v11, v28, -0x1

    .local v11, "i":I
    :goto_a6
    if-ltz v11, :cond_495

    .line 13075
    move-object/from16 v0, v26

    invoke-virtual {v0, v11}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Lcom/android/server/wm/WindowState;

    .line 13076
    .local v25, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v12

    .local v12, "mwStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    const/16 v28, 0x2

    move/from16 v0, v28

    invoke-virtual {v12, v0}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->isEnabled(I)Z

    move-result v28

    if-eqz v28, :cond_2a2

    .line 13077
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mPreviewAnimation:Landroid/view/animation/Animation;

    move-object/from16 v28, v0

    if-eqz v28, :cond_d7

    .line 13078
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mPreviewAnimation:Landroid/view/animation/Animation;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Landroid/view/animation/Animation;->cancel()V

    .line 13079
    const/16 v28, 0x0

    move-object/from16 v0, v28

    move-object/from16 v1, v25

    iput-object v0, v1, Lcom/android/server/wm/WindowState;->mPreviewAnimation:Landroid/view/animation/Animation;

    .line 13082
    :cond_d7
    new-instance v5, Landroid/view/animation/AnimationSet;

    const/16 v28, 0x1

    move/from16 v0, v28

    invoke-direct {v5, v0}, Landroid/view/animation/AnimationSet;-><init>(Z)V

    .line 13083
    .local v5, "aset":Landroid/view/animation/AnimationSet;
    new-instance v28, Landroid/view/animation/DecelerateInterpolator;

    invoke-direct/range {v28 .. v28}, Landroid/view/animation/DecelerateInterpolator;-><init>()V

    move-object/from16 v0, v28

    invoke-virtual {v5, v0}, Landroid/view/animation/AnimationSet;->setInterpolator(Landroid/view/animation/Interpolator;)V

    .line 13085
    invoke-virtual {v12}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v27

    .line 13086
    .local v27, "zone":I
    if-nez v27, :cond_f2

    .line 13087
    const/16 v27, 0xc

    .line 13089
    :cond_f2
    invoke-static {}, Lcom/android/server/am/MultiWindowFacadeService;->self()Lcom/android/server/am/MultiWindowFacadeService;

    move-result-object v28

    const v30, 0x3f333333

    move-object/from16 v0, v28

    move/from16 v1, v27

    move/from16 v2, p3

    move/from16 v3, v30

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/MultiWindowFacadeService;->getPreviewRect(IIF)Landroid/graphics/Rect;

    move-result-object v14

    .line 13092
    .local v14, "previewRect":Landroid/graphics/Rect;
    const v16, 0x3f333333

    .line 13093
    .local v16, "scaleX":F
    const v17, 0x3f333333

    .line 13094
    .local v17, "scaleY":F
    invoke-virtual/range {v25 .. v25}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v28

    invoke-virtual/range {v28 .. v28}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v28

    if-nez v28, :cond_134

    .line 13097
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    move/from16 v28, v0

    const/16 v30, 0x1

    move/from16 v0, v28

    move/from16 v1, v30

    if-ne v0, v1, :cond_2c8

    .line 13098
    iget v0, v10, Landroid/graphics/Point;->y:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    div-float v17, v18, v28

    .line 13104
    :cond_134
    :goto_134
    if-eqz p1, :cond_365

    .line 13105
    new-instance v15, Landroid/view/animation/ScaleAnimation;

    const/high16 v28, 0x3f800000

    const/high16 v30, 0x3f800000

    move/from16 v0, v28

    move/from16 v1, v16

    move/from16 v2, v30

    move/from16 v3, v17

    invoke-direct {v15, v0, v1, v2, v3}, Landroid/view/animation/ScaleAnimation;-><init>(FFFF)V

    .line 13106
    .local v15, "scaleAnim":Landroid/view/animation/ScaleAnimation;
    int-to-long v0, v9

    move-wide/from16 v30, v0

    move-wide/from16 v0, v30

    invoke-virtual {v15, v0, v1}, Landroid/view/animation/ScaleAnimation;->setDuration(J)V

    .line 13107
    invoke-virtual {v5, v15}, Landroid/view/animation/AnimationSet;->addAnimation(Landroid/view/animation/Animation;)V

    .line 13109
    iget v0, v14, Landroid/graphics/Rect;->left:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v30, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDecorFrame:Landroid/graphics/Rect;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v31, v0

    sub-int v30, v30, v31

    move/from16 v0, v30

    int-to-float v0, v0

    move/from16 v30, v0

    const v31, 0x3f333333

    mul-float v30, v30, v31

    add-float v22, v28, v30

    .line 13110
    .local v22, "toTransX":F
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v28, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v30, v0

    move/from16 v0, v28

    move/from16 v1, v30

    if-eq v0, v1, :cond_1d3

    .line 13111
    invoke-virtual {v12}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v28

    if-nez v28, :cond_2d5

    .line 13112
    iget v0, v14, Landroid/graphics/Rect;->left:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    invoke-virtual {v14}, Landroid/graphics/Rect;->width()I

    move-result v30

    move/from16 v0, v30

    int-to-float v0, v0

    move/from16 v30, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v31, v0

    invoke-virtual/range {v31 .. v31}, Landroid/graphics/Rect;->width()I

    move-result v31

    move/from16 v0, v31

    int-to-float v0, v0

    move/from16 v31, v0

    const v32, 0x3f333333

    mul-float v31, v31, v32

    sub-float v30, v30, v31

    const/high16 v31, 0x40000000

    div-float v30, v30, v31

    add-float v22, v28, v30

    .line 13118
    :cond_1d3
    :goto_1d3
    iget v0, v14, Landroid/graphics/Rect;->top:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDisplayFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v30, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDecorFrame:Landroid/graphics/Rect;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v31, v0

    sub-int v30, v30, v31

    move/from16 v0, v30

    int-to-float v0, v0

    move/from16 v30, v0

    const v31, 0x3f333333

    mul-float v30, v30, v31

    add-float v23, v28, v30

    .line 13119
    .local v23, "toTransY":F
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v28, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v30, v0

    move/from16 v0, v28

    move/from16 v1, v30

    if-eq v0, v1, :cond_254

    .line 13120
    invoke-virtual {v12}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v28

    if-nez v28, :cond_31d

    .line 13121
    iget v0, v14, Landroid/graphics/Rect;->top:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    invoke-virtual {v14}, Landroid/graphics/Rect;->height()I

    move-result v30

    move/from16 v0, v30

    int-to-float v0, v0

    move/from16 v30, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v31, v0

    invoke-virtual/range {v31 .. v31}, Landroid/graphics/Rect;->height()I

    move-result v31

    move/from16 v0, v31

    int-to-float v0, v0

    move/from16 v31, v0

    const v32, 0x3f333333

    mul-float v31, v31, v32

    sub-float v30, v30, v31

    const/high16 v31, 0x40000000

    div-float v30, v30, v31

    add-float v23, v28, v30

    .line 13127
    :cond_254
    :goto_254
    new-instance v24, Landroid/view/animation/TranslateAnimation;

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v30, v0

    move/from16 v0, v30

    int-to-float v0, v0

    move/from16 v30, v0

    move-object/from16 v0, v24

    move/from16 v1, v28

    move/from16 v2, v22

    move/from16 v3, v30

    move/from16 v4, v23

    invoke-direct {v0, v1, v2, v3, v4}, Landroid/view/animation/TranslateAnimation;-><init>(FFFF)V

    .line 13128
    .local v24, "transAnim":Landroid/view/animation/TranslateAnimation;
    const/16 v28, 0x1

    move-object/from16 v0, v24

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Landroid/view/animation/TranslateAnimation;->setFillAfter(Z)V

    .line 13129
    int-to-long v0, v9

    move-wide/from16 v30, v0

    move-object/from16 v0, v24

    move-wide/from16 v1, v30

    invoke-virtual {v0, v1, v2}, Landroid/view/animation/TranslateAnimation;->setDuration(J)V

    .line 13130
    move-object/from16 v0, v24

    invoke-virtual {v5, v0}, Landroid/view/animation/AnimationSet;->addAnimation(Landroid/view/animation/Animation;)V

    .line 13168
    :goto_29d
    move-object/from16 v0, v25

    iput-object v5, v0, Lcom/android/server/wm/WindowState;->mPreviewAnimation:Landroid/view/animation/Animation;

    .line 13169
    const/4 v8, 0x1

    .line 13074
    .end local v5    # "aset":Landroid/view/animation/AnimationSet;
    .end local v14    # "previewRect":Landroid/graphics/Rect;
    .end local v15    # "scaleAnim":Landroid/view/animation/ScaleAnimation;
    .end local v16    # "scaleX":F
    .end local v17    # "scaleY":F
    .end local v22    # "toTransX":F
    .end local v23    # "toTransY":F
    .end local v24    # "transAnim":Landroid/view/animation/TranslateAnimation;
    .end local v27    # "zone":I
    :cond_2a2
    add-int/lit8 v11, v11, -0x1

    goto/16 :goto_a6

    .line 13066
    .end local v9    # "duration":I
    .end local v11    # "i":I
    .end local v12    # "mwStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v18    # "targetHeight":F
    .end local v19    # "targetWidth":F
    .end local v25    # "w":Lcom/android/server/wm/WindowState;
    :cond_2a6
    iget v0, v10, Landroid/graphics/Point;->y:I

    move/from16 v28, v0

    iget v0, v6, Landroid/graphics/Point;->y:I

    move/from16 v30, v0

    sub-int v28, v28, v30

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v18, v0

    goto/16 :goto_7b

    .line 13067
    .restart local v18    # "targetHeight":F
    :cond_2b7
    iget v0, v10, Landroid/graphics/Point;->x:I

    move/from16 v28, v0

    iget v0, v6, Landroid/graphics/Point;->x:I

    move/from16 v30, v0

    sub-int v28, v28, v30

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v19, v0

    goto/16 :goto_8a

    .line 13100
    .restart local v5    # "aset":Landroid/view/animation/AnimationSet;
    .restart local v9    # "duration":I
    .restart local v11    # "i":I
    .restart local v12    # "mwStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .restart local v14    # "previewRect":Landroid/graphics/Rect;
    .restart local v16    # "scaleX":F
    .restart local v17    # "scaleY":F
    .restart local v19    # "targetWidth":F
    .restart local v25    # "w":Lcom/android/server/wm/WindowState;
    .restart local v27    # "zone":I
    :cond_2c8
    iget v0, v10, Landroid/graphics/Point;->x:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    div-float v16, v19, v28

    goto/16 :goto_134

    .line 13114
    .restart local v15    # "scaleAnim":Landroid/view/animation/ScaleAnimation;
    .restart local v22    # "toTransX":F
    :cond_2d5
    invoke-virtual {v14}, Landroid/graphics/Rect;->width()I

    move-result v28

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v30, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v31, v0

    sub-int v30, v30, v31

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDecorFrame:Landroid/graphics/Rect;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v31, v0

    sub-int v30, v30, v31

    mul-int v28, v28, v30

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    invoke-virtual/range {v30 .. v30}, Landroid/graphics/Rect;->width()I

    move-result v30

    div-int v28, v28, v30

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    const v30, 0x3f333333

    mul-float v28, v28, v30

    add-float v22, v22, v28

    goto/16 :goto_1d3

    .line 13123
    .restart local v23    # "toTransY":F
    :cond_31d
    invoke-virtual {v14}, Landroid/graphics/Rect;->height()I

    move-result v28

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v30, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v31, v0

    sub-int v30, v30, v31

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mDecorFrame:Landroid/graphics/Rect;

    move-object/from16 v31, v0

    move-object/from16 v0, v31

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v31, v0

    sub-int v30, v30, v31

    mul-int v28, v28, v30

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContainingFrame:Landroid/graphics/Rect;

    move-object/from16 v30, v0

    invoke-virtual/range {v30 .. v30}, Landroid/graphics/Rect;->height()I

    move-result v30

    div-int v28, v28, v30

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    const v30, 0x3f333333

    mul-float v28, v28, v30

    add-float v23, v23, v28

    goto/16 :goto_254

    .line 13132
    .end local v15    # "scaleAnim":Landroid/view/animation/ScaleAnimation;
    .end local v22    # "toTransX":F
    .end local v23    # "toTransY":F
    :cond_365
    const/high16 v20, 0x3f800000

    .line 13133
    .local v20, "toScaleX":F
    const/high16 v21, 0x3f800000

    .line 13134
    .local v21, "toScaleY":F
    if-eqz p2, :cond_390

    .line 13135
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    move/from16 v28, v0

    const/16 v30, 0x1

    move/from16 v0, v28

    move/from16 v1, v30

    if-ne v0, v1, :cond_452

    .line 13136
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->height()I

    move-result v28

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    div-float v21, v18, v28

    .line 13140
    :cond_390
    :goto_390
    new-instance v15, Landroid/view/animation/ScaleAnimation;

    move/from16 v0, v16

    move/from16 v1, v20

    move/from16 v2, v17

    move/from16 v3, v21

    invoke-direct {v15, v0, v1, v2, v3}, Landroid/view/animation/ScaleAnimation;-><init>(FFFF)V

    .line 13141
    .restart local v15    # "scaleAnim":Landroid/view/animation/ScaleAnimation;
    int-to-long v0, v9

    move-wide/from16 v30, v0

    move-wide/from16 v0, v30

    invoke-virtual {v15, v0, v1}, Landroid/view/animation/ScaleAnimation;->setDuration(J)V

    .line 13142
    invoke-virtual {v5, v15}, Landroid/view/animation/AnimationSet;->addAnimation(Landroid/view/animation/Animation;)V

    .line 13144
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v22, v0

    .line 13145
    .restart local v22    # "toTransX":F
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v23, v0

    .line 13146
    .restart local v23    # "toTransY":F
    if-eqz p2, :cond_40e

    .line 13147
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Landroid/content/res/Configuration;->orientation:I

    move/from16 v28, v0

    const/16 v30, 0x1

    move/from16 v0, v28

    move/from16 v1, v30

    if-ne v0, v1, :cond_465

    .line 13148
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->height()I

    move-result v28

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    sub-float v28, v18, v28

    const/high16 v30, 0x40000000

    div-float v23, v28, v30

    .line 13149
    const/16 v28, 0x0

    cmpg-float v28, v23, v28

    if-gez v28, :cond_3fd

    .line 13150
    const/16 v23, 0x0

    .line 13151
    :cond_3fd
    const/16 v28, 0xc

    move/from16 v0, v28

    if-ne v13, v0, :cond_40e

    .line 13152
    iget v0, v6, Landroid/graphics/Point;->y:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    add-float v23, v23, v28

    .line 13161
    :cond_40e
    :goto_40e
    new-instance v24, Landroid/view/animation/TranslateAnimation;

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v28, v0

    move-object/from16 v0, v28

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceX:F

    move/from16 v28, v0

    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v30, v0

    move-object/from16 v0, v30

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceY:F

    move/from16 v30, v0

    move-object/from16 v0, v24

    move/from16 v1, v28

    move/from16 v2, v22

    move/from16 v3, v30

    move/from16 v4, v23

    invoke-direct {v0, v1, v2, v3, v4}, Landroid/view/animation/TranslateAnimation;-><init>(FFFF)V

    .line 13163
    .restart local v24    # "transAnim":Landroid/view/animation/TranslateAnimation;
    const/16 v28, 0x1

    move-object/from16 v0, v24

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Landroid/view/animation/TranslateAnimation;->setFillAfter(Z)V

    .line 13164
    int-to-long v0, v9

    move-wide/from16 v30, v0

    move-object/from16 v0, v24

    move-wide/from16 v1, v30

    invoke-virtual {v0, v1, v2}, Landroid/view/animation/TranslateAnimation;->setDuration(J)V

    .line 13165
    move-object/from16 v0, v24

    invoke-virtual {v5, v0}, Landroid/view/animation/AnimationSet;->addAnimation(Landroid/view/animation/Animation;)V

    goto/16 :goto_29d

    .line 13176
    .end local v5    # "aset":Landroid/view/animation/AnimationSet;
    .end local v6    # "centerPoint":Landroid/graphics/Point;
    .end local v7    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v9    # "duration":I
    .end local v10    # "fullscreen":Landroid/graphics/Point;
    .end local v11    # "i":I
    .end local v12    # "mwStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v13    # "normalTaretZone":I
    .end local v14    # "previewRect":Landroid/graphics/Rect;
    .end local v15    # "scaleAnim":Landroid/view/animation/ScaleAnimation;
    .end local v16    # "scaleX":F
    .end local v17    # "scaleY":F
    .end local v18    # "targetHeight":F
    .end local v19    # "targetWidth":F
    .end local v20    # "toScaleX":F
    .end local v21    # "toScaleY":F
    .end local v22    # "toTransX":F
    .end local v23    # "toTransY":F
    .end local v24    # "transAnim":Landroid/view/animation/TranslateAnimation;
    .end local v25    # "w":Lcom/android/server/wm/WindowState;
    .end local v26    # "windows":Lcom/android/server/wm/WindowList;
    .end local v27    # "zone":I
    :catchall_44f
    move-exception v28

    monitor-exit v29
    :try_end_451
    .catchall {:try_start_8 .. :try_end_451} :catchall_44f

    throw v28

    .line 13138
    .restart local v5    # "aset":Landroid/view/animation/AnimationSet;
    .restart local v6    # "centerPoint":Landroid/graphics/Point;
    .restart local v7    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v9    # "duration":I
    .restart local v10    # "fullscreen":Landroid/graphics/Point;
    .restart local v11    # "i":I
    .restart local v12    # "mwStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .restart local v13    # "normalTaretZone":I
    .restart local v14    # "previewRect":Landroid/graphics/Rect;
    .restart local v16    # "scaleX":F
    .restart local v17    # "scaleY":F
    .restart local v18    # "targetHeight":F
    .restart local v19    # "targetWidth":F
    .restart local v20    # "toScaleX":F
    .restart local v21    # "toScaleY":F
    .restart local v25    # "w":Lcom/android/server/wm/WindowState;
    .restart local v26    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v27    # "zone":I
    :cond_452
    :try_start_452
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->width()I

    move-result v28

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    div-float v20, v19, v28

    goto/16 :goto_390

    .line 13154
    .restart local v15    # "scaleAnim":Landroid/view/animation/ScaleAnimation;
    .restart local v22    # "toTransX":F
    .restart local v23    # "toTransY":F
    :cond_465
    move-object/from16 v0, v25

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mContentFrame:Landroid/graphics/Rect;

    move-object/from16 v28, v0

    invoke-virtual/range {v28 .. v28}, Landroid/graphics/Rect;->width()I

    move-result v28

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    sub-float v28, v19, v28

    const/high16 v30, 0x40000000

    div-float v22, v28, v30

    .line 13155
    const/16 v28, 0x0

    cmpg-float v28, v22, v28

    if-gez v28, :cond_482

    .line 13156
    const/16 v22, 0x0

    .line 13157
    :cond_482
    const/16 v28, 0xc

    move/from16 v0, v28

    if-ne v13, v0, :cond_40e

    .line 13158
    iget v0, v6, Landroid/graphics/Point;->x:I

    move/from16 v28, v0

    move/from16 v0, v28

    int-to-float v0, v0

    move/from16 v28, v0

    add-float v22, v22, v28

    goto/16 :goto_40e

    .line 13173
    .end local v5    # "aset":Landroid/view/animation/AnimationSet;
    .end local v12    # "mwStyle":Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .end local v14    # "previewRect":Landroid/graphics/Rect;
    .end local v15    # "scaleAnim":Landroid/view/animation/ScaleAnimation;
    .end local v16    # "scaleX":F
    .end local v17    # "scaleY":F
    .end local v20    # "toScaleX":F
    .end local v21    # "toScaleY":F
    .end local v22    # "toTransX":F
    .end local v23    # "toTransY":F
    .end local v25    # "w":Lcom/android/server/wm/WindowState;
    .end local v27    # "zone":I
    :cond_495
    if-eqz v8, :cond_49a

    .line 13174
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->requestSplitPreviewTraversal()V

    .line 13176
    :cond_49a
    monitor-exit v29
    :try_end_49b
    .catchall {:try_start_452 .. :try_end_49b} :catchall_44f

    .line 13177
    return-void
.end method

.method public requestSplitPreviewTraversal()V
    .registers 4

    .prologue
    .line 13179
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 13180
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusedStackFrame()V

    .line 13181
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    const/4 v2, 0x1

    iput-boolean v2, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 13182
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V

    .line 13183
    monitor-exit v1

    .line 13184
    return-void

    .line 13183
    :catchall_12
    move-exception v0

    monitor-exit v1
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_12

    throw v0
.end method

.method public requestSystemKeyEvent(ILandroid/content/ComponentName;Z)Z
    .registers 5
    .param p1, "keyCode"    # I
    .param p2, "componentName"    # Landroid/content/ComponentName;
    .param p3, "request"    # Z

    .prologue
    .line 13203
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->requestSystemKeyEvent(ILandroid/content/ComponentName;Z)Z

    move-result v0

    return v0
.end method

.method public requestTransientBars()V
    .registers 2

    .prologue
    .line 13259
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->requestTransientBars()V

    .line 13260
    return-void
.end method

.method public requestTraversal()V
    .registers 3

    .prologue
    .line 11427
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 11428
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V

    .line 11429
    monitor-exit v1

    .line 11430
    return-void

    .line 11429
    :catchall_8
    move-exception v0

    monitor-exit v1
    :try_end_a
    .catchall {:try_start_3 .. :try_end_a} :catchall_8

    throw v0
.end method

.method requestTraversalLocked()V
    .registers 3

    .prologue
    .line 11433
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    if-nez v0, :cond_d

    .line 11434
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mTraversalScheduled:Z

    .line 11435
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v1, 0x4

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 11437
    :cond_d
    return-void
.end method

.method public resizeStackBox(IF)V
    .registers 8
    .param p1, "stackBoxId"    # I
    .param p2, "weight"    # F

    .prologue
    .line 6222
    const v2, 0x3dcccccd

    cmpg-float v2, p2, v2

    if-ltz v2, :cond_d

    const/high16 v2, 0x3f800000

    cmpl-float v2, p2, v2

    if-lez v2, :cond_26

    .line 6223
    :cond_d
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "resizeStack: weight must be between 0.1 and 1.0, weight="

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(F)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6227
    :cond_26
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 6228
    :try_start_29
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 6229
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_30
    if-ge v0, v1, :cond_48

    .line 6230
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/wm/DisplayContent;->resizeStack(IF)Z

    move-result v2

    if-eqz v2, :cond_45

    .line 6231
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 6232
    monitor-exit v3

    return-void

    .line 6229
    :cond_45
    add-int/lit8 v0, v0, 0x1

    goto :goto_30

    .line 6235
    :cond_48
    monitor-exit v3
    :try_end_49
    .catchall {:try_start_29 .. :try_end_49} :catchall_68

    .line 6236
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "resizeStack: stackBoxId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " not found."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6235
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_68
    move-exception v2

    :try_start_69
    monitor-exit v3
    :try_end_6a
    .catchall {:try_start_69 .. :try_end_6a} :catchall_68

    throw v2
.end method

.method public resizeWeight(Landroid/graphics/Point;)V
    .registers 5
    .param p1, "point"    # Landroid/graphics/Point;

    .prologue
    .line 6325
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 6326
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->convertPointToWeight(Landroid/graphics/Point;)Ljava/util/ArrayList;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/android/server/wm/DisplayContent;->resizeWeight(Ljava/util/ArrayList;)Z

    move-result v0

    if-eqz v0, :cond_1f

    .line 6327
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    const/4 v2, 0x1

    invoke-virtual {v0, v2}, Lcom/android/server/wm/FocusedStackFrame;->setForceReDraw(Z)V

    .line 6328
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->freezeSufaceUntilResizing()V

    .line 6329
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 6330
    monitor-exit v1

    .line 6333
    :goto_1e
    return-void

    .line 6332
    :cond_1f
    monitor-exit v1

    goto :goto_1e

    :catchall_21
    move-exception v0

    monitor-exit v1
    :try_end_23
    .catchall {:try_start_3 .. :try_end_23} :catchall_21

    throw v0
.end method

.method public resumeKeyDispatching(Landroid/os/IBinder;)V
    .registers 5
    .param p1, "_token"    # Landroid/os/IBinder;

    .prologue
    .line 8519
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string v2, "resumeKeyDispatching()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_12

    .line 8521
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8524
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8525
    :try_start_15
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mTokenMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowToken;

    .line 8526
    .local v0, "token":Lcom/android/server/wm/WindowToken;
    if-eqz v0, :cond_24

    .line 8527
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/InputMonitor;->resumeDispatchingLw(Lcom/android/server/wm/WindowToken;)V

    .line 8529
    :cond_24
    monitor-exit v2

    .line 8530
    return-void

    .line 8529
    .end local v0    # "token":Lcom/android/server/wm/WindowToken;
    :catchall_26
    move-exception v1

    monitor-exit v2
    :try_end_28
    .catchall {:try_start_15 .. :try_end_28} :catchall_26

    throw v1
.end method

.method resumeRotationLocked()V
    .registers 4

    .prologue
    .line 7463
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    if-lez v1, :cond_1c

    .line 7464
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    .line 7465
    iget v1, p0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    if-nez v1, :cond_1c

    .line 7466
    const/4 v1, 0x0

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v0

    .line 7467
    .local v0, "changed":Z
    if-eqz v0, :cond_1c

    .line 7468
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x12

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 7472
    .end local v0    # "changed":Z
    :cond_1c
    return-void
.end method

.method public reverseVerticalValue()V
    .registers 3

    .prologue
    .line 6336
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 6337
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->reverseVerticalValue()V

    .line 6338
    monitor-exit v1

    .line 6339
    return-void

    .line 6338
    :catchall_c
    move-exception v0

    monitor-exit v1
    :try_end_e
    .catchall {:try_start_3 .. :try_end_e} :catchall_c

    throw v0
.end method

.method public saveANRStateLocked(Lcom/android/server/wm/AppWindowToken;Lcom/android/server/wm/WindowState;Ljava/lang/String;)V
    .registers 9
    .param p1, "appWindowToken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "windowState"    # Lcom/android/server/wm/WindowState;
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 12497
    new-instance v1, Ljava/io/StringWriter;

    invoke-direct {v1}, Ljava/io/StringWriter;-><init>()V

    .line 12498
    .local v1, "sw":Ljava/io/StringWriter;
    new-instance v0, Lcom/android/internal/util/FastPrintWriter;

    const/4 v2, 0x0

    const/16 v3, 0x400

    invoke-direct {v0, v1, v2, v3}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .line 12499
    .local v0, "pw":Ljava/io/PrintWriter;
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  ANR time: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Ljava/text/DateFormat;->getInstance()Ljava/text/DateFormat;

    move-result-object v3

    new-instance v4, Ljava/util/Date;

    invoke-direct {v4}, Ljava/util/Date;-><init>()V

    invoke-virtual {v3, v4}, Ljava/text/DateFormat;->format(Ljava/util/Date;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12500
    if-eqz p1, :cond_4a

    .line 12501
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Application at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->stringName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12503
    :cond_4a
    if-eqz p2, :cond_68

    .line 12504
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Window at fault: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v3}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12506
    :cond_68
    if-eqz p3, :cond_80

    .line 12507
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "  Reason: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12509
    :cond_80
    invoke-virtual {v0}, Ljava/io/PrintWriter;->println()V

    .line 12510
    const/4 v2, 0x1

    const/4 v3, 0x0

    invoke-virtual {p0, v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->dumpWindowsNoHeaderLocked(Ljava/io/PrintWriter;ZLjava/util/ArrayList;)V

    .line 12511
    invoke-virtual {v0}, Ljava/io/PrintWriter;->close()V

    .line 12512
    invoke-virtual {v1}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v2

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastANRState:Ljava/lang/String;

    .line 12513
    return-void
.end method

.method public saveLastInputMethodWindowForTransition()V
    .registers 6

    .prologue
    .line 12096
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 12098
    :try_start_3
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 12099
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_14

    .line 12100
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    invoke-interface {v1, v3, v4}, Landroid/view/WindowManagerPolicy;->setLastInputMethodWindowLw(Landroid/view/WindowManagerPolicy$WindowState;Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 12102
    :cond_14
    monitor-exit v2

    .line 12103
    return-void

    .line 12102
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_16
    move-exception v1

    monitor-exit v2
    :try_end_18
    .catchall {:try_start_3 .. :try_end_18} :catchall_16

    throw v1
.end method

.method scheduleAnimationLocked()V
    .registers 5

    .prologue
    const/4 v3, 0x1

    .line 11441
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    if-nez v0, :cond_11

    .line 11442
    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mAnimationScheduled:Z

    .line 11443
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mChoreographer:Landroid/view/Choreographer;

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    iget-object v1, v1, Lcom/android/server/wm/WindowAnimator;->mAnimationRunnable:Ljava/lang/Runnable;

    const/4 v2, 0x0

    invoke-virtual {v0, v3, v1, v2}, Landroid/view/Choreographer;->postCallback(ILjava/lang/Runnable;Ljava/lang/Object;)V

    .line 11446
    :cond_11
    return-void
.end method

.method scheduleRemoveStartingWindow(Lcom/android/server/wm/AppWindowToken;)V
    .registers 5
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;

    .prologue
    .line 5709
    if-eqz p1, :cond_15

    iget-object v1, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_15

    .line 5713
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->removeStartingWindowTimeout(Lcom/android/server/wm/AppWindowToken;)V

    .line 5714
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v2, 0x6

    invoke-virtual {v1, v2, p1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    .line 5715
    .local v0, "m":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    .line 5717
    .end local v0    # "m":Landroid/os/Message;
    :cond_15
    return-void
.end method

.method public screenshotApplications(Landroid/os/IBinder;IIIZ)Landroid/graphics/Bitmap;
    .registers 50
    .param p1, "appToken"    # Landroid/os/IBinder;
    .param p2, "displayId"    # I
    .param p3, "width"    # I
    .param p4, "height"    # I
    .param p5, "force565"    # Z

    .prologue
    .line 7133
    const-string v40, "android.permission.READ_FRAME_BUFFER"

    const-string v41, "screenshotApplications()"

    move-object/from16 v0, p0

    move-object/from16 v1, v40

    move-object/from16 v2, v41

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v40

    if-nez v40, :cond_18

    .line 7135
    new-instance v40, Ljava/lang/SecurityException;

    const-string v41, "Requires READ_FRAME_BUFFER permission"

    invoke-direct/range {v40 .. v41}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v40

    .line 7138
    :cond_18
    const/16 v26, 0x0

    .line 7140
    .local v26, "rawss":Landroid/graphics/Bitmap;
    const/16 v24, 0x0

    .line 7141
    .local v24, "maxLayer":I
    new-instance v15, Landroid/graphics/Rect;

    invoke-direct {v15}, Landroid/graphics/Rect;-><init>()V

    .line 7143
    .local v15, "frame":Landroid/graphics/Rect;
    const/16 v31, 0x0

    .line 7145
    .local v31, "scale":F
    const/16 v30, 0x0

    .line 7149
    .local v30, "rot":I
    if-nez p1, :cond_4d

    .line 7150
    const/16 v32, 0x1

    .line 7151
    .local v32, "screenshotReady":Z
    const/16 v25, 0x0

    .line 7157
    .local v25, "minLayer":I
    :goto_2b
    const/16 v27, 0x0

    .line 7158
    .local v27, "retryCount":I
    const/4 v4, 0x0

    .local v4, "appWin":Lcom/android/server/wm/WindowState;
    move/from16 v28, v27

    .line 7161
    .end local v27    # "retryCount":I
    .local v28, "retryCount":I
    :goto_30
    add-int/lit8 v27, v28, 0x1

    .end local v28    # "retryCount":I
    .restart local v27    # "retryCount":I
    if-lez v28, :cond_39

    .line 7163
    const-wide/16 v40, 0x64

    :try_start_36
    invoke-static/range {v40 .. v41}, Ljava/lang/Thread;->sleep(J)V
    :try_end_39
    .catch Ljava/lang/InterruptedException; {:try_start_36 .. :try_end_39} :catch_3e2

    .line 7167
    :cond_39
    :goto_39
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v41, v0

    monitor-enter v41

    .line 7168
    :try_start_40
    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v11

    .line 7169
    .local v11, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v11, :cond_53

    .line 7170
    const/4 v5, 0x0

    monitor-exit v41

    .line 7377
    :goto_4c
    return-object v5

    .line 7153
    .end local v4    # "appWin":Lcom/android/server/wm/WindowState;
    .end local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v25    # "minLayer":I
    .end local v27    # "retryCount":I
    .end local v32    # "screenshotReady":Z
    :cond_4d
    const/16 v32, 0x0

    .line 7154
    .restart local v32    # "screenshotReady":Z
    const v25, 0x7fffffff

    .restart local v25    # "minLayer":I
    goto :goto_2b

    .line 7172
    .restart local v4    # "appWin":Lcom/android/server/wm/WindowState;
    .restart local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v27    # "retryCount":I
    :cond_53
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v12

    .line 7173
    .local v12, "displayInfo":Landroid/view/DisplayInfo;
    iget v13, v12, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 7174
    .local v13, "dw":I
    iget v10, v12, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 7176
    .local v10, "dh":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v40, v0

    const/16 v42, 0x2

    move-object/from16 v0, v40

    move/from16 v1, v42

    invoke-interface {v0, v1}, Landroid/view/WindowManagerPolicy;->windowTypeToLayerLw(I)I

    move-result v40

    move/from16 v0, v40

    mul-int/lit16 v0, v0, 0x2710

    move/from16 v40, v0

    move/from16 v0, v40

    add-int/lit16 v3, v0, 0x3e8

    .line 7178
    .local v3, "aboveAppLayer":I
    add-int/lit16 v3, v3, 0x2710

    .line 7180
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v40, v0

    if-eqz v40, :cond_e8

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v40, v0

    if-eqz v40, :cond_e8

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    move-object/from16 v40, v0

    if-eqz v40, :cond_e8

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    move-object/from16 v40, v0

    invoke-interface/range {v40 .. v40}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v40

    move-object/from16 v0, v40

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_e8

    const/16 v21, 0x1

    .line 7186
    .local v21, "isImeTarget":Z
    :goto_bf
    const/16 v20, 0x0

    .line 7187
    .local v20, "including":Z
    const/4 v4, 0x0

    .line 7188
    invoke-virtual {v11}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v38

    .line 7189
    .local v38, "windows":Lcom/android/server/wm/WindowList;
    new-instance v33, Landroid/graphics/Rect;

    invoke-direct/range {v33 .. v33}, Landroid/graphics/Rect;-><init>()V

    .line 7190
    .local v33, "stackBounds":Landroid/graphics/Rect;
    invoke-virtual/range {v38 .. v38}, Lcom/android/server/wm/WindowList;->size()I

    move-result v40

    add-int/lit8 v18, v40, -0x1

    .local v18, "i":I
    :goto_d1
    if-ltz v18, :cond_215

    .line 7191
    move-object/from16 v0, v38

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Lcom/android/server/wm/WindowState;

    .line 7192
    .local v39, "ws":Lcom/android/server/wm/WindowState;
    move-object/from16 v0, v39

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    move/from16 v40, v0

    if-nez v40, :cond_eb

    .line 7190
    :cond_e5
    add-int/lit8 v18, v18, -0x1

    goto :goto_d1

    .line 7180
    .end local v18    # "i":I
    .end local v20    # "including":Z
    .end local v21    # "isImeTarget":Z
    .end local v33    # "stackBounds":Landroid/graphics/Rect;
    .end local v38    # "windows":Lcom/android/server/wm/WindowList;
    .end local v39    # "ws":Lcom/android/server/wm/WindowState;
    :cond_e8
    const/16 v21, 0x0

    goto :goto_bf

    .line 7195
    .restart local v18    # "i":I
    .restart local v20    # "including":Z
    .restart local v21    # "isImeTarget":Z
    .restart local v33    # "stackBounds":Landroid/graphics/Rect;
    .restart local v38    # "windows":Lcom/android/server/wm/WindowList;
    .restart local v39    # "ws":Lcom/android/server/wm/WindowState;
    :cond_eb
    move-object/from16 v0, v39

    iget v0, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    move/from16 v40, v0

    move/from16 v0, v40

    if-ge v0, v3, :cond_e5

    .line 7201
    if-nez v20, :cond_12a

    if-eqz p1, :cond_12a

    .line 7205
    move-object/from16 v0, v39

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    move/from16 v40, v0

    if-eqz v40, :cond_103

    if-nez v21, :cond_12a

    .line 7208
    :cond_103
    move-object/from16 v0, v39

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v40, v0

    if-eqz v40, :cond_e5

    move-object/from16 v0, v39

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_e5

    .line 7211
    move-object/from16 v4, v39

    .line 7212
    invoke-virtual/range {v39 .. v39}, Lcom/android/server/wm/WindowState;->getStackBounds()Landroid/graphics/Rect;

    move-result-object v40

    move-object/from16 v0, v33

    move-object/from16 v1, v40

    invoke-virtual {v0, v1}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 7218
    :cond_12a
    move-object/from16 v0, v39

    invoke-virtual {v0, v13, v10}, Lcom/android/server/wm/WindowState;->isFullscreen(II)Z

    move-result v16

    .line 7219
    .local v16, "fullscreen":Z
    move-object/from16 v0, v39

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mIsImWindow:Z

    move/from16 v40, v0

    if-nez v40, :cond_211

    if-nez v16, :cond_211

    const/16 v20, 0x1

    .line 7221
    :goto_13c
    move-object/from16 v0, v39

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v37, v0

    .line 7222
    .local v37, "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    move-object/from16 v0, v37

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    move/from16 v40, v0

    move/from16 v0, v24

    move/from16 v1, v40

    if-ge v0, v1, :cond_154

    .line 7223
    move-object/from16 v0, v37

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    move/from16 v24, v0

    .line 7225
    :cond_154
    move-object/from16 v0, v37

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    move/from16 v40, v0

    move/from16 v0, v25

    move/from16 v1, v40

    if-le v0, v1, :cond_166

    .line 7226
    move-object/from16 v0, v37

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    move/from16 v25, v0

    .line 7230
    :cond_166
    move-object/from16 v0, v39

    iget-boolean v0, v0, Lcom/android/server/wm/WindowState;->mIsWallpaper:Z

    move/from16 v40, v0

    if-nez v40, :cond_1b6

    .line 7231
    move-object/from16 v0, v39

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    move-object/from16 v36, v0

    .line 7232
    .local v36, "wf":Landroid/graphics/Rect;
    move-object/from16 v0, v39

    iget-object v8, v0, Lcom/android/server/wm/WindowState;->mContentInsets:Landroid/graphics/Rect;

    .line 7233
    .local v8, "cr":Landroid/graphics/Rect;
    move-object/from16 v0, v36

    iget v0, v0, Landroid/graphics/Rect;->left:I

    move/from16 v40, v0

    iget v0, v8, Landroid/graphics/Rect;->left:I

    move/from16 v42, v0

    add-int v22, v40, v42

    .line 7234
    .local v22, "left":I
    move-object/from16 v0, v36

    iget v0, v0, Landroid/graphics/Rect;->top:I

    move/from16 v40, v0

    iget v0, v8, Landroid/graphics/Rect;->top:I

    move/from16 v42, v0

    add-int v35, v40, v42

    .line 7235
    .local v35, "top":I
    move-object/from16 v0, v36

    iget v0, v0, Landroid/graphics/Rect;->right:I

    move/from16 v40, v0

    iget v0, v8, Landroid/graphics/Rect;->right:I

    move/from16 v42, v0

    sub-int v29, v40, v42

    .line 7236
    .local v29, "right":I
    move-object/from16 v0, v36

    iget v0, v0, Landroid/graphics/Rect;->bottom:I

    move/from16 v40, v0

    iget v0, v8, Landroid/graphics/Rect;->bottom:I

    move/from16 v42, v0

    sub-int v6, v40, v42

    .line 7237
    .local v6, "bottom":I
    move/from16 v0, v22

    move/from16 v1, v35

    move/from16 v2, v29

    invoke-virtual {v15, v0, v1, v2, v6}, Landroid/graphics/Rect;->union(IIII)V

    .line 7238
    move-object/from16 v0, v33

    invoke-virtual {v15, v0}, Landroid/graphics/Rect;->intersect(Landroid/graphics/Rect;)Z

    .line 7241
    .end local v6    # "bottom":I
    .end local v8    # "cr":Landroid/graphics/Rect;
    .end local v22    # "left":I
    .end local v29    # "right":I
    .end local v35    # "top":I
    .end local v36    # "wf":Landroid/graphics/Rect;
    :cond_1b6
    move-object/from16 v0, v39

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v40, v0

    if-eqz v40, :cond_1d8

    move-object/from16 v0, v39

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    move-object/from16 v1, p1

    if-ne v0, v1, :cond_1d8

    invoke-virtual/range {v39 .. v39}, Lcom/android/server/wm/WindowState;->isDisplayedLw()Z

    move-result v40

    if-eqz v40, :cond_1d8

    .line 7243
    const/16 v32, 0x1

    .line 7246
    :cond_1d8
    if-eqz v16, :cond_e5

    .line 7248
    move-object/from16 v0, v39

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    move-object/from16 v40, v0

    invoke-virtual/range {v40 .. v40}, Lcom/android/server/wm/WindowList;->iterator()Ljava/util/Iterator;

    move-result-object v19

    .local v19, "i$":Ljava/util/Iterator;
    :cond_1e4
    :goto_1e4
    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->hasNext()Z

    move-result v40

    if-eqz v40, :cond_215

    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/WindowState;

    .line 7249
    .local v9, "cw":Lcom/android/server/wm/WindowState;
    iget-boolean v0, v9, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    move/from16 v40, v0

    if-eqz v40, :cond_1e4

    .line 7252
    iget-object v0, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    move/from16 v40, v0

    move/from16 v0, v25

    move/from16 v1, v40

    if-le v0, v1, :cond_1e4

    .line 7253
    iget-object v0, v9, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v40, v0

    move-object/from16 v0, v40

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mSurfaceLayer:I

    move/from16 v25, v0

    goto :goto_1e4

    .line 7219
    .end local v9    # "cw":Lcom/android/server/wm/WindowState;
    .end local v19    # "i$":Ljava/util/Iterator;
    .end local v37    # "winAnim":Lcom/android/server/wm/WindowStateAnimator;
    :cond_211
    const/16 v20, 0x0

    goto/16 :goto_13c

    .line 7262
    .end local v16    # "fullscreen":Z
    .end local v39    # "ws":Lcom/android/server/wm/WindowState;
    :cond_215
    if-eqz p1, :cond_220

    if-nez v4, :cond_220

    .line 7266
    const/4 v5, 0x0

    monitor-exit v41

    goto/16 :goto_4c

    .line 7333
    .end local v3    # "aboveAppLayer":I
    .end local v10    # "dh":I
    .end local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v13    # "dw":I
    .end local v18    # "i":I
    .end local v20    # "including":Z
    .end local v21    # "isImeTarget":Z
    .end local v33    # "stackBounds":Landroid/graphics/Rect;
    .end local v38    # "windows":Lcom/android/server/wm/WindowList;
    :catchall_21d
    move-exception v40

    monitor-exit v41
    :try_end_21f
    .catchall {:try_start_40 .. :try_end_21f} :catchall_21d

    throw v40

    .line 7268
    .restart local v3    # "aboveAppLayer":I
    .restart local v10    # "dh":I
    .restart local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v12    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v13    # "dw":I
    .restart local v18    # "i":I
    .restart local v20    # "including":Z
    .restart local v21    # "isImeTarget":Z
    .restart local v33    # "stackBounds":Landroid/graphics/Rect;
    .restart local v38    # "windows":Lcom/android/server/wm/WindowList;
    :cond_220
    if-nez v32, :cond_2bb

    .line 7272
    :try_start_222
    monitor-exit v41
    :try_end_223
    .catchall {:try_start_222 .. :try_end_223} :catchall_21d

    .line 7334
    :goto_223
    if-nez v32, :cond_22d

    const/16 v40, 0x3

    move/from16 v0, v27

    move/from16 v1, v40

    if-le v0, v1, :cond_3e5

    .line 7335
    :cond_22d
    const/16 v40, 0x3

    move/from16 v0, v27

    move/from16 v1, v40

    if-le v0, v1, :cond_281

    const-string v41, "WindowManager"

    new-instance v40, Ljava/lang/StringBuilder;

    invoke-direct/range {v40 .. v40}, Ljava/lang/StringBuilder;-><init>()V

    const-string v42, "Screenshot max retries "

    move-object/from16 v0, v40

    move-object/from16 v1, v42

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v40

    move-object/from16 v0, v40

    move/from16 v1, v27

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v40

    const-string v42, " of "

    move-object/from16 v0, v40

    move-object/from16 v1, v42

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v40

    move-object/from16 v0, v40

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v40

    const-string v42, " appWin="

    move-object/from16 v0, v40

    move-object/from16 v1, v42

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v42

    if-nez v4, :cond_341

    const-string v40, "null"

    :goto_26e
    move-object/from16 v0, v42

    move-object/from16 v1, v40

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v40

    invoke-virtual/range {v40 .. v40}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v40

    move-object/from16 v0, v41

    move-object/from16 v1, v40

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 7339
    :cond_281
    if-nez v26, :cond_36e

    .line 7340
    const-string v40, "WindowManager"

    new-instance v41, Ljava/lang/StringBuilder;

    invoke-direct/range {v41 .. v41}, Ljava/lang/StringBuilder;-><init>()V

    const-string v42, "Screenshot failure taking screenshot for ("

    invoke-virtual/range {v41 .. v42}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v41

    move-object/from16 v0, v41

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v41

    const-string/jumbo v42, "x"

    invoke-virtual/range {v41 .. v42}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v41

    move-object/from16 v0, v41

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v41

    const-string v42, ") to layer "

    invoke-virtual/range {v41 .. v42}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v41

    move-object/from16 v0, v41

    move/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v41

    invoke-virtual/range {v41 .. v41}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v41

    invoke-static/range {v40 .. v41}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7342
    const/4 v5, 0x0

    goto/16 :goto_4c

    .line 7276
    :cond_2bb
    const/16 v40, 0x0

    const/16 v42, 0x0

    :try_start_2bf
    move/from16 v0, v40

    move/from16 v1, v42

    invoke-virtual {v15, v0, v1, v13, v10}, Landroid/graphics/Rect;->intersect(IIII)Z

    .line 7278
    invoke-virtual {v15}, Landroid/graphics/Rect;->isEmpty()Z

    move-result v40

    if-nez v40, :cond_2ce

    if-nez v24, :cond_2d2

    .line 7282
    :cond_2ce
    const/4 v5, 0x0

    monitor-exit v41

    goto/16 :goto_4c

    .line 7286
    :cond_2d2
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v40

    invoke-virtual/range {v40 .. v40}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v40

    invoke-virtual/range {v40 .. v40}, Landroid/view/Display;->getRotation()I

    move-result v30

    .line 7287
    invoke-virtual {v15}, Landroid/graphics/Rect;->width()I

    move-result v17

    .line 7288
    .local v17, "fw":I
    invoke-virtual {v15}, Landroid/graphics/Rect;->height()I

    move-result v14

    .line 7292
    .local v14, "fh":I
    move/from16 v0, p3

    int-to-float v0, v0

    move/from16 v40, v0

    move/from16 v0, v17

    int-to-float v0, v0

    move/from16 v42, v0

    div-float v40, v40, v42

    move/from16 v0, p4

    int-to-float v0, v0

    move/from16 v42, v0

    int-to-float v0, v14

    move/from16 v43, v0

    div-float v42, v42, v43

    move/from16 v0, v40

    move/from16 v1, v42

    invoke-static {v0, v1}, Ljava/lang/Math;->max(FF)F

    move-result v31

    .line 7314
    int-to-float v0, v13

    move/from16 v40, v0

    mul-float v40, v40, v31

    move/from16 v0, v40

    float-to-int v13, v0

    .line 7315
    int-to-float v0, v10

    move/from16 v40, v0

    mul-float v40, v40, v31

    move/from16 v0, v40

    float-to-int v10, v0

    .line 7316
    const/16 v40, 0x1

    move/from16 v0, v30

    move/from16 v1, v40

    if-eq v0, v1, :cond_324

    const/16 v40, 0x3

    move/from16 v0, v30

    move/from16 v1, v40

    if-ne v0, v1, :cond_333

    .line 7317
    :cond_324
    move/from16 v34, v13

    .line 7318
    .local v34, "tmp":I
    move v13, v10

    .line 7319
    move/from16 v10, v34

    .line 7320
    const/16 v40, 0x1

    move/from16 v0, v30

    move/from16 v1, v40

    if-ne v0, v1, :cond_33e

    const/16 v30, 0x3

    .line 7332
    .end local v34    # "tmp":I
    :cond_333
    :goto_333
    move/from16 v0, v25

    move/from16 v1, v24

    invoke-static {v13, v10, v0, v1}, Landroid/view/SurfaceControl;->screenshot(IIII)Landroid/graphics/Bitmap;

    move-result-object v26

    .line 7333
    monitor-exit v41
    :try_end_33c
    .catchall {:try_start_2bf .. :try_end_33c} :catchall_21d

    goto/16 :goto_223

    .line 7320
    .restart local v34    # "tmp":I
    :cond_33e
    const/16 v30, 0x1

    goto :goto_333

    .line 7335
    .end local v14    # "fh":I
    .end local v17    # "fw":I
    .end local v34    # "tmp":I
    :cond_341
    new-instance v40, Ljava/lang/StringBuilder;

    invoke-direct/range {v40 .. v40}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v40

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v40

    const-string v43, " drawState="

    move-object/from16 v0, v40

    move-object/from16 v1, v43

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v40

    iget-object v0, v4, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v43, v0

    move-object/from16 v0, v43

    iget v0, v0, Lcom/android/server/wm/WindowStateAnimator;->mDrawState:I

    move/from16 v43, v0

    move-object/from16 v0, v40

    move/from16 v1, v43

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v40

    invoke-virtual/range {v40 .. v40}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v40

    goto/16 :goto_26e

    .line 7345
    :cond_36e
    if-eqz p5, :cond_3dd

    sget-object v40, Landroid/graphics/Bitmap$Config;->RGB_565:Landroid/graphics/Bitmap$Config;

    :goto_372
    move/from16 v0, p3

    move/from16 v1, p4

    move-object/from16 v2, v40

    invoke-static {v0, v1, v2}, Landroid/graphics/Bitmap;->createBitmap(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;

    move-result-object v5

    .line 7346
    .local v5, "bm":Landroid/graphics/Bitmap;
    move/from16 v0, v31

    invoke-virtual {v15, v0}, Landroid/graphics/Rect;->scale(F)V

    .line 7347
    new-instance v23, Landroid/graphics/Matrix;

    invoke-direct/range {v23 .. v23}, Landroid/graphics/Matrix;-><init>()V

    .line 7348
    .local v23, "matrix":Landroid/graphics/Matrix;
    move/from16 v0, v30

    move-object/from16 v1, v23

    invoke-static {v0, v13, v10, v1}, Lcom/android/server/wm/ScreenRotationAnimation;->createRotationMatrix(IIILandroid/graphics/Matrix;)V

    .line 7350
    iget v0, v15, Landroid/graphics/Rect;->left:I

    move/from16 v40, v0

    move/from16 v0, v40

    int-to-float v0, v0

    move/from16 v40, v0

    invoke-static/range {v40 .. v40}, Landroid/util/FloatMath;->ceil(F)F

    move-result v40

    move/from16 v0, v40

    neg-float v0, v0

    move/from16 v40, v0

    iget v0, v15, Landroid/graphics/Rect;->top:I

    move/from16 v41, v0

    move/from16 v0, v41

    int-to-float v0, v0

    move/from16 v41, v0

    invoke-static/range {v41 .. v41}, Landroid/util/FloatMath;->ceil(F)F

    move-result v41

    move/from16 v0, v41

    neg-float v0, v0

    move/from16 v41, v0

    move-object/from16 v0, v23

    move/from16 v1, v40

    move/from16 v2, v41

    invoke-virtual {v0, v1, v2}, Landroid/graphics/Matrix;->postTranslate(FF)Z

    .line 7351
    new-instance v7, Landroid/graphics/Canvas;

    invoke-direct {v7, v5}, Landroid/graphics/Canvas;-><init>(Landroid/graphics/Bitmap;)V

    .line 7352
    .local v7, "canvas":Landroid/graphics/Canvas;
    const/high16 v40, -0x1000000

    move/from16 v0, v40

    invoke-virtual {v7, v0}, Landroid/graphics/Canvas;->drawColor(I)V

    .line 7353
    const/16 v40, 0x0

    move-object/from16 v0, v26

    move-object/from16 v1, v23

    move-object/from16 v2, v40

    invoke-virtual {v7, v0, v1, v2}, Landroid/graphics/Canvas;->drawBitmap(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V

    .line 7354
    const/16 v40, 0x0

    move-object/from16 v0, v40

    invoke-virtual {v7, v0}, Landroid/graphics/Canvas;->setBitmap(Landroid/graphics/Bitmap;)V

    .line 7376
    invoke-virtual/range {v26 .. v26}, Landroid/graphics/Bitmap;->recycle()V

    goto/16 :goto_4c

    .line 7345
    .end local v5    # "bm":Landroid/graphics/Bitmap;
    .end local v7    # "canvas":Landroid/graphics/Canvas;
    .end local v23    # "matrix":Landroid/graphics/Matrix;
    :cond_3dd
    invoke-virtual/range {v26 .. v26}, Landroid/graphics/Bitmap;->getConfig()Landroid/graphics/Bitmap$Config;

    move-result-object v40

    goto :goto_372

    .line 7164
    .end local v3    # "aboveAppLayer":I
    .end local v10    # "dh":I
    .end local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v12    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v13    # "dw":I
    .end local v18    # "i":I
    .end local v20    # "including":Z
    .end local v21    # "isImeTarget":Z
    .end local v33    # "stackBounds":Landroid/graphics/Rect;
    .end local v38    # "windows":Lcom/android/server/wm/WindowList;
    :catch_3e2
    move-exception v40

    goto/16 :goto_39

    .restart local v3    # "aboveAppLayer":I
    .restart local v10    # "dh":I
    .restart local v11    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v12    # "displayInfo":Landroid/view/DisplayInfo;
    .restart local v13    # "dw":I
    .restart local v18    # "i":I
    .restart local v20    # "including":Z
    .restart local v21    # "isImeTarget":Z
    .restart local v33    # "stackBounds":Landroid/graphics/Rect;
    .restart local v38    # "windows":Lcom/android/server/wm/WindowList;
    :cond_3e5
    move/from16 v28, v27

    .end local v27    # "retryCount":I
    .restart local v28    # "retryCount":I
    goto/16 :goto_30
.end method

.method sendNewConfiguration()V
    .registers 3

    .prologue
    .line 8123
    :try_start_0
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mActivityManager:Landroid/app/IActivityManager;

    const/4 v1, 0x0

    invoke-interface {v0, v1}, Landroid/app/IActivityManager;->updateConfiguration(Landroid/content/res/Configuration;)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_6} :catch_7

    .line 8126
    :goto_6
    return-void

    .line 8124
    :catch_7
    move-exception v0

    goto :goto_6
.end method

.method public sendWindowWallpaperCommandLocked(Lcom/android/server/wm/WindowState;Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;
    .registers 20
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "action"    # Ljava/lang/String;
    .param p3, "x"    # I
    .param p4, "y"    # I
    .param p5, "z"    # I
    .param p6, "extras"    # Landroid/os/Bundle;
    .param p7, "sync"    # Z

    .prologue
    .line 3356
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eq p1, v0, :cond_c

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLowerWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-eq p1, v0, :cond_c

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mUpperWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-ne p1, v0, :cond_46

    .line 3358
    :cond_c
    move/from16 v9, p7

    .line 3359
    .local v9, "doWait":Z
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v7

    .line 3360
    .local v7, "curTokenIndex":I
    :cond_14
    if-lez v7, :cond_44

    .line 3361
    add-int/lit8 v7, v7, -0x1

    .line 3362
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/WindowToken;

    .line 3363
    .local v10, "token":Lcom/android/server/wm/WindowToken;
    iget-object v0, v10, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowList;->size()I

    move-result v8

    .line 3364
    .local v8, "curWallpaperIndex":I
    :goto_26
    if-lez v8, :cond_14

    .line 3365
    add-int/lit8 v8, v8, -0x1

    .line 3366
    iget-object v0, v10, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v0, v8}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/wm/WindowState;

    .line 3368
    .local v11, "wallpaper":Lcom/android/server/wm/WindowState;
    :try_start_32
    iget-object v0, v11, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object v1, p2

    move v2, p3

    move/from16 v3, p4

    move/from16 v4, p5

    move-object/from16 v5, p6

    move/from16 v6, p7

    invoke-interface/range {v0 .. v6}, Landroid/view/IWindow;->dispatchWallpaperCommand(Ljava/lang/String;IIILandroid/os/Bundle;Z)V
    :try_end_41
    .catch Landroid/os/RemoteException; {:try_start_32 .. :try_end_41} :catch_48

    .line 3371
    const/16 p7, 0x0

    goto :goto_26

    .line 3377
    .end local v8    # "curWallpaperIndex":I
    .end local v10    # "token":Lcom/android/server/wm/WindowToken;
    .end local v11    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_44
    if-eqz v9, :cond_46

    .line 3382
    .end local v7    # "curTokenIndex":I
    .end local v9    # "doWait":Z
    :cond_46
    const/4 v0, 0x0

    return-object v0

    .line 3372
    .restart local v7    # "curTokenIndex":I
    .restart local v8    # "curWallpaperIndex":I
    .restart local v9    # "doWait":Z
    .restart local v10    # "token":Lcom/android/server/wm/WindowToken;
    .restart local v11    # "wallpaper":Lcom/android/server/wm/WindowState;
    :catch_48
    move-exception v0

    goto :goto_26
.end method

.method public setAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V
    .registers 5
    .param p1, "requestClass"    # Ljava/lang/String;
    .param p2, "smallView"    # Landroid/widget/RemoteViews;
    .param p3, "bigView"    # Landroid/widget/RemoteViews;

    .prologue
    .line 13622
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->setAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V

    .line 13623
    return-void
.end method

.method public setAnimationScale(IF)V
    .registers 5
    .param p1, "which"    # I
    .param p2, "scale"    # F

    .prologue
    .line 6557
    const-string v0, "android.permission.SET_ANIMATION_SCALE"

    const-string v1, "setAnimationScale()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 6559
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6562
    :cond_12
    invoke-static {p2}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result p2

    .line 6563
    packed-switch p1, :pswitch_data_2a

    .line 6570
    :goto_19
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 6571
    return-void

    .line 6564
    :pswitch_21
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScale:F

    goto :goto_19

    .line 6565
    :pswitch_24
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    goto :goto_19

    .line 6566
    :pswitch_27
    iput p2, p0, Lcom/android/server/wm/WindowManagerService;->mAnimatorDurationScale:F

    goto :goto_19

    .line 6563
    :pswitch_data_2a
    .packed-switch 0x0
        :pswitch_21
        :pswitch_24
        :pswitch_27
    .end packed-switch
.end method

.method public setAnimationScales([F)V
    .registers 6
    .param p1, "scales"    # [F

    .prologue
    const/4 v3, 0x2

    const/4 v2, 0x1

    .line 6575
    const-string v0, "android.permission.SET_ANIMATION_SCALE"

    const-string v1, "setAnimationScale()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_14

    .line 6577
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires SET_ANIMATION_SCALE permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6580
    :cond_14
    if-eqz p1, :cond_3a

    .line 6581
    array-length v0, p1

    if-lt v0, v2, :cond_22

    .line 6582
    const/4 v0, 0x0

    aget v0, p1, v0

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowAnimationScale:F

    .line 6584
    :cond_22
    array-length v0, p1

    if-lt v0, v3, :cond_2d

    .line 6585
    aget v0, p1, v2

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    iput v0, p0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    .line 6587
    :cond_2d
    array-length v0, p1

    const/4 v1, 0x3

    if-lt v0, v1, :cond_3a

    .line 6588
    aget v0, p1, v3

    invoke-static {v0}, Lcom/android/server/wm/WindowManagerService;->fixScale(F)F

    move-result v0

    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->setAnimatorDurationScale(F)V

    .line 6593
    :cond_3a
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v1, 0xe

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 6594
    return-void
.end method

.method public setAppFullscreen(Landroid/os/IBinder;Z)V
    .registers 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "toOpaque"    # Z

    .prologue
    .line 5302
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 5303
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v0, :cond_b

    .line 5304
    iput-boolean p2, v0, Lcom/android/server/wm/AppWindowToken;->appFullscreen:Z

    .line 5305
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversal()V

    .line 5307
    :cond_b
    return-void
.end method

.method public setAppGroupId(Landroid/os/IBinder;I)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "groupId"    # I

    .prologue
    .line 4426
    const-string v3, "android.permission.MANAGE_APP_TOKENS"

    const-string v4, "setAppGroupId()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_12

    .line 4428
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 4431
    :cond_12
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 4432
    :try_start_15
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 4433
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_35

    .line 4434
    const-string v3, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Attempted to set group id of non-existing app token: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4435
    monitor-exit v4

    .line 4447
    :goto_34
    return-void

    .line 4437
    :cond_35
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    iget v5, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    invoke-virtual {v3, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/Task;

    .line 4438
    .local v2, "oldTask":Lcom/android/server/wm/Task;
    invoke-virtual {v2, v0}, Lcom/android/server/wm/Task;->removeAppToken(Lcom/android/server/wm/AppWindowToken;)Z

    .line 4440
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    .line 4441
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v3, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/Task;

    .line 4442
    .local v1, "newTask":Lcom/android/server/wm/Task;
    if-nez v1, :cond_58

    .line 4443
    iget-object v3, v2, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    iget v3, v3, Lcom/android/server/wm/TaskStack;->mStackId:I

    iget v5, v2, Lcom/android/server/wm/Task;->mUserId:I

    invoke-direct {p0, p2, v3, v5, v0}, Lcom/android/server/wm/WindowManagerService;->createTask(IIILcom/android/server/wm/AppWindowToken;)Lcom/android/server/wm/Task;

    move-result-object v1

    .line 4445
    :cond_58
    iget-object v3, v1, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    invoke-virtual {v3, v0}, Lcom/android/server/wm/AppTokenList;->add(Ljava/lang/Object;)Z

    .line 4446
    monitor-exit v4

    goto :goto_34

    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .end local v1    # "newTask":Lcom/android/server/wm/Task;
    .end local v2    # "oldTask":Lcom/android/server/wm/Task;
    :catchall_5f
    move-exception v3

    monitor-exit v4
    :try_end_61
    .catchall {:try_start_15 .. :try_end_61} :catchall_5f

    throw v3
.end method

.method public setAppMultiWindowStyle(Landroid/view/IApplicationToken;Lcom/samsung/android/multiwindow/MultiWindowStyle;Z)V
    .registers 12
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "appMultiWindowStyle"    # Lcom/samsung/android/multiwindow/MultiWindowStyle;
    .param p3, "bLayoutNeeded"    # Z

    .prologue
    .line 4374
    const-string v4, "android.permission.MANAGE_APP_TOKENS"

    const-string v5, "addAppToken()"

    invoke-virtual {p0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v4

    if-nez v4, :cond_12

    .line 4375
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 4378
    :cond_12
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 4379
    :try_start_15
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v3

    .line 4381
    .local v3, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v3, :cond_39

    .line 4382
    const-string v4, "WindowManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Attempted to change zone for non-existent app token: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4383
    monitor-exit v5

    .line 4403
    :goto_38
    return-void

    .line 4387
    :cond_39
    iget-object v4, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {p2, v4}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->equals(Lcom/samsung/android/multiwindow/MultiWindowStyle;)Z

    move-result v4

    if-nez v4, :cond_5a

    .line 4388
    iput-object p2, v3, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    .line 4389
    if-eqz p3, :cond_5a

    .line 4392
    invoke-virtual {v3}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 4393
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_50

    .line 4394
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v6, 0x1

    iput-boolean v6, v4, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 4397
    :cond_50
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4398
    .local v0, "origId":J
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 4399
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4402
    .end local v0    # "origId":J
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_5a
    monitor-exit v5

    goto :goto_38

    .end local v3    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_5c
    move-exception v4

    monitor-exit v5
    :try_end_5e
    .catchall {:try_start_15 .. :try_end_5e} :catchall_5c

    throw v4
.end method

.method public setAppOrientation(Landroid/view/IApplicationToken;I)V
    .registers 8
    .param p1, "token"    # Landroid/view/IApplicationToken;
    .param p2, "requestedOrientation"    # I

    .prologue
    .line 4732
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string v2, "setAppOrientation()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_12

    .line 4734
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4737
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 4738
    :try_start_15
    invoke-interface {p1}, Landroid/view/IApplicationToken;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 4739
    .local v0, "atoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_39

    .line 4740
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to set orientation of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4741
    monitor-exit v2

    .line 4746
    :goto_38
    return-void

    .line 4744
    :cond_39
    iput p2, v0, Lcom/android/server/wm/AppWindowToken;->requestedOrientation:I

    .line 4745
    monitor-exit v2

    goto :goto_38

    .end local v0    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3d
    move-exception v1

    monitor-exit v2
    :try_end_3f
    .catchall {:try_start_15 .. :try_end_3f} :catchall_3d

    throw v1
.end method

.method public setAppStartingWindow(Landroid/os/IBinder;Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIIILandroid/os/IBinder;Z)V
    .registers 33
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pkg"    # Ljava/lang/String;
    .param p3, "theme"    # I
    .param p4, "compatInfo"    # Landroid/content/res/CompatibilityInfo;
    .param p5, "nonLocalizedLabel"    # Ljava/lang/CharSequence;
    .param p6, "labelRes"    # I
    .param p7, "icon"    # I
    .param p8, "logo"    # I
    .param p9, "windowFlags"    # I
    .param p10, "transferFrom"    # Landroid/os/IBinder;
    .param p11, "createIfNeeded"    # Z

    .prologue
    .line 5072
    const-string v2, "android.permission.MANAGE_APP_TOKENS"

    const-string v3, "setAppStartingWindow()"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_14

    .line 5074
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 5077
    :cond_14
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v20, v0

    monitor-enter v20

    .line 5082
    :try_start_1b
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v19

    .line 5083
    .local v19, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v19, :cond_3d

    .line 5084
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to set icon of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5085
    monitor-exit v20

    .line 5280
    :goto_3c
    return-void

    .line 5091
    :cond_3d
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v2

    if-nez v2, :cond_48

    .line 5092
    monitor-exit v20

    goto :goto_3c

    .line 5279
    .end local v19    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_45
    move-exception v2

    monitor-exit v20
    :try_end_47
    .catchall {:try_start_1b .. :try_end_47} :catchall_45

    throw v2

    .line 5095
    .restart local v19    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_48
    :try_start_48
    move-object/from16 v0, v19

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v2, :cond_50

    .line 5096
    monitor-exit v20

    goto :goto_3c

    .line 5099
    :cond_50
    if-eqz p10, :cond_1fb

    .line 5100
    move-object/from16 v0, p0

    move-object/from16 v1, p10

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v17

    .line 5101
    .local v17, "ttoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v17, :cond_1fb

    .line 5102
    move-object/from16 v0, v17

    iget-object v15, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 5103
    .local v15, "startingWindow":Lcom/android/server/wm/WindowState;
    if-eqz v15, :cond_182

    .line 5104
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mStartingIconInTransition:Z

    if-eqz v2, :cond_6d

    .line 5108
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mSkipAppTransitionAnimation:Z

    .line 5113
    :cond_6d
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v13

    .line 5117
    .local v13, "origId":J
    move-object/from16 v0, v17

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    move-object/from16 v0, v19

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 5118
    move-object/from16 v0, v17

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    move-object/from16 v0, v19

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    .line 5119
    move-object/from16 v0, v17

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    .line 5120
    const/4 v2, 0x0

    move-object/from16 v0, v17

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    .line 5121
    move-object/from16 v0, v19

    iput-object v15, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 5122
    move-object/from16 v0, v17

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->reportedVisible:Z

    .line 5123
    const/4 v2, 0x0

    move-object/from16 v0, v17

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 5124
    const/4 v2, 0x0

    move-object/from16 v0, v17

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingView:Landroid/view/View;

    .line 5125
    const/4 v2, 0x0

    move-object/from16 v0, v17

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 5126
    const/4 v2, 0x1

    move-object/from16 v0, v17

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 5127
    move-object/from16 v0, v19

    iput-object v0, v15, Lcom/android/server/wm/WindowState;->mToken:Lcom/android/server/wm/WindowToken;

    .line 5128
    move-object/from16 v0, v19

    iput-object v0, v15, Lcom/android/server/wm/WindowState;->mRootToken:Lcom/android/server/wm/WindowToken;

    .line 5129
    move-object/from16 v0, v19

    iput-object v0, v15, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    .line 5130
    iget-object v2, v15, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput-object v3, v2, Lcom/android/server/wm/WindowStateAnimator;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    .line 5135
    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->removeStartingWindowTimeout(Lcom/android/server/wm/AppWindowToken;)V

    .line 5136
    invoke-virtual {v15}, Lcom/android/server/wm/WindowState;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v2

    invoke-virtual {v2, v15}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 5137
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsChanged:Z

    .line 5140
    move-object/from16 v0, v17

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2, v15}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 5141
    move-object/from16 v0, v17

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v2, v15}, Lcom/android/server/wm/WindowList;->remove(Ljava/lang/Object;)Z

    .line 5142
    const/4 v2, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v15, v2}, Lcom/android/server/wm/WindowManagerService;->addWindowToListInOrderLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 5149
    move-object/from16 v0, v17

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    if-eqz v2, :cond_fc

    .line 5150
    const/4 v2, 0x1

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 5151
    move-object/from16 v0, v17

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 5153
    :cond_fc
    move-object/from16 v0, v17

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    if-eqz v2, :cond_107

    .line 5154
    const/4 v2, 0x1

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->firstWindowDrawn:Z

    .line 5156
    :cond_107
    move-object/from16 v0, v17

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-nez v2, :cond_11c

    .line 5157
    const/4 v2, 0x0

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 5158
    const/4 v2, 0x0

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    .line 5159
    const/4 v2, 0x0

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    .line 5161
    :cond_11c
    move-object/from16 v0, v19

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move-object/from16 v0, v17

    iget-boolean v3, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-eq v2, v3, :cond_131

    .line 5162
    move-object/from16 v0, v17

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    move-object/from16 v0, v19

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 5163
    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 5165
    :cond_131
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v16, v0

    .line 5166
    .local v16, "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v18, v0

    .line 5167
    .local v18, "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v2, :cond_16b

    .line 5168
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    move-object/from16 v0, v18

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 5169
    move-object/from16 v0, v16

    iget-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    move-object/from16 v0, v18

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animating:Z

    .line 5170
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    move-object/from16 v0, v18

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    .line 5171
    const/4 v2, 0x0

    move-object/from16 v0, v16

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 5172
    const/4 v2, 0x0

    move-object/from16 v0, v16

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->animLayerAdjustment:I

    .line 5173
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/wm/AppWindowAnimator;->updateLayers()V

    .line 5174
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/AppWindowAnimator;->updateLayers()V

    .line 5177
    :cond_16b
    const/4 v2, 0x3

    const/4 v3, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 5179
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5180
    invoke-direct/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 5181
    invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5182
    monitor-exit v20

    goto/16 :goto_3c

    .line 5183
    .end local v13    # "origId":J
    .end local v16    # "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v18    # "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :cond_182
    move-object/from16 v0, v17

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    if-eqz v2, :cond_1af

    .line 5189
    move-object/from16 v0, v17

    iget-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    move-object/from16 v0, v19

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 5190
    const/4 v2, 0x0

    move-object/from16 v0, v17

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 5191
    const/4 v2, 0x1

    move-object/from16 v0, v17

    iput-boolean v2, v0, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 5192
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v3, 0x5

    move-object/from16 v0, v19

    invoke-virtual {v2, v3, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v12

    .line 5196
    .local v12, "m":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v2, v12}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z

    .line 5197
    monitor-exit v20

    goto/16 :goto_3c

    .line 5199
    .end local v12    # "m":Landroid/os/Message;
    :cond_1af
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v16, v0

    .line 5200
    .restart local v16    # "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    move-object/from16 v18, v0

    .line 5201
    .restart local v18    # "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    if-eqz v2, :cond_1fb

    .line 5204
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    if-eqz v2, :cond_1ce

    .line 5205
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    invoke-virtual {v2}, Landroid/view/SurfaceControl;->destroy()V

    .line 5207
    :cond_1ce
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    move-object/from16 v0, v18

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    .line 5208
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    move-object/from16 v0, v18

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailX:I

    .line 5209
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I

    move-object/from16 v0, v18

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailY:I

    .line 5210
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    move-object/from16 v0, v18

    iput v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailLayer:I

    .line 5211
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    move-object/from16 v0, v18

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnailAnimation:Landroid/view/animation/Animation;

    .line 5212
    const/4 v2, 0x0

    move-object/from16 v0, v16

    iput-object v2, v0, Lcom/android/server/wm/AppWindowAnimator;->thumbnail:Landroid/view/SurfaceControl;

    .line 5219
    .end local v15    # "startingWindow":Lcom/android/server/wm/WindowState;
    .end local v16    # "tAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    .end local v17    # "ttoken":Lcom/android/server/wm/AppWindowToken;
    .end local v18    # "wAppAnimator":Lcom/android/server/wm/AppWindowAnimator;
    :cond_1fb
    if-nez p11, :cond_200

    .line 5220
    monitor-exit v20

    goto/16 :goto_3c

    .line 5229
    :cond_200
    if-eqz p3, :cond_248

    .line 5230
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v2

    sget-object v3, Lcom/android/internal/R$styleable;->Window:[I

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    move-object/from16 v0, p2

    move/from16 v1, p3

    invoke-virtual {v2, v0, v1, v3, v4}, Lcom/android/server/AttributeCache;->get(Ljava/lang/String;I[II)Lcom/android/server/AttributeCache$Entry;

    move-result-object v11

    .line 5232
    .local v11, "ent":Lcom/android/server/AttributeCache$Entry;
    if-nez v11, :cond_219

    .line 5235
    monitor-exit v20

    goto/16 :goto_3c

    .line 5246
    :cond_219
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v3, 0x5

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v2

    if-eqz v2, :cond_226

    .line 5248
    monitor-exit v20

    goto/16 :goto_3c

    .line 5250
    :cond_226
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/4 v3, 0x4

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v2

    if-eqz v2, :cond_233

    .line 5252
    monitor-exit v20

    goto/16 :goto_3c

    .line 5254
    :cond_233
    iget-object v2, v11, Lcom/android/server/AttributeCache$Entry;->array:Landroid/content/res/TypedArray;

    const/16 v3, 0xe

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/content/res/TypedArray;->getBoolean(IZ)Z

    move-result v2

    if-eqz v2, :cond_248

    .line 5256
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    if-nez v2, :cond_27b

    .line 5262
    const/high16 v2, 0x100000

    or-int p9, p9, v2

    .line 5270
    .end local v11    # "ent":Lcom/android/server/AttributeCache$Entry;
    :cond_248
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/wm/WindowManagerService;->mStartingIconInTransition:Z

    .line 5271
    new-instance v2, Lcom/android/server/wm/StartingData;

    move-object/from16 v3, p2

    move/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move/from16 v7, p6

    move/from16 v8, p7

    move/from16 v9, p8

    move/from16 v10, p9

    invoke-direct/range {v2 .. v10}, Lcom/android/server/wm/StartingData;-><init>(Ljava/lang/String;ILandroid/content/res/CompatibilityInfo;Ljava/lang/CharSequence;IIII)V

    move-object/from16 v0, v19

    iput-object v2, v0, Lcom/android/server/wm/AppWindowToken;->startingData:Lcom/android/server/wm/StartingData;

    .line 5273
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/4 v3, 0x5

    move-object/from16 v0, v19

    invoke-virtual {v2, v3, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v12

    .line 5278
    .restart local v12    # "m":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v2, v12}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageAtFrontOfQueue(Landroid/os/Message;)Z

    .line 5279
    monitor-exit v20

    goto/16 :goto_3c

    .line 5264
    .end local v12    # "m":Landroid/os/Message;
    .restart local v11    # "ent":Lcom/android/server/AttributeCache$Entry;
    :cond_27b
    monitor-exit v20
    :try_end_27c
    .catchall {:try_start_48 .. :try_end_27c} :catchall_45

    goto/16 :goto_3c
.end method

.method public setAppVisibility(Landroid/os/IBinder;Z)V
    .registers 12
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    .prologue
    const/4 v0, 0x1

    const/4 v2, 0x0

    .line 5426
    const-string v3, "android.permission.MANAGE_APP_TOKENS"

    const-string v4, "setAppVisibility()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_14

    .line 5428
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5433
    :cond_14
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 5434
    :try_start_17
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 5435
    .local v1, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_37

    .line 5436
    const-string v0, "WindowManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Attempted to set visibility of non-existing app token: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5437
    monitor-exit v8

    .line 5507
    :goto_36
    return-void

    .line 5454
    :cond_37
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v3

    if-eqz v3, :cond_99

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v3}, Lcom/android/server/wm/AppTransition;->isTransitionSet()Z

    move-result v3

    if-eqz v3, :cond_99

    .line 5455
    if-nez p2, :cond_8a

    :goto_47
    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    .line 5457
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingDisplayed:Z

    if-nez v0, :cond_52

    .line 5460
    iget-object v0, v1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-virtual {v0}, Lcom/android/server/wm/AppWindowAnimator;->setDummyAnimation()V

    .line 5462
    :cond_52
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5463
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 5464
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToHide:Z

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 5465
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->inPendingTransaction:Z

    .line 5466
    if-eqz p2, :cond_8c

    .line 5467
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mOpeningApps:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5468
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->startingMoved:Z

    .line 5473
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-eqz v0, :cond_85

    .line 5474
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->allDrawn:Z

    .line 5475
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->deferClearAllDrawn:Z

    .line 5476
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToShow:Z

    .line 5478
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-eqz v0, :cond_85

    .line 5485
    const/4 v0, 0x0

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 5486
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 5498
    :cond_85
    :goto_85
    monitor-exit v8

    goto :goto_36

    .line 5506
    .end local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_87
    move-exception v0

    monitor-exit v8
    :try_end_89
    .catchall {:try_start_17 .. :try_end_89} :catchall_87

    throw v0

    .restart local v1    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_8a
    move v0, v2

    .line 5455
    goto :goto_47

    .line 5490
    :cond_8c
    :try_start_8c
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mClosingApps:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 5494
    iget-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-nez v0, :cond_85

    .line 5495
    const/4 v0, 0x1

    iput-boolean v0, v1, Lcom/android/server/wm/AppWindowToken;->waitingToHide:Z

    goto :goto_85

    .line 5501
    :cond_99
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 5502
    .local v6, "origId":J
    const/4 v2, 0x0

    const/4 v4, -0x1

    const/4 v5, 0x1

    move-object v0, p0

    move v3, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZ)Z

    .line 5504
    invoke-virtual {v1}, Lcom/android/server/wm/AppWindowToken;->updateReportedVisibilityLocked()V

    .line 5505
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5506
    monitor-exit v8
    :try_end_ac
    .catchall {:try_start_8c .. :try_end_ac} :catchall_87

    goto :goto_36
.end method

.method public setAppWillBeHidden(Landroid/os/IBinder;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 5284
    const-string v1, "android.permission.MANAGE_APP_TOKENS"

    const-string v2, "setAppWillBeHidden()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_12

    .line 5286
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 5291
    :cond_12
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 5292
    :try_start_15
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v0

    .line 5293
    .local v0, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-nez v0, :cond_35

    .line 5294
    const-string v1, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempted to set will be hidden of non-existing app token: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5295
    monitor-exit v2

    .line 5299
    :goto_34
    return-void

    .line 5297
    :cond_35
    const/4 v1, 0x1

    iput-boolean v1, v0, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    .line 5298
    monitor-exit v2

    goto :goto_34

    .end local v0    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_3a
    move-exception v1

    monitor-exit v2
    :try_end_3c
    .catchall {:try_start_15 .. :try_end_3c} :catchall_3a

    throw v1
.end method

.method public setContextualEvent(Ljava/lang/String;Landroid/widget/RemoteViews;)V
    .registers 4
    .param p1, "requestClass"    # Ljava/lang/String;
    .param p2, "views"    # Landroid/widget/RemoteViews;

    .prologue
    .line 13610
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2}, Landroid/view/WindowManagerPolicy;->setContextualEvent(Ljava/lang/String;Landroid/widget/RemoteViews;)V

    .line 13611
    return-void
.end method

.method public setCurrentInputMethodClient(Landroid/os/IBinder;)V
    .registers 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 8579
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 8580
    :try_start_3
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 8581
    .local v0, "inputMethodTargetWindow":Lcom/android/server/wm/WindowState;
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mRequestLayout:Z

    if-eqz v1, :cond_36

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    if-eqz v1, :cond_36

    .line 8582
    if-eqz v0, :cond_31

    .line 8583
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x3e9

    if-eq v3, v4, :cond_33

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v4, 0x3e8

    if-eq v3, v4, :cond_33

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/4 v4, 0x3

    if-eq v3, v4, :cond_33

    .end local v0    # "inputMethodTargetWindow":Lcom/android/server/wm/WindowState;
    :goto_2e
    invoke-interface {v1, v0}, Landroid/view/WindowManagerPolicy;->setCurrentInputMethodTargetLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    .line 8592
    :cond_31
    :goto_31
    monitor-exit v2

    .line 8593
    return-void

    .line 8583
    .restart local v0    # "inputMethodTargetWindow":Lcom/android/server/wm/WindowState;
    :cond_33
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentFocus:Lcom/android/server/wm/WindowState;

    goto :goto_2e

    .line 8590
    :cond_36
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v3, 0x0

    invoke-interface {v1, v3}, Landroid/view/WindowManagerPolicy;->setCurrentInputMethodTargetLw(Landroid/view/WindowManagerPolicy$WindowState;)V

    goto :goto_31

    .line 8592
    .end local v0    # "inputMethodTargetWindow":Lcom/android/server/wm/WindowState;
    :catchall_3d
    move-exception v1

    monitor-exit v2
    :try_end_3f
    .catchall {:try_start_3 .. :try_end_3f} :catchall_3d

    throw v1
.end method

.method public setCurrentUser(I)V
    .registers 8
    .param p1, "newUserId"    # I

    .prologue
    .line 6805
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v5

    .line 6806
    :try_start_3
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    .line 6807
    .local v3, "oldUserId":I
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mCurrentUserId:I

    .line 6808
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppTransition:Lcom/android/server/wm/AppTransition;

    invoke-virtual {v4, p1}, Lcom/android/server/wm/AppTransition;->setCurrentUser(I)V

    .line 6809
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4, p1}, Landroid/view/WindowManagerPolicy;->setCurrentUserLw(I)V

    .line 6812
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 6813
    .local v2, "numDisplays":I
    const/4 v1, 0x0

    .local v1, "displayNdx":I
    :goto_18
    if-ge v1, v2, :cond_2b

    .line 6814
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v4, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/DisplayContent;

    .line 6815
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v0, v3, p1}, Lcom/android/server/wm/DisplayContent;->switchUserStacks(II)V

    .line 6816
    invoke-direct {p0, v0}, Lcom/android/server/wm/WindowManagerService;->rebuildAppWindowListLocked(Lcom/android/server/wm/DisplayContent;)V

    .line 6813
    add-int/lit8 v1, v1, 0x1

    goto :goto_18

    .line 6818
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2b
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 6819
    monitor-exit v5

    .line 6820
    return-void

    .line 6819
    .end local v1    # "displayNdx":I
    .end local v2    # "numDisplays":I
    .end local v3    # "oldUserId":I
    :catchall_30
    move-exception v4

    monitor-exit v5
    :try_end_32
    .catchall {:try_start_3 .. :try_end_32} :catchall_30

    throw v4
.end method

.method public setDismissKeyguardOnNextActivity(Z)V
    .registers 2
    .param p1, "dismiss"    # Z

    .prologue
    .line 4452
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissKeyguardOnNextActivity:Z

    .line 4453
    return-void
.end method

.method public setEventDispatching(Z)V
    .registers 4
    .param p1, "enabled"    # Z

    .prologue
    .line 8534
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "setEventDispatching()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 8536
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8539
    :cond_12
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8540
    :try_start_15
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mEventDispatchingEnabled:Z

    .line 8541
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-eqz v0, :cond_20

    .line 8542
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/InputMonitor;->setEventDispatchingLw(Z)V

    .line 8544
    :cond_20
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->sendScreenStatusToClientsLocked()V

    .line 8545
    monitor-exit v1

    .line 8546
    return-void

    .line 8545
    :catchall_25
    move-exception v0

    monitor-exit v1
    :try_end_27
    .catchall {:try_start_15 .. :try_end_27} :catchall_25

    throw v0
.end method

.method public setFocusedApp(Landroid/os/IBinder;Z)V
    .registers 11
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "moveFocusNow"    # Z

    .prologue
    const/4 v4, 0x1

    const/4 v5, 0x0

    .line 4921
    const-string v6, "android.permission.MANAGE_APP_TOKENS"

    const-string v7, "setFocusedApp()"

    invoke-virtual {p0, v6, v7}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v6

    if-nez v6, :cond_14

    .line 4923
    new-instance v4, Ljava/lang/SecurityException;

    const-string v5, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 4926
    :cond_14
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v6

    .line 4927
    const/4 v0, 0x0

    .line 4928
    .local v0, "changed":Z
    if-nez p1, :cond_68

    .line 4930
    :try_start_1a
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v7, :cond_66

    move v0, v4

    .line 4931
    :goto_1f
    const/4 v5, 0x0

    iput-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 4932
    if-eqz v0, :cond_2a

    .line 4933
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v7, 0x0

    invoke-virtual {v5, v7}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V

    .line 4950
    :cond_2a
    :goto_2a
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-direct {p0, p1}, Lcom/android/server/wm/WindowManagerService;->convertActivityResultToComponentName(Landroid/os/IBinder;)Landroid/content/ComponentName;

    move-result-object v7

    invoke-interface {v5, v7}, Landroid/view/WindowManagerPolicy;->updateTopActivity(Landroid/content/ComponentName;)V

    .line 4953
    if-eqz v0, :cond_38

    .line 4954
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->setFocusedStackFrame()V

    .line 4958
    :cond_38
    if-eqz p2, :cond_64

    if-eqz v0, :cond_64

    .line 4959
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 4962
    .local v2, "origId":J
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_5c

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v5, v5, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    invoke-virtual {v5}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v5

    if-ne v5, v4, :cond_5c

    const/4 v4, 0x0

    invoke-virtual {p0, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Z)Z

    move-result v4

    if-eqz v4, :cond_5c

    .line 4965
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0x12

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 4969
    :cond_5c
    const/4 v4, 0x0

    const/4 v5, 0x1

    invoke-direct {p0, v4, v5}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 4970
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4972
    .end local v2    # "origId":J
    :cond_64
    monitor-exit v6

    .line 4973
    :goto_65
    return-void

    :cond_66
    move v0, v5

    .line 4930
    goto :goto_1f

    .line 4936
    :cond_68
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v1

    .line 4937
    .local v1, "newFocus":Lcom/android/server/wm/AppWindowToken;
    if-nez v1, :cond_8b

    .line 4938
    const-string v4, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Attempted to set focus to non-existing app token: "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4939
    monitor-exit v6

    goto :goto_65

    .line 4972
    .end local v1    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :catchall_88
    move-exception v4

    monitor-exit v6
    :try_end_8a
    .catchall {:try_start_1a .. :try_end_8a} :catchall_88

    throw v4

    .line 4941
    .restart local v1    # "newFocus":Lcom/android/server/wm/AppWindowToken;
    :cond_8b
    :try_start_8b
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eq v7, v1, :cond_9a

    move v0, v4

    .line 4944
    :goto_90
    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    .line 4945
    if-eqz v0, :cond_2a

    .line 4946
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v5, v1}, Lcom/android/server/wm/InputMonitor;->setFocusedAppLw(Lcom/android/server/wm/AppWindowToken;)V
    :try_end_99
    .catchall {:try_start_8b .. :try_end_99} :catchall_88

    goto :goto_2a

    :cond_9a
    move v0, v5

    .line 4941
    goto :goto_90
.end method

.method setFocusedStackFrame()V
    .registers 2

    .prologue
    const/4 v0, 0x0

    .line 4822
    invoke-virtual {p0, v0, v0}, Lcom/android/server/wm/WindowManagerService;->setFocusedStackFrame(ZZ)V

    .line 4823
    return-void
.end method

.method setFocusedStackFrame(ZZ)V
    .registers 26
    .param p1, "forceRedraw"    # Z
    .param p2, "forceHide"    # Z

    .prologue
    .line 4830
    const/4 v12, 0x0

    .line 4831
    .local v12, "prevUnFocusedBoundSize":I
    new-instance v18, Ljava/util/ArrayList;

    invoke-direct/range {v18 .. v18}, Ljava/util/ArrayList;-><init>()V

    .line 4833
    .local v18, "unFocusedZones":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    if-eqz v19, :cond_ed

    .line 4834
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v20, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/server/wm/AppWindowToken;->groupId:I

    move/from16 v20, v0

    invoke-virtual/range {v19 .. v20}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/wm/Task;

    .line 4835
    .local v17, "task":Lcom/android/server/wm/Task;
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/wm/Task;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v16, v0

    .line 4836
    .local v16, "stack":Lcom/android/server/wm/TaskStack;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v19

    move-object/from16 v0, v19

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/wm/DisplayContent;->setTouchExcludeRegion(Lcom/android/server/wm/TaskStack;)V

    .line 4837
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I

    move-result v12

    .line 4839
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->clear()V

    .line 4843
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v19

    const/16 v20, 0x2

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/wm/DisplayContent;->getRootCurrentStackBox(I)Lcom/android/server/wm/StackBox;

    move-result-object v11

    .line 4844
    .local v11, "normalRoot":Lcom/android/server/wm/StackBox;
    invoke-virtual/range {v17 .. v17}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->homeOnTop()Z

    move-result v8

    .line 4845
    .local v8, "isHomeInFront":Z
    if-nez v8, :cond_cc

    if-eqz v11, :cond_cc

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/TaskStack;->hasSibling()Z

    move-result v19

    if-nez v19, :cond_6c

    iget-object v0, v11, Lcom/android/server/wm/StackBox;->mStack:Lcom/android/server/wm/TaskStack;

    move-object/from16 v19, v0

    if-nez v19, :cond_cc

    .line 4846
    :cond_6c
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 4847
    .local v4, "appStacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    invoke-virtual {v11, v4}, Lcom/android/server/wm/StackBox;->getAppStacks(Ljava/util/ArrayList;)V

    .line 4848
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v7

    .local v7, "i$":Ljava/util/Iterator;
    :cond_78
    :goto_78
    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z

    move-result v19

    if-eqz v19, :cond_bc

    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/TaskStack;

    .line 4849
    .local v3, "appStack":Lcom/android/server/wm/TaskStack;
    iget-object v0, v3, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/StackBox;->isFrontStackBox()Z

    move-result v19

    if-eqz v19, :cond_78

    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getMultiWindowStyle()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZoneLevel()I

    move-result v19

    if-eqz v19, :cond_78

    .line 4850
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    iget-object v0, v3, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    move-object/from16 v20, v0

    const/16 v21, 0x0

    invoke-virtual/range {v20 .. v21}, Lcom/android/server/wm/StackBox;->getStackBounds(Lcom/android/server/wm/AppWindowToken;)Landroid/graphics/Rect;

    move-result-object v20

    invoke-virtual/range {v19 .. v20}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4851
    new-instance v19, Ljava/lang/Integer;

    invoke-virtual {v3}, Lcom/android/server/wm/TaskStack;->getMultiWindowStyle()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v20

    invoke-direct/range {v19 .. v20}, Ljava/lang/Integer;-><init>(I)V

    invoke-virtual/range {v18 .. v19}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_78

    .line 4854
    .end local v3    # "appStack":Lcom/android/server/wm/TaskStack;
    :cond_bc
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I

    move-result v19

    move/from16 v0, v19

    if-eq v12, v0, :cond_cc

    .line 4855
    const/16 p1, 0x1

    .line 4864
    .end local v4    # "appStacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/TaskStack;>;"
    .end local v7    # "i$":Ljava/util/Iterator;
    .end local v8    # "isHomeInFront":Z
    .end local v11    # "normalRoot":Lcom/android/server/wm/StackBox;
    .end local v17    # "task":Lcom/android/server/wm/Task;
    :cond_cc
    :goto_cc
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 4866
    if-eqz v16, :cond_d3

    if-eqz p2, :cond_f0

    .line 4867
    :cond_d3
    if-eqz p2, :cond_de

    .line 4868
    :try_start_d5
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/FocusedStackFrame;->clear()V

    .line 4870
    :cond_de
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    invoke-virtual/range {v19 .. v20}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(Z)V
    :try_end_e9
    .catchall {:try_start_d5 .. :try_end_e9} :catchall_1c9

    .line 4914
    :goto_e9
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 4917
    return-void

    .line 4861
    .end local v16    # "stack":Lcom/android/server/wm/TaskStack;
    :cond_ed
    const/16 v16, 0x0

    .restart local v16    # "stack":Lcom/android/server/wm/TaskStack;
    goto :goto_cc

    .line 4872
    :cond_f0
    :try_start_f0
    move-object/from16 v0, v16

    iget-object v6, v0, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    .line 4873
    .local v6, "box":Lcom/android/server/wm/StackBox;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v6, v0}, Lcom/android/server/wm/StackBox;->getStackBounds(Lcom/android/server/wm/AppWindowToken;)Landroid/graphics/Rect;

    move-result-object v5

    .line 4879
    .local v5, "bounds":Landroid/graphics/Rect;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v19

    move-object/from16 v0, p0

    move-object/from16 v1, v19

    invoke-direct {v0, v1}, Lcom/android/server/wm/WindowManagerService;->findFocusedWindowLocked(Lcom/android/server/wm/DisplayContent;)Lcom/android/server/wm/WindowState;

    move-result-object v13

    .line 4880
    .local v13, "realFocusedWin":Lcom/android/server/wm/WindowState;
    iget v0, v5, Landroid/graphics/Rect;->top:I

    move/from16 v19, v0

    if-gez v19, :cond_118

    .line 4881
    const/16 v19, 0x0

    move/from16 v0, v19

    iput v0, v5, Landroid/graphics/Rect;->top:I

    .line 4883
    :cond_118
    const/4 v9, 0x0

    .line 4884
    .local v9, "isSplitWindowState":Z
    if-eqz v13, :cond_144

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    if-eqz v19, :cond_144

    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    if-eqz v19, :cond_144

    .line 4885
    iget-object v0, v13, Lcom/android/server/wm/WindowState;->mAppToken:Lcom/android/server/wm/AppWindowToken;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget-object v0, v0, Lcom/android/server/wm/AppWindowToken;->appMultiWindowStyle:Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getType()I

    move-result v19

    const/16 v20, 0x1

    move/from16 v0, v19

    move/from16 v1, v20

    if-ne v0, v1, :cond_1ce

    const/4 v9, 0x1

    .line 4888
    :cond_144
    :goto_144
    iget-object v0, v6, Lcom/android/server/wm/StackBox;->mParent:Lcom/android/server/wm/StackBox;

    move-object/from16 v19, v0

    if-eqz v19, :cond_1d1

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mTmpContentRect:Landroid/graphics/Rect;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v5, v0}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v19

    if-nez v19, :cond_1d1

    if-eqz v9, :cond_1d1

    const/4 v10, 0x1

    .line 4890
    .local v10, "multipleStacks":Z
    :goto_15b
    new-instance v15, Landroid/graphics/Rect;

    invoke-direct {v15}, Landroid/graphics/Rect;-><init>()V

    .line 4891
    .local v15, "screenSize":Landroid/graphics/Rect;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v19

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/DisplayContent;->getDisplay()Landroid/view/Display;

    move-result-object v19

    move-object/from16 v0, v19

    invoke-virtual {v0, v15}, Landroid/view/Display;->getRectSize(Landroid/graphics/Rect;)V

    .line 4892
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v15}, Lcom/android/server/wm/FocusedStackFrame;->setScreenSize(Landroid/graphics/Rect;)V

    .line 4894
    if-eqz v9, :cond_1d3

    .line 4895
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v14

    .line 4896
    .local v14, "removeIdx":I
    if-ltz v14, :cond_198

    .line 4897
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 4898
    move-object/from16 v0, v18

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 4900
    :cond_198
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v19, v0

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    move-object/from16 v20, v0

    move-object/from16 v0, v19

    move-object/from16 v1, v20

    move-object/from16 v2, v18

    invoke-virtual {v0, v5, v1, v2}, Lcom/android/server/wm/FocusedStackFrame;->setBounds(Landroid/graphics/Rect;Ljava/util/ArrayList;Ljava/util/ArrayList;)V

    .line 4905
    .end local v14    # "removeIdx":I
    :goto_1ad
    sget-boolean v19, Lcom/android/server/am/MultiWindowPolicy;->sPreviewScaleEnabled:Z

    if-eqz v19, :cond_1e6

    .line 4906
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Lcom/android/server/wm/FocusedStackFrame;->clear()V

    .line 4907
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v19, v0

    const/16 v20, 0x0

    const/16 v21, 0x0

    invoke-virtual/range {v19 .. v21}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(ZZ)V
    :try_end_1c7
    .catchall {:try_start_f0 .. :try_end_1c7} :catchall_1c9

    goto/16 :goto_e9

    .line 4914
    .end local v5    # "bounds":Landroid/graphics/Rect;
    .end local v6    # "box":Lcom/android/server/wm/StackBox;
    .end local v9    # "isSplitWindowState":Z
    .end local v10    # "multipleStacks":Z
    .end local v13    # "realFocusedWin":Lcom/android/server/wm/WindowState;
    .end local v15    # "screenSize":Landroid/graphics/Rect;
    :catchall_1c9
    move-exception v19

    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    throw v19

    .line 4885
    .restart local v5    # "bounds":Landroid/graphics/Rect;
    .restart local v6    # "box":Lcom/android/server/wm/StackBox;
    .restart local v9    # "isSplitWindowState":Z
    .restart local v13    # "realFocusedWin":Lcom/android/server/wm/WindowState;
    :cond_1ce
    const/4 v9, 0x0

    goto/16 :goto_144

    .line 4888
    :cond_1d1
    const/4 v10, 0x0

    goto :goto_15b

    .line 4902
    .restart local v10    # "multipleStacks":Z
    .restart local v15    # "screenSize":Landroid/graphics/Rect;
    :cond_1d3
    :try_start_1d3
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v19, v0

    new-instance v20, Landroid/graphics/Rect;

    invoke-direct/range {v20 .. v20}, Landroid/graphics/Rect;-><init>()V

    const/16 v21, 0x0

    const/16 v22, 0x0

    invoke-virtual/range {v19 .. v22}, Lcom/android/server/wm/FocusedStackFrame;->setBounds(Landroid/graphics/Rect;Ljava/util/ArrayList;Ljava/util/ArrayList;)V

    goto :goto_1ad

    .line 4909
    :cond_1e6
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    move-object/from16 v20, v0

    if-nez v10, :cond_1fa

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mUnFocusedBounds:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I

    move-result v19

    if-lez v19, :cond_207

    :cond_1fa
    const/16 v19, 0x1

    :goto_1fc
    move-object/from16 v0, v20

    move/from16 v1, v19

    move/from16 v2, p1

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/FocusedStackFrame;->setVisibility(ZZ)V
    :try_end_205
    .catchall {:try_start_1d3 .. :try_end_205} :catchall_1c9

    goto/16 :goto_e9

    :cond_207
    const/16 v19, 0x0

    goto :goto_1fc
.end method

.method setFocusedStackLayer()V
    .registers 8

    .prologue
    .line 4762
    const/4 v5, 0x0

    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    .line 4764
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    if-eqz v5, :cond_19

    .line 4765
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mMultiWindowCenterBar:Lcom/android/server/wm/WindowState;

    iget-object v5, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v5, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    add-int/lit8 v5, v5, -0x1

    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    .line 4811
    :cond_11
    :goto_11
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    iget v6, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    invoke-virtual {v5, v6}, Lcom/android/server/wm/FocusedStackFrame;->setLayer(I)V

    .line 4812
    return-void

    .line 4767
    :cond_19
    const/4 v2, 0x0

    .line 4769
    .local v2, "isInputMethodTarget":Z
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    if-eqz v5, :cond_5b

    .line 4770
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedApp:Lcom/android/server/wm/AppWindowToken;

    iget-object v4, v5, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    .line 4771
    .local v4, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_28
    if-ltz v1, :cond_5b

    .line 4772
    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 4773
    .local v3, "win":Lcom/android/server/wm/WindowState;
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v0, v5, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 4780
    .local v0, "animLayer":I
    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v5

    if-eqz v5, :cond_9a

    .line 4781
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodTarget:Lcom/android/server/wm/WindowState;

    if-ne v5, v3, :cond_3f

    .line 4782
    const/4 v2, 0x1

    .line 4784
    :cond_3f
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v5, v5, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v6, 0x3e9

    if-ne v5, v6, :cond_7e

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    invoke-virtual {v5}, Lcom/android/server/wm/FocusedStackFrame;->getBounds()Landroid/graphics/Rect;

    move-result-object v5

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v6

    invoke-virtual {v5, v6}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v5

    if-nez v5, :cond_7e

    .line 4786
    add-int/lit8 v5, v0, -0x1

    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    .line 4802
    .end local v0    # "animLayer":I
    .end local v1    # "i":I
    .end local v3    # "win":Lcom/android/server/wm/WindowState;
    .end local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_5b
    if-eqz v2, :cond_11

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    if-eqz v5, :cond_11

    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v5

    if-eqz v5, :cond_11

    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    iget-object v6, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v6, v6, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    if-lt v5, v6, :cond_11

    .line 4804
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    iget-object v5, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v5, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    add-int/lit8 v5, v5, -0x1

    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    goto :goto_11

    .line 4789
    .restart local v0    # "animLayer":I
    .restart local v1    # "i":I
    .restart local v3    # "win":Lcom/android/server/wm/WindowState;
    .restart local v4    # "windows":Lcom/android/server/wm/WindowList;
    :cond_7e
    iget-object v5, v3, Lcom/android/server/wm/WindowState;->mAttachedWindow:Lcom/android/server/wm/WindowState;

    if-nez v5, :cond_9a

    iget v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    if-le v0, v5, :cond_9a

    .line 4790
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackFrame:Lcom/android/server/wm/FocusedStackFrame;

    invoke-virtual {v5}, Lcom/android/server/wm/FocusedStackFrame;->getBounds()Landroid/graphics/Rect;

    move-result-object v5

    invoke-virtual {v3}, Lcom/android/server/wm/WindowState;->getFrameLw()Landroid/graphics/Rect;

    move-result-object v6

    invoke-virtual {v5, v6}, Landroid/graphics/Rect;->contains(Landroid/graphics/Rect;)Z

    move-result v5

    if-eqz v5, :cond_9d

    .line 4791
    add-int/lit8 v5, v0, 0x1

    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    .line 4771
    :cond_9a
    :goto_9a
    add-int/lit8 v1, v1, -0x1

    goto :goto_28

    .line 4793
    :cond_9d
    add-int/lit8 v5, v0, -0x1

    iput v5, p0, Lcom/android/server/wm/WindowManagerService;->mFocusedStackLayer:I

    goto :goto_9a
.end method

.method public setForcedDisplayDensity(II)V
    .registers 10
    .param p1, "displayId"    # I
    .param p2, "density"    # I

    .prologue
    .line 9485
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v4, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v3, v4}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_12

    .line 9488
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 9491
    :cond_12
    if-eqz p1, :cond_1c

    .line 9492
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Can only set the default display"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 9494
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 9496
    .local v1, "ident":J
    :try_start_20
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_43

    .line 9497
    :try_start_23
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v0

    .line 9498
    .local v0, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v0, :cond_3b

    .line 9499
    invoke-direct {p0, v0, p2}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplayDensityLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 9500
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string v5, "display_density_forced"

    invoke-static {p2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v5, v6}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 9503
    :cond_3b
    monitor-exit v4
    :try_end_3c
    .catchall {:try_start_23 .. :try_end_3c} :catchall_40

    .line 9505
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9507
    return-void

    .line 9503
    .end local v0    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_40
    move-exception v3

    :try_start_41
    monitor-exit v4
    :try_end_42
    .catchall {:try_start_41 .. :try_end_42} :catchall_40

    :try_start_42
    throw v3
    :try_end_43
    .catchall {:try_start_42 .. :try_end_43} :catchall_43

    .line 9505
    :catchall_43
    move-exception v3

    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public setForcedDisplaySize(III)V
    .registers 15
    .param p1, "displayId"    # I
    .param p2, "width"    # I
    .param p3, "height"    # I

    .prologue
    .line 9341
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v7, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v6, v7}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v6

    if-eqz v6, :cond_12

    .line 9344
    new-instance v6, Ljava/lang/SecurityException;

    const-string v7, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 9347
    :cond_12
    if-eqz p1, :cond_1c

    .line 9348
    new-instance v6, Ljava/lang/IllegalArgumentException;

    const-string v7, "Can only set the default display"

    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 9350
    :cond_1c
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 9352
    .local v4, "ident":J
    :try_start_20
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v7
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_77

    .line 9355
    const/16 v2, 0xc8

    .line 9356
    .local v2, "MIN_WIDTH":I
    const/16 v1, 0xc8

    .line 9357
    .local v1, "MIN_HEIGHT":I
    const/4 v0, 0x2

    .line 9358
    .local v0, "MAX_SCALE":I
    :try_start_28
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 9359
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v3, :cond_6f

    .line 9360
    const/16 v6, 0xc8

    invoke-static {p2, v6}, Ljava/lang/Math;->max(II)I

    move-result v6

    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayWidth:I

    mul-int/lit8 v8, v8, 0x2

    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    move-result p2

    .line 9362
    const/16 v6, 0xc8

    invoke-static {p3, v6}, Ljava/lang/Math;->max(II)I

    move-result v6

    iget v8, v3, Lcom/android/server/wm/DisplayContent;->mInitialDisplayHeight:I

    mul-int/lit8 v8, v8, 0x2

    invoke-static {v6, v8}, Ljava/lang/Math;->min(II)I

    move-result p3

    .line 9364
    invoke-direct {p0, v3, p2, p3}, Lcom/android/server/wm/WindowManagerService;->setForcedDisplaySizeLocked(Lcom/android/server/wm/DisplayContent;II)V

    .line 9365
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v6

    const-string v8, "display_size_forced"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, ","

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v6, v8, v9}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    .line 9368
    :cond_6f
    monitor-exit v7
    :try_end_70
    .catchall {:try_start_28 .. :try_end_70} :catchall_74

    .line 9370
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9372
    return-void

    .line 9368
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_74
    move-exception v6

    :try_start_75
    monitor-exit v7
    :try_end_76
    .catchall {:try_start_75 .. :try_end_76} :catchall_74

    :try_start_76
    throw v6
    :try_end_77
    .catchall {:try_start_76 .. :try_end_77} :catchall_77

    .line 9370
    .end local v0    # "MAX_SCALE":I
    .end local v1    # "MIN_HEIGHT":I
    .end local v2    # "MIN_WIDTH":I
    :catchall_77
    move-exception v6

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v6
.end method

.method public setHardKeyboardEnabled(Z)V
    .registers 5
    .param p1, "enabled"    # Z

    .prologue
    .line 8407
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8408
    :try_start_3
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardEnabled:Z

    if-eq v0, p1, :cond_10

    .line 8409
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardEnabled:Z

    .line 8410
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v2, 0x12

    invoke-virtual {v0, v2}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessage(I)Z

    .line 8412
    :cond_10
    monitor-exit v1

    .line 8413
    return-void

    .line 8412
    :catchall_12
    move-exception v0

    monitor-exit v1
    :try_end_14
    .catchall {:try_start_3 .. :try_end_14} :catchall_12

    throw v0
.end method

.method setHoldScreenLocked(Lcom/android/server/wm/Session;)V
    .registers 7
    .param p1, "newHoldScreen"    # Lcom/android/server/wm/Session;

    .prologue
    .line 11406
    if-eqz p1, :cond_2c

    const/4 v0, 0x1

    .line 11408
    .local v0, "hold":Z
    :goto_3
    if-eqz v0, :cond_15

    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    if-eq v2, p1, :cond_15

    .line 11409
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    new-instance v3, Landroid/os/WorkSource;

    iget v4, p1, Lcom/android/server/wm/Session;->mUid:I

    invoke-direct {v3, v4}, Landroid/os/WorkSource;-><init>(I)V

    invoke-virtual {v2, v3}, Landroid/os/PowerManager$WakeLock;->setWorkSource(Landroid/os/WorkSource;)V

    .line 11411
    :cond_15
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenOn:Lcom/android/server/wm/Session;

    .line 11413
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->isHeld()Z

    move-result v1

    .line 11414
    .local v1, "state":Z
    if-eq v0, v1, :cond_2b

    .line 11415
    if-eqz v0, :cond_2e

    .line 11416
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->acquire()V

    .line 11417
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStartedLw()V

    .line 11423
    :cond_2b
    :goto_2b
    return-void

    .line 11406
    .end local v0    # "hold":Z
    .end local v1    # "state":Z
    :cond_2c
    const/4 v0, 0x0

    goto :goto_3

    .line 11419
    .restart local v0    # "hold":Z
    .restart local v1    # "state":Z
    :cond_2e
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v2}, Landroid/view/WindowManagerPolicy;->keepScreenOnStoppedLw()V

    .line 11420
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mHoldingScreenWakeLock:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v2}, Landroid/os/PowerManager$WakeLock;->release()V

    goto :goto_2b
.end method

.method public setInTouchMode(Z)V
    .registers 4
    .param p1, "mode"    # Z

    .prologue
    .line 7057
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 7058
    :try_start_3
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mInTouchMode:Z

    .line 7059
    monitor-exit v1

    .line 7060
    return-void

    .line 7059
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public setInputFilter(Landroid/view/IInputFilter;)V
    .registers 4
    .param p1, "filter"    # Landroid/view/IInputFilter;

    .prologue
    .line 6793
    const-string v0, "android.permission.FILTER_EVENTS"

    const-string v1, "setInputFilter()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 6794
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires FILTER_EVENTS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 6796
    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1}, Lcom/android/server/input/InputManagerService;->setInputFilter(Landroid/view/IInputFilter;)V

    .line 6797
    return-void
.end method

.method setInputMethodAnimLayerAdjustment(I)V
    .registers 8
    .param p1, "adj"    # I

    .prologue
    .line 1941
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodAnimLayerAdjustment:I

    .line 1942
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodWindow:Lcom/android/server/wm/WindowState;

    .line 1943
    .local v2, "imw":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_27

    .line 1944
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mLayer:I

    add-int/2addr v5, p1

    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    .line 1947
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 1948
    .local v3, "wi":I
    :goto_13
    if-lez v3, :cond_27

    .line 1949
    add-int/lit8 v3, v3, -0x1

    .line 1950
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mChildWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/wm/WindowState;

    .line 1951
    .local v0, "cw":Lcom/android/server/wm/WindowState;
    iget-object v4, v0, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v0, Lcom/android/server/wm/WindowState;->mLayer:I

    add-int/2addr v5, p1

    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto :goto_13

    .line 1956
    .end local v0    # "cw":Lcom/android/server/wm/WindowState;
    .end local v3    # "wi":I
    :cond_27
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 1957
    .local v1, "di":I
    :goto_2d
    if-lez v1, :cond_41

    .line 1958
    add-int/lit8 v1, v1, -0x1

    .line 1959
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInputMethodDialogs:Ljava/util/ArrayList;

    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    .end local v2    # "imw":Lcom/android/server/wm/WindowState;
    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 1960
    .restart local v2    # "imw":Lcom/android/server/wm/WindowState;
    iget-object v4, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mLayer:I

    add-int/2addr v5, p1

    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto :goto_2d

    .line 1964
    :cond_41
    return-void
.end method

.method setInsetsWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;ILandroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Region;)V
    .registers 13
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "touchableInsets"    # I
    .param p4, "contentInsets"    # Landroid/graphics/Rect;
    .param p5, "visibleInsets"    # Landroid/graphics/Rect;
    .param p6, "touchableRegion"    # Landroid/graphics/Region;

    .prologue
    .line 3273
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3275
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_4f

    .line 3276
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 3277
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_47

    .line 3278
    const/4 v3, 0x0

    iput-boolean v3, v2, Lcom/android/server/wm/WindowState;->mGivenInsetsPending:Z

    .line 3279
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    invoke-virtual {v3, p4}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3280
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    invoke-virtual {v3, p5}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    .line 3281
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    invoke-virtual {v3, p6}, Landroid/graphics/Region;->set(Landroid/graphics/Region;)Z

    .line 3282
    iput p3, v2, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    .line 3283
    iget v3, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    const/high16 v5, 0x3f800000

    cmpl-float v3, v3, v5

    if-eqz v3, :cond_3f

    .line 3284
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenContentInsets:Landroid/graphics/Rect;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v3, v5}, Landroid/graphics/Rect;->scale(F)V

    .line 3285
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenVisibleInsets:Landroid/graphics/Rect;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v3, v5}, Landroid/graphics/Rect;->scale(F)V

    .line 3286
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    iget v5, v2, Lcom/android/server/wm/WindowState;->mGlobalScale:F

    invoke-virtual {v3, v5}, Landroid/graphics/Region;->scale(F)V

    .line 3288
    :cond_3f
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v5, 0x1

    iput-boolean v5, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3289
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 3291
    :cond_47
    monitor-exit v4
    :try_end_48
    .catchall {:try_start_8 .. :try_end_48} :catchall_4c

    .line 3293
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3295
    return-void

    .line 3291
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_4c
    move-exception v3

    :try_start_4d
    monitor-exit v4
    :try_end_4e
    .catchall {:try_start_4d .. :try_end_4e} :catchall_4c

    :try_start_4e
    throw v3
    :try_end_4f
    .catchall {:try_start_4e .. :try_end_4f} :catchall_4f

    .line 3293
    :catchall_4f
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public setMagnificationCallbacks(Landroid/view/IMagnificationCallbacks;)V
    .registers 5
    .param p1, "callbacks"    # Landroid/view/IMagnificationCallbacks;

    .prologue
    .line 3931
    const-string v0, "android.permission.MAGNIFY_DISPLAY"

    const-string v1, "setMagnificationCallbacks()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 3933
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MAGNIFY_DISPLAY permission."

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3935
    :cond_12
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 3936
    :try_start_15
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-nez v0, :cond_22

    .line 3937
    new-instance v0, Lcom/android/server/wm/DisplayMagnifier;

    invoke-direct {v0, p0, p1}, Lcom/android/server/wm/DisplayMagnifier;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/view/IMagnificationCallbacks;)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    .line 3948
    :cond_20
    :goto_20
    monitor-exit v1

    .line 3949
    return-void

    .line 3939
    :cond_22
    if-nez p1, :cond_34

    .line 3940
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v0, :cond_20

    .line 3941
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayMagnifier;->destroyLocked()V

    .line 3942
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    goto :goto_20

    .line 3948
    :catchall_31
    move-exception v0

    monitor-exit v1
    :try_end_33
    .catchall {:try_start_15 .. :try_end_33} :catchall_31

    throw v0

    .line 3945
    :cond_34
    :try_start_34
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v2, "Magnification callbacks already set!"

    invoke-direct {v0, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0
    :try_end_3c
    .catchall {:try_start_34 .. :try_end_3c} :catchall_31
.end method

.method public setMagnificationSpec(Landroid/view/MagnificationSpec;)V
    .registers 5
    .param p1, "spec"    # Landroid/view/MagnificationSpec;

    .prologue
    .line 3889
    const-string v0, "android.permission.MAGNIFY_DISPLAY"

    const-string v1, "setMagnificationSpec()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 3891
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MAGNIFY_DISPLAY permission."

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3893
    :cond_12
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 3894
    :try_start_15
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v0, :cond_2d

    .line 3895
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/DisplayMagnifier;->setMagnificationSpecLocked(Landroid/view/MagnificationSpec;)V

    .line 3899
    monitor-exit v1
    :try_end_1f
    .catchall {:try_start_15 .. :try_end_1f} :catchall_35

    .line 3900
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-eq v0, v1, :cond_2c

    .line 3901
    invoke-virtual {p1}, Landroid/view/MagnificationSpec;->recycle()V

    .line 3903
    :cond_2c
    return-void

    .line 3897
    :cond_2d
    :try_start_2d
    new-instance v0, Ljava/lang/IllegalStateException;

    const-string v2, "Magnification callbacks not set!"

    invoke-direct {v0, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3899
    :catchall_35
    move-exception v0

    monitor-exit v1
    :try_end_37
    .catchall {:try_start_2d .. :try_end_37} :catchall_35

    throw v0
.end method

.method public setMonitorChannelFilter(Landroid/view/InputChannel;I)V
    .registers 4
    .param p1, "inputChannel"    # Landroid/view/InputChannel;
    .param p2, "monitorFilter"    # I

    .prologue
    .line 6737
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/input/InputManagerService;->setMonitorChannelFilter(Landroid/view/InputChannel;I)V

    .line 6738
    return-void
.end method

.method public setMultiWindowTrayOpenState(Z)V
    .registers 3
    .param p1, "open"    # Z

    .prologue
    .line 8596
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->setMultiWindowTrayOpenState(Z)V

    .line 8597
    return-void
.end method

.method public setNewConfiguration(Landroid/content/res/Configuration;)V
    .registers 4
    .param p1, "config"    # Landroid/content/res/Configuration;

    .prologue
    .line 4715
    const-string v0, "android.permission.MANAGE_APP_TOKENS"

    const-string v1, "setNewConfiguration()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 4717
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4720
    :cond_12
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 4721
    :try_start_15
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0, p1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mCurConfiguration:Landroid/content/res/Configuration;

    .line 4722
    iget-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    if-eqz v0, :cond_27

    .line 4723
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 4724
    const-string v0, "new-config"

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 4726
    :cond_27
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 4727
    monitor-exit v1

    .line 4728
    return-void

    .line 4727
    :catchall_2c
    move-exception v0

    monitor-exit v1
    :try_end_2e
    .catchall {:try_start_15 .. :try_end_2e} :catchall_2c

    throw v0
.end method

.method public setOnHardKeyboardStatusChangeListener(Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;)V
    .registers 4
    .param p1, "listener"    # Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

    .prologue
    .line 8417
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 8418
    :try_start_3
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mHardKeyboardStatusChangeListener:Lcom/android/server/wm/WindowManagerService$OnHardKeyboardStatusChangeListener;

    .line 8419
    monitor-exit v1

    .line 8420
    return-void

    .line 8419
    :catchall_7
    move-exception v0

    monitor-exit v1
    :try_end_9
    .catchall {:try_start_3 .. :try_end_9} :catchall_7

    throw v0
.end method

.method public setOverscan(IIIII)V
    .registers 15
    .param p1, "displayId"    # I
    .param p2, "left"    # I
    .param p3, "top"    # I
    .param p4, "right"    # I
    .param p5, "bottom"    # I

    .prologue
    .line 9584
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v2, "android.permission.WRITE_SECURE_SETTINGS"

    invoke-virtual {v0, v2}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 9587
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Must hold permission android.permission.WRITE_SECURE_SETTINGS"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9590
    :cond_12
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9592
    .local v6, "ident":J
    :try_start_16
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_2f

    .line 9593
    :try_start_19
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->getDisplayContentLocked(I)Lcom/android/server/wm/DisplayContent;

    move-result-object v1

    .line 9594
    .local v1, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-eqz v1, :cond_27

    move-object v0, p0

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    .line 9595
    invoke-direct/range {v0 .. v5}, Lcom/android/server/wm/WindowManagerService;->setOverscanLocked(Lcom/android/server/wm/DisplayContent;IIII)V

    .line 9597
    :cond_27
    monitor-exit v8
    :try_end_28
    .catchall {:try_start_19 .. :try_end_28} :catchall_2c

    .line 9599
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9601
    return-void

    .line 9597
    .end local v1    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :catchall_2c
    move-exception v0

    :try_start_2d
    monitor-exit v8
    :try_end_2e
    .catchall {:try_start_2d .. :try_end_2e} :catchall_2c

    :try_start_2e
    throw v0
    :try_end_2f
    .catchall {:try_start_2e .. :try_end_2f} :catchall_2f

    .line 9599
    :catchall_2f
    move-exception v0

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public setRequestLayout(Z)V
    .registers 2
    .param p1, "requestLayout"    # Z

    .prologue
    .line 8575
    iput-boolean p1, p0, Lcom/android/server/wm/WindowManagerService;->mRequestLayout:Z

    .line 8576
    return-void
.end method

.method public setSpecialKeysFilter(Landroid/os/IBinder;)V
    .registers 4
    .param p1, "binder"    # Landroid/os/IBinder;

    .prologue
    .line 12123
    const-string v0, "com.vmware.mvp.permission.GRAB_HOME_KEY"

    const-string v1, "setSpecialKeysFilter()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_12

    .line 12125
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires GRAB_HOME_KEY permission"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 12128
    :cond_12
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->setSpecialKeysFilter(Landroid/os/IBinder;)V

    .line 12129
    return-void
.end method

.method public setStackBound(ILandroid/graphics/Rect;)V
    .registers 9
    .param p1, "stackId"    # I
    .param p2, "bound"    # Landroid/graphics/Rect;

    .prologue
    .line 12860
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 12861
    :try_start_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/TaskStack;

    .line 12862
    .local v1, "taskStack":Lcom/android/server/wm/TaskStack;
    if-eqz v1, :cond_58

    .line 12863
    iget-object v2, v1, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v2}, Lcom/android/server/wm/StackBox;->isFloatingStackBox()Z

    move-result v2

    if-nez v2, :cond_39

    .line 12864
    new-instance v2, Ljava/lang/IllegalStateException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "This stack box("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v5, v1, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ") is not floating"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v2, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 12876
    .end local v1    # "taskStack":Lcom/android/server/wm/TaskStack;
    :catchall_36
    move-exception v2

    monitor-exit v3
    :try_end_38
    .catchall {:try_start_3 .. :try_end_38} :catchall_36

    throw v2

    .line 12866
    .restart local v1    # "taskStack":Lcom/android/server/wm/TaskStack;
    :cond_39
    :try_start_39
    iget-object v2, v1, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/StackBox;->getStackBounds(I)Landroid/graphics/Rect;

    move-result-object v0

    .line 12867
    .local v0, "oldBound":Landroid/graphics/Rect;
    iget-object v2, v1, Lcom/android/server/wm/TaskStack;->mStackBox:Lcom/android/server/wm/StackBox;

    const/4 v4, 0x0

    invoke-virtual {v2, p2, v4}, Lcom/android/server/wm/StackBox;->setStackBoxSizes(Landroid/graphics/Rect;Z)Z

    .line 12869
    invoke-virtual {p2, v0}, Landroid/graphics/Rect;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_4e

    .line 12870
    invoke-direct {p0, v1}, Lcom/android/server/wm/WindowManagerService;->assignMultiWindowScaleLocked(Lcom/android/server/wm/TaskStack;)V

    .line 12873
    :cond_4e
    invoke-virtual {v1}, Lcom/android/server/wm/TaskStack;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v2

    const/4 v4, 0x1

    iput-boolean v4, v2, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 12874
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->requestTraversalLocked()V

    .line 12876
    .end local v0    # "oldBound":Landroid/graphics/Rect;
    :cond_58
    monitor-exit v3
    :try_end_59
    .catchall {:try_start_39 .. :try_end_59} :catchall_36

    .line 12877
    return-void
.end method

.method public setStrictModeVisualIndicatorPreference(Ljava/lang/String;)V
    .registers 3
    .param p1, "value"    # Ljava/lang/String;

    .prologue
    .line 7116
    const-string v0, "persist.sys.strictmode.visual"

    invoke-static {v0, p1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 7117
    return-void
.end method

.method setTokenVisibilityLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;ZIZ)Z
    .registers 17
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "lp"    # Landroid/view/WindowManager$LayoutParams;
    .param p3, "visible"    # Z
    .param p4, "transit"    # I
    .param p5, "performLayout"    # Z

    .prologue
    .line 5311
    const/4 v2, 0x0

    .line 5313
    .local v2, "delayed":Z
    iget-boolean v8, p1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    if-ne v8, p3, :cond_d

    .line 5314
    if-nez p3, :cond_5c

    const/4 v8, 0x1

    :goto_8
    iput-boolean v8, p1, Lcom/android/server/wm/AppWindowToken;->clientHidden:Z

    .line 5315
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->sendAppVisibilityToClients()V

    .line 5318
    :cond_d
    const/4 v8, 0x0

    iput-boolean v8, p1, Lcom/android/server/wm/AppWindowToken;->willBeHidden:Z

    .line 5319
    iget-boolean v8, p1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    if-ne v8, p3, :cond_d1

    .line 5320
    const/4 v1, 0x0

    .line 5325
    .local v1, "changed":Z
    const/4 v4, 0x0

    .line 5327
    .local v4, "runningAppAnimation":Z
    const/4 v8, -0x1

    if-eq p4, v8, :cond_44

    .line 5328
    iget-object v8, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v8, v8, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    sget-object v9, Lcom/android/server/wm/AppWindowAnimator;->sDummyAnimation:Landroid/view/animation/Animation;

    if-ne v8, v9, :cond_26

    .line 5329
    iget-object v8, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    const/4 v9, 0x0

    iput-object v9, v8, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    .line 5331
    :cond_26
    invoke-direct {p0, p1, p2, p4, p3}, Lcom/android/server/wm/WindowManagerService;->applyAnimationLocked(Lcom/android/server/wm/AppWindowToken;Landroid/view/WindowManager$LayoutParams;IZ)Z

    move-result v8

    if-eqz v8, :cond_2e

    .line 5332
    const/4 v4, 0x1

    move v2, v4

    .line 5334
    .end local v2    # "delayed":Z
    :cond_2e
    invoke-virtual {p1}, Lcom/android/server/wm/AppWindowToken;->findMainWindow()Lcom/android/server/wm/WindowState;

    move-result-object v7

    .line 5336
    .local v7, "window":Lcom/android/server/wm/WindowState;
    if-eqz v7, :cond_43

    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v8, :cond_43

    invoke-virtual {v7}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v8

    if-nez v8, :cond_43

    .line 5338
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    invoke-virtual {v8, v7, p4}, Lcom/android/server/wm/DisplayMagnifier;->onAppWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 5340
    :cond_43
    const/4 v1, 0x1

    .line 5343
    .end local v7    # "window":Lcom/android/server/wm/WindowState;
    :cond_44
    iget-object v8, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 5344
    .local v0, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_4b
    if-ge v3, v0, :cond_ac

    .line 5345
    iget-object v8, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v8, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 5346
    .local v6, "win":Lcom/android/server/wm/WindowState;
    iget-object v8, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    if-ne v6, v8, :cond_5e

    .line 5344
    :cond_59
    :goto_59
    add-int/lit8 v3, v3, 0x1

    goto :goto_4b

    .line 5314
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v3    # "i":I
    .end local v4    # "runningAppAnimation":Z
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    .restart local v2    # "delayed":Z
    :cond_5c
    const/4 v8, 0x0

    goto :goto_8

    .line 5352
    .end local v2    # "delayed":Z
    .restart local v0    # "N":I
    .restart local v1    # "changed":Z
    .restart local v3    # "i":I
    .restart local v4    # "runningAppAnimation":Z
    .restart local v6    # "win":Lcom/android/server/wm/WindowState;
    :cond_5e
    if-eqz p3, :cond_86

    .line 5353
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v8

    if-nez v8, :cond_59

    .line 5354
    if-nez v4, :cond_7f

    .line 5355
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v9, 0x1

    const/4 v10, 0x1

    invoke-virtual {v8, v9, v10}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 5358
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v8, :cond_7f

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v8

    if-nez v8, :cond_7f

    .line 5360
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    const/4 v9, 0x1

    invoke-virtual {v8, v6, v9}, Lcom/android/server/wm/DisplayMagnifier;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 5364
    :cond_7f
    const/4 v1, 0x1

    .line 5365
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v9, 0x1

    iput-boolean v9, v8, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    goto :goto_59

    .line 5367
    :cond_86
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->isVisibleNow()Z

    move-result v8

    if-eqz v8, :cond_59

    .line 5368
    if-nez v4, :cond_a5

    .line 5369
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v9, 0x2

    const/4 v10, 0x0

    invoke-virtual {v8, v9, v10}, Lcom/android/server/wm/WindowStateAnimator;->applyAnimationLocked(IZ)Z

    .line 5372
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v8, :cond_a5

    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getDisplayId()I

    move-result v8

    if-nez v8, :cond_a5

    .line 5374
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    const/4 v9, 0x2

    invoke-virtual {v8, v6, v9}, Lcom/android/server/wm/DisplayMagnifier;->onWindowTransitionLocked(Lcom/android/server/wm/WindowState;I)V

    .line 5378
    :cond_a5
    const/4 v1, 0x1

    .line 5379
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v9, 0x1

    iput-boolean v9, v8, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    goto :goto_59

    .line 5383
    .end local v6    # "win":Lcom/android/server/wm/WindowState;
    :cond_ac
    if-nez p3, :cond_f8

    const/4 v8, 0x1

    :goto_af
    iput-boolean v8, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    iput-boolean v8, p1, Lcom/android/server/wm/AppWindowToken;->hidden:Z

    .line 5384
    if-nez p3, :cond_fa

    .line 5385
    const/4 v8, 0x1

    const/4 v9, 0x1

    invoke-virtual {p0, p1, v8, v9}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 5400
    :cond_ba
    :goto_ba
    if-eqz v1, :cond_d1

    .line 5401
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    invoke-virtual {v8}, Lcom/android/server/wm/InputMonitor;->setUpdateInputWindowsNeededLw()V

    .line 5402
    if-eqz p5, :cond_cb

    .line 5403
    const/4 v8, 0x3

    const/4 v9, 0x0

    invoke-direct {p0, v8, v9}, Lcom/android/server/wm/WindowManagerService;->updateFocusedWindowLocked(IZ)Z

    .line 5405
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 5407
    :cond_cb
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputMonitor:Lcom/android/server/wm/InputMonitor;

    const/4 v9, 0x0

    invoke-virtual {v8, v9}, Lcom/android/server/wm/InputMonitor;->updateInputWindowsLw(Z)V

    .line 5411
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v3    # "i":I
    .end local v4    # "runningAppAnimation":Z
    :cond_d1
    iget-object v8, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-object v8, v8, Lcom/android/server/wm/AppWindowAnimator;->animation:Landroid/view/animation/Animation;

    if-eqz v8, :cond_d8

    .line 5412
    const/4 v2, 0x1

    .line 5415
    :cond_d8
    iget-object v8, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v8}, Lcom/android/server/wm/WindowList;->size()I

    move-result v8

    add-int/lit8 v3, v8, -0x1

    .restart local v3    # "i":I
    :goto_e0
    if-ltz v3, :cond_10b

    if-nez v2, :cond_10b

    .line 5416
    iget-object v8, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v8, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    iget-object v8, v8, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v8}, Lcom/android/server/wm/WindowStateAnimator;->isWindowAnimating()Z

    move-result v8

    if-eqz v8, :cond_f5

    .line 5417
    const/4 v2, 0x1

    .line 5415
    :cond_f5
    add-int/lit8 v3, v3, -0x1

    goto :goto_e0

    .line 5383
    .restart local v0    # "N":I
    .restart local v1    # "changed":Z
    .restart local v4    # "runningAppAnimation":Z
    :cond_f8
    const/4 v8, 0x0

    goto :goto_af

    .line 5389
    :cond_fa
    iget-object v5, p1, Lcom/android/server/wm/AppWindowToken;->startingWindow:Lcom/android/server/wm/WindowState;

    .line 5390
    .local v5, "swin":Lcom/android/server/wm/WindowState;
    if-eqz v5, :cond_ba

    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isDrawnLw()Z

    move-result v8

    if-nez v8, :cond_ba

    .line 5391
    const/4 v8, 0x0

    iput-boolean v8, v5, Lcom/android/server/wm/WindowState;->mPolicyVisibility:Z

    .line 5392
    const/4 v8, 0x0

    iput-boolean v8, v5, Lcom/android/server/wm/WindowState;->mPolicyVisibilityAfterAnim:Z

    goto :goto_ba

    .line 5421
    .end local v0    # "N":I
    .end local v1    # "changed":Z
    .end local v4    # "runningAppAnimation":Z
    .end local v5    # "swin":Lcom/android/server/wm/WindowState;
    :cond_10b
    return v2
.end method

.method public setTouchExplorationEnabled(Z)V
    .registers 3
    .param p1, "enabled"    # Z

    .prologue
    .line 6801
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->setTouchExplorationEnabled(Z)V

    .line 6802
    return-void
.end method

.method setTransparentRegionWindow(Lcom/android/server/wm/Session;Landroid/view/IWindow;Landroid/graphics/Region;)V
    .registers 10
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "region"    # Landroid/graphics/Region;

    .prologue
    .line 3257
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 3259
    .local v0, "origId":J
    :try_start_4
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4
    :try_end_7
    .catchall {:try_start_4 .. :try_end_7} :catchall_27

    .line 3260
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, p1, p2, v3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 3261
    .local v2, "w":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_1f

    iget-boolean v3, v2, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v3, :cond_1f

    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v3, v3, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v5, 0x834

    if-eq v3, v5, :cond_1f

    .line 3262
    iget-object v3, v2, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v3, p3}, Lcom/android/server/wm/WindowStateAnimator;->setTransparentRegionHintLocked(Landroid/graphics/Region;)V

    .line 3264
    :cond_1f
    monitor-exit v4
    :try_end_20
    .catchall {:try_start_8 .. :try_end_20} :catchall_24

    .line 3266
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 3268
    return-void

    .line 3264
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :catchall_24
    move-exception v3

    :try_start_25
    monitor-exit v4
    :try_end_26
    .catchall {:try_start_25 .. :try_end_26} :catchall_24

    :try_start_26
    throw v3
    :try_end_27
    .catchall {:try_start_26 .. :try_end_27} :catchall_27

    .line 3266
    :catchall_27
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public setUniverseTransformLocked(Lcom/android/server/wm/WindowState;FFFFFFF)V
    .registers 19
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "alpha"    # F
    .param p3, "offx"    # F
    .param p4, "offy"    # F
    .param p5, "dsdx"    # F
    .param p6, "dtdx"    # F
    .param p7, "dsdy"    # F
    .param p8, "dtdy"    # F

    .prologue
    .line 3387
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget-object v9, v0, Lcom/android/server/wm/WindowStateAnimator;->mUniverseTransform:Landroid/view/animation/Transformation;

    .line 3388
    .local v9, "transform":Landroid/view/animation/Transformation;
    invoke-virtual {v9, p2}, Landroid/view/animation/Transformation;->setAlpha(F)V

    .line 3389
    invoke-virtual {v9}, Landroid/view/animation/Transformation;->getMatrix()Landroid/graphics/Matrix;

    move-result-object v8

    .line 3390
    .local v8, "matrix":Landroid/graphics/Matrix;
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    invoke-virtual {v8, v0}, Landroid/graphics/Matrix;->getValues([F)V

    .line 3391
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    const/4 v1, 0x2

    aput p3, v0, v1

    .line 3392
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    const/4 v1, 0x5

    aput p4, v0, v1

    .line 3393
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    const/4 v1, 0x0

    aput p5, v0, v1

    .line 3394
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    const/4 v1, 0x3

    aput p6, v0, v1

    .line 3395
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    const/4 v1, 0x1

    aput p7, v0, v1

    .line 3396
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    const/4 v1, 0x4

    aput p8, v0, v1

    .line 3397
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mTmpFloats:[F

    invoke-virtual {v8, v0}, Landroid/graphics/Matrix;->setValues([F)V

    .line 3398
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v0}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v7

    .line 3399
    .local v7, "displayInfo":Landroid/view/DisplayInfo;
    new-instance v6, Landroid/graphics/RectF;

    const/4 v0, 0x0

    const/4 v1, 0x0

    iget v2, v7, Landroid/view/DisplayInfo;->logicalWidth:I

    int-to-float v2, v2

    iget v3, v7, Landroid/view/DisplayInfo;->logicalHeight:I

    int-to-float v3, v3

    invoke-direct {v6, v0, v1, v2, v3}, Landroid/graphics/RectF;-><init>(FFFF)V

    .line 3401
    .local v6, "dispRect":Landroid/graphics/RectF;
    invoke-virtual {v8, v6}, Landroid/graphics/Matrix;->mapRect(Landroid/graphics/RectF;)Z

    .line 3402
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    const/4 v1, 0x0

    const/4 v2, 0x0

    iget v3, v7, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v4, v7, Landroid/view/DisplayInfo;->logicalHeight:I

    invoke-virtual {v0, v1, v2, v3, v4}, Landroid/graphics/Region;->set(IIII)Z

    .line 3404
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mGivenTouchableRegion:Landroid/graphics/Region;

    iget v1, v6, Landroid/graphics/RectF;->left:F

    float-to-int v1, v1

    iget v2, v6, Landroid/graphics/RectF;->top:F

    float-to-int v2, v2

    iget v3, v6, Landroid/graphics/RectF;->right:F

    float-to-int v3, v3

    iget v4, v6, Landroid/graphics/RectF;->bottom:F

    float-to-int v4, v4

    sget-object v5, Landroid/graphics/Region$Op;->DIFFERENCE:Landroid/graphics/Region$Op;

    invoke-virtual/range {v0 .. v5}, Landroid/graphics/Region;->op(IIIILandroid/graphics/Region$Op;)Z

    .line 3406
    const/4 v0, 0x3

    iput v0, p1, Lcom/android/server/wm/WindowState;->mTouchableInsets:I

    .line 3407
    iget-object v0, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    const/4 v1, 0x1

    iput-boolean v1, v0, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 3408
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 3409
    return-void
.end method

.method setWallpaperAnimLayerAdjustmentLocked(I)V
    .registers 8
    .param p1, "adj"    # I

    .prologue
    .line 2506
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperAnimLayerAdjustment:I

    .line 2507
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 2508
    .local v0, "curTokenIndex":I
    :cond_8
    if-lez v0, :cond_2e

    .line 2509
    add-int/lit8 v0, v0, -0x1

    .line 2510
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowToken;

    .line 2511
    .local v2, "token":Lcom/android/server/wm/WindowToken;
    iget-object v4, v2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 2512
    .local v1, "curWallpaperIndex":I
    :goto_1a
    if-lez v1, :cond_8

    .line 2513
    add-int/lit8 v1, v1, -0x1

    .line 2514
    iget-object v4, v2, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 2515
    .local v3, "wallpaper":Lcom/android/server/wm/WindowState;
    iget-object v4, v3, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    iget v5, v3, Lcom/android/server/wm/WindowState;->mLayer:I

    add-int/2addr v5, p1

    iput v5, v4, Lcom/android/server/wm/WindowStateAnimator;->mAnimLayer:I

    goto :goto_1a

    .line 2520
    .end local v1    # "curWallpaperIndex":I
    .end local v2    # "token":Lcom/android/server/wm/WindowToken;
    .end local v3    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_2e
    return-void
.end method

.method public setWindowWallpaperPositionLocked(Lcom/android/server/wm/WindowState;FFFF)V
    .registers 7
    .param p1, "window"    # Lcom/android/server/wm/WindowState;
    .param p2, "x"    # F
    .param p3, "y"    # F
    .param p4, "xStep"    # F
    .param p5, "yStep"    # F

    .prologue
    .line 3335
    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    cmpl-float v0, v0, p2

    if-nez v0, :cond_c

    iget v0, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    cmpl-float v0, v0, p3

    if-eqz v0, :cond_18

    .line 3336
    :cond_c
    iput p2, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    .line 3337
    iput p3, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    .line 3338
    iput p4, p1, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    .line 3339
    iput p5, p1, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    .line 3340
    const/4 v0, 0x1

    invoke-virtual {p0, p1, v0}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V

    .line 3342
    :cond_18
    return-void
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .registers 6
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .prologue
    .line 7010
    const/4 v0, 0x0

    .line 7011
    .local v0, "first":Z
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v2

    .line 7020
    :try_start_4
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mAllowBootMessages:Z

    if-nez v1, :cond_a

    .line 7021
    monitor-exit v2

    .line 7038
    :cond_9
    :goto_9
    return-void

    .line 7023
    :cond_a
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    if-nez v1, :cond_16

    .line 7024
    if-nez p2, :cond_15

    .line 7025
    monitor-exit v2

    goto :goto_9

    .line 7034
    :catchall_12
    move-exception v1

    monitor-exit v2
    :try_end_14
    .catchall {:try_start_4 .. :try_end_14} :catchall_12

    throw v1

    .line 7027
    :cond_15
    const/4 v0, 0x1

    .line 7029
    :cond_16
    :try_start_16
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mSystemBooted:Z

    if-eqz v1, :cond_1c

    .line 7030
    monitor-exit v2

    goto :goto_9

    .line 7032
    :cond_1c
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mShowingBootMessages:Z

    .line 7033
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v1, p1, p2}, Landroid/view/WindowManagerPolicy;->showBootMessage(Ljava/lang/CharSequence;Z)V

    .line 7034
    monitor-exit v2
    :try_end_25
    .catchall {:try_start_16 .. :try_end_25} :catchall_12

    .line 7035
    if-eqz v0, :cond_9

    .line 7036
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->performEnableScreen()V

    goto :goto_9
.end method

.method public showStrictModeViolation(Z)V
    .registers 7
    .param p1, "on"    # Z

    .prologue
    .line 7066
    iget-boolean v1, p0, Lcom/android/server/wm/WindowManagerService;->mHeadless:Z

    if-eqz v1, :cond_5

    .line 7069
    :goto_4
    return-void

    .line 7067
    :cond_5
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 7068
    .local v0, "pid":I
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x19

    if-eqz p1, :cond_1a

    const/4 v1, 0x1

    :goto_12
    invoke-virtual {v3, v4, v1, v0}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(III)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v2, v1}, Lcom/android/server/wm/WindowManagerService$H;->sendMessage(Landroid/os/Message;)Z

    goto :goto_4

    :cond_1a
    const/4 v1, 0x0

    goto :goto_12
.end method

.method public shutdown()V
    .registers 3

    .prologue
    .line 6753
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const/4 v1, 0x1

    invoke-static {v0, v1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Z)V

    .line 6754
    return-void
.end method

.method public shutdown(Z)V
    .registers 3
    .param p1, "confirm"    # Z

    .prologue
    .line 6759
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0, p1}, Lcom/android/server/power/ShutdownThread;->shutdown(Landroid/content/Context;Z)V

    .line 6760
    return-void
.end method

.method public startAppFreezingScreen(Landroid/os/IBinder;I)V
    .registers 10
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "configChanges"    # I

    .prologue
    .line 5580
    const-string v3, "android.permission.MANAGE_APP_TOKENS"

    const-string v4, "setAppFreezingScreen()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_12

    .line 5582
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 5585
    :cond_12
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 5586
    if-nez p2, :cond_1f

    :try_start_17
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->okToDisplay()Z

    move-result v3

    if-eqz v3, :cond_1f

    .line 5588
    monitor-exit v4

    .line 5600
    :goto_1e
    return-void

    .line 5591
    :cond_1f
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v2

    .line 5592
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_29

    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-nez v3, :cond_46

    .line 5593
    :cond_29
    const-string v3, "WindowManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Attempted to freeze screen with non-existing app token: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5594
    monitor-exit v4

    goto :goto_1e

    .line 5599
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_43
    move-exception v3

    monitor-exit v4
    :try_end_45
    .catchall {:try_start_17 .. :try_end_45} :catchall_43

    throw v3

    .line 5596
    .restart local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :cond_46
    :try_start_46
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5597
    .local v0, "origId":J
    invoke-virtual {p0, v2, p2}, Lcom/android/server/wm/WindowManagerService;->startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;I)V

    .line 5598
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5599
    monitor-exit v4
    :try_end_51
    .catchall {:try_start_46 .. :try_end_51} :catchall_43

    goto :goto_1e
.end method

.method public startAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;I)V
    .registers 11
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "configChanges"    # I

    .prologue
    const/16 v7, 0x11

    const/4 v6, 0x1

    const/4 v4, 0x0

    .line 5559
    iget-boolean v3, p1, Lcom/android/server/wm/AppWindowToken;->hiddenRequested:Z

    if-nez v3, :cond_45

    .line 5560
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v3, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-nez v3, :cond_2f

    .line 5561
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput-boolean v6, v3, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    .line 5562
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput v4, v3, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    .line 5563
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    add-int/lit8 v3, v3, 0x1

    iput v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 5564
    iget v3, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    if-ne v3, v6, :cond_2f

    .line 5565
    invoke-direct {p0, v4, v4, v4}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 5566
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    invoke-virtual {v3, v7}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 5567
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v4, 0x1388

    invoke-virtual {v3, v7, v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 5570
    :cond_2f
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 5571
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_36
    if-ge v1, v0, :cond_45

    .line 5572
    iget-object v3, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v3, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/WindowState;

    .line 5573
    .local v2, "w":Lcom/android/server/wm/WindowState;
    iput-boolean v6, v2, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    .line 5571
    add-int/lit8 v1, v1, 0x1

    goto :goto_36

    .line 5576
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "w":Lcom/android/server/wm/WindowState;
    :cond_45
    return-void
.end method

.method public startFreezingScreen(II)V
    .registers 10
    .param p1, "exitAnim"    # I
    .param p2, "enterAnim"    # I

    .prologue
    .line 6414
    const-string v2, "android.permission.FREEZE_SCREEN"

    const-string/jumbo v3, "startFreezingScreen()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_13

    .line 6416
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires FREEZE_SCREEN permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6419
    :cond_13
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 6420
    :try_start_16
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-nez v2, :cond_38

    .line 6421
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 6422
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_20
    .catchall {:try_start_16 .. :try_end_20} :catchall_3f

    move-result-wide v0

    .line 6424
    .local v0, "origId":J
    const/4 v2, 0x0

    :try_start_22
    invoke-direct {p0, v2, p1, p2}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 6425
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    invoke-virtual {v2, v4}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 6426
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v4, 0x1e

    const-wide/16 v5, 0x1388

    invoke-virtual {v2, v4, v5, v6}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z
    :try_end_35
    .catchall {:try_start_22 .. :try_end_35} :catchall_3a

    .line 6428
    :try_start_35
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6431
    .end local v0    # "origId":J
    :cond_38
    monitor-exit v3

    .line 6432
    return-void

    .line 6428
    .restart local v0    # "origId":J
    :catchall_3a
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 6431
    .end local v0    # "origId":J
    :catchall_3f
    move-exception v2

    monitor-exit v3
    :try_end_41
    .catchall {:try_start_35 .. :try_end_41} :catchall_3f

    throw v2
.end method

.method public startViewServer(I)Z
    .registers 6
    .param p1, "port"    # I

    .prologue
    const/4 v1, 0x0

    .line 7770
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v2

    if-eqz v2, :cond_8

    .line 7799
    :cond_7
    :goto_7
    return v1

    .line 7774
    :cond_8
    const-string v2, "android.permission.DUMP"

    const-string/jumbo v3, "startViewServer"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_7

    .line 7778
    const/16 v2, 0x400

    if-lt p1, v2, :cond_7

    .line 7782
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v2, :cond_33

    .line 7783
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v2}, Lcom/android/server/wm/ViewServer;->isRunning()Z

    move-result v2

    if-nez v2, :cond_7

    .line 7785
    :try_start_23
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v2}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_28
    .catch Ljava/io/IOException; {:try_start_23 .. :try_end_28} :catch_2a

    move-result v1

    goto :goto_7

    .line 7786
    :catch_2a
    move-exception v0

    .line 7787
    .local v0, "e":Ljava/io/IOException;
    const-string v2, "WindowManager"

    const-string v3, "View server did not start"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7

    .line 7794
    .end local v0    # "e":Ljava/io/IOException;
    :cond_33
    :try_start_33
    new-instance v2, Lcom/android/server/wm/ViewServer;

    invoke-direct {v2, p0, p1}, Lcom/android/server/wm/ViewServer;-><init>(Lcom/android/server/wm/WindowManagerService;I)V

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    .line 7795
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v2}, Lcom/android/server/wm/ViewServer;->start()Z
    :try_end_3f
    .catch Ljava/io/IOException; {:try_start_33 .. :try_end_3f} :catch_41

    move-result v1

    goto :goto_7

    .line 7796
    :catch_41
    move-exception v0

    .line 7797
    .restart local v0    # "e":Ljava/io/IOException;
    const-string v2, "WindowManager"

    const-string v3, "View server did not start"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_7
.end method

.method public statusBarVisibilityChanged(I)V
    .registers 4
    .param p1, "visibility"    # I

    .prologue
    .line 11990
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mContext:Landroid/content/Context;

    const-string v1, "android.permission.STATUS_BAR"

    invoke-virtual {v0, v1}, Landroid/content/Context;->checkCallingOrSelfPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_12

    .line 11992
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Caller does not hold permission android.permission.STATUS_BAR"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 11996
    :cond_12
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 11997
    :try_start_15
    iput p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastStatusBarVisibility:I

    .line 11998
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->adjustSystemUiVisibilityLw(I)I

    move-result p1

    .line 11999
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateStatusBarVisibilityLocked(I)V

    .line 12000
    monitor-exit v1

    .line 12001
    return-void

    .line 12000
    :catchall_22
    move-exception v0

    monitor-exit v1
    :try_end_24
    .catchall {:try_start_15 .. :try_end_24} :catchall_22

    throw v0
.end method

.method public stopAppFreezingScreen(Landroid/os/IBinder;Z)V
    .registers 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "force"    # Z

    .prologue
    .line 5604
    const-string v3, "android.permission.MANAGE_APP_TOKENS"

    const-string v4, "setAppFreezingScreen()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_12

    .line 5606
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 5609
    :cond_12
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 5610
    :try_start_15
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->findAppWindowToken(Landroid/os/IBinder;)Lcom/android/server/wm/AppWindowToken;

    move-result-object v2

    .line 5611
    .local v2, "wtoken":Lcom/android/server/wm/AppWindowToken;
    if-eqz v2, :cond_1f

    iget-object v3, v2, Lcom/android/server/wm/AppWindowToken;->appToken:Landroid/view/IApplicationToken;

    if-nez v3, :cond_21

    .line 5612
    :cond_1f
    monitor-exit v4

    .line 5620
    :goto_20
    return-void

    .line 5614
    :cond_21
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5617
    .local v0, "origId":J
    const/4 v3, 0x1

    invoke-virtual {p0, v2, v3, p2}, Lcom/android/server/wm/WindowManagerService;->unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V

    .line 5618
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5619
    monitor-exit v4

    goto :goto_20

    .end local v0    # "origId":J
    .end local v2    # "wtoken":Lcom/android/server/wm/AppWindowToken;
    :catchall_2e
    move-exception v3

    monitor-exit v4
    :try_end_30
    .catchall {:try_start_15 .. :try_end_30} :catchall_2e

    throw v3
.end method

.method public stopFreezingScreen()V
    .registers 5

    .prologue
    .line 6436
    const-string v2, "android.permission.FREEZE_SCREEN"

    const-string/jumbo v3, "stopFreezingScreen()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_13

    .line 6438
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires FREEZE_SCREEN permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6441
    :cond_13
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 6442
    :try_start_16
    iget-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    if-eqz v2, :cond_2b

    .line 6443
    const/4 v2, 0x0

    iput-boolean v2, p0, Lcom/android/server/wm/WindowManagerService;->mClientFreezingScreen:Z

    .line 6444
    const-string v2, "client"

    iput-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 6445
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_24
    .catchall {:try_start_16 .. :try_end_24} :catchall_32

    move-result-wide v0

    .line 6447
    .local v0, "origId":J
    :try_start_25
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V
    :try_end_28
    .catchall {:try_start_25 .. :try_end_28} :catchall_2d

    .line 6449
    :try_start_28
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6452
    .end local v0    # "origId":J
    :cond_2b
    monitor-exit v3

    .line 6453
    return-void

    .line 6449
    .restart local v0    # "origId":J
    :catchall_2d
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 6452
    .end local v0    # "origId":J
    :catchall_32
    move-exception v2

    monitor-exit v3
    :try_end_34
    .catchall {:try_start_28 .. :try_end_34} :catchall_32

    throw v2
.end method

.method public stopViewServer()Z
    .registers 4

    .prologue
    const/4 v0, 0x0

    .line 7817
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 7828
    :cond_7
    :goto_7
    return v0

    .line 7821
    :cond_8
    const-string v1, "android.permission.DUMP"

    const-string/jumbo v2, "stopViewServer"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_7

    .line 7825
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    if-eqz v1, :cond_7

    .line 7826
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mViewServer:Lcom/android/server/wm/ViewServer;

    invoke-virtual {v0}, Lcom/android/server/wm/ViewServer;->stop()Z

    move-result v0

    goto :goto_7
.end method

.method public switchKeyboardLayout(II)V
    .registers 4
    .param p1, "deviceId"    # I
    .param p2, "direction"    # I

    .prologue
    .line 6743
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/input/InputManagerService;->switchKeyboardLayout(II)V

    .line 6744
    return-void
.end method

.method public switchStackBox(I)V
    .registers 7
    .param p1, "stackBoxId"    # I

    .prologue
    .line 6356
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 6357
    :try_start_3
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v1

    .line 6358
    .local v1, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_a
    if-ge v0, v1, :cond_22

    .line 6359
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v2, p1}, Lcom/android/server/wm/DisplayContent;->switchStack(I)Z

    move-result v2

    if-eqz v2, :cond_1f

    .line 6360
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 6361
    monitor-exit v3

    return-void

    .line 6358
    :cond_1f
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .line 6364
    :cond_22
    monitor-exit v3
    :try_end_23
    .catchall {:try_start_3 .. :try_end_23} :catchall_42

    .line 6365
    new-instance v2, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "resizeStack: stackBoxId "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " not found."

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 6364
    .end local v0    # "displayNdx":I
    .end local v1    # "numDisplays":I
    :catchall_42
    move-exception v2

    :try_start_43
    monitor-exit v3
    :try_end_44
    .catchall {:try_start_43 .. :try_end_44} :catchall_42

    throw v2
.end method

.method public systemReady()V
    .registers 2

    .prologue
    .line 8702
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0}, Landroid/view/WindowManagerPolicy;->systemReady()V

    .line 8703
    return-void
.end method

.method public thawRotation()V
    .registers 7

    .prologue
    const/4 v5, 0x0

    .line 7416
    const-string v2, "android.permission.SET_ORIENTATION"

    const-string/jumbo v3, "thawRotation()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_14

    .line 7418
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires SET_ORIENTATION permission"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 7423
    :cond_14
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 7425
    .local v0, "origId":J
    :try_start_18
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    const/4 v3, 0x0

    const/16 v4, 0x309

    invoke-interface {v2, v3, v4}, Landroid/view/WindowManagerPolicy;->setUserRotationMode(II)V
    :try_end_20
    .catchall {:try_start_18 .. :try_end_20} :catchall_27

    .line 7428
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7431
    invoke-virtual {p0, v5, v5}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 7432
    return-void

    .line 7428
    :catchall_27
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public unregisterEasyOneHandWatcher(Landroid/sec/easyonehand/IEasyOneHandWatcher;)V
    .registers 5
    .param p1, "watcher"    # Landroid/sec/easyonehand/IEasyOneHandWatcher;

    .prologue
    .line 4013
    invoke-interface {p1}, Landroid/sec/easyonehand/IEasyOneHandWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    .line 4014
    .local v0, "watcherBinder":Landroid/os/IBinder;
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    if-eqz v1, :cond_1d

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

    if-eqz v1, :cond_1d

    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;

    invoke-interface {v1}, Landroid/sec/easyonehand/IEasyOneHandWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    if-ne v1, v0, :cond_1d

    .line 4019
    :try_start_14
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandDR:Lcom/android/server/wm/WindowManagerService$EasyOneHandDeathRecipient;

    const/4 v2, 0x0

    invoke-interface {v0, v1, v2}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    .line 4020
    const/4 v1, 0x0

    iput-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mEasyOneHandWatcher:Landroid/sec/easyonehand/IEasyOneHandWatcher;
    :try_end_1d
    .catch Ljava/lang/IllegalArgumentException; {:try_start_14 .. :try_end_1d} :catch_1e

    .line 4026
    :cond_1d
    :goto_1d
    return-void

    .line 4021
    :catch_1e
    move-exception v1

    goto :goto_1d
.end method

.method public unregisterPointerEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V
    .registers 3
    .param p1, "listener"    # Landroid/view/WindowManagerPolicy$PointerEventListener;

    .prologue
    .line 6624
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPointerEventDispatcher:Lcom/android/server/wm/PointerEventDispatcher;

    invoke-virtual {v0, p1}, Lcom/android/server/wm/PointerEventDispatcher;->unregisterInputEventListener(Landroid/view/WindowManagerPolicy$PointerEventListener;)V

    .line 6625
    return-void
.end method

.method unsetAppFreezingScreenLocked(Lcom/android/server/wm/AppWindowToken;ZZ)V
    .registers 13
    .param p1, "wtoken"    # Lcom/android/server/wm/AppWindowToken;
    .param p2, "unfreezeSurfaceNow"    # Z
    .param p3, "force"    # Z

    .prologue
    const/4 v6, 0x1

    const/4 v5, 0x0

    .line 5511
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iget-boolean v4, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    if-eqz v4, :cond_5e

    .line 5514
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 5515
    .local v0, "N":I
    const/4 v2, 0x0

    .line 5516
    .local v2, "unfrozeWindows":Z
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_10
    if-ge v1, v0, :cond_38

    .line 5517
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->allAppWindows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v4, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/wm/WindowState;

    .line 5518
    .local v3, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    if-eqz v4, :cond_35

    .line 5519
    iput-boolean v5, v3, Lcom/android/server/wm/WindowState;->mAppFreezing:Z

    .line 5520
    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_2e

    iget-boolean v4, v3, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    if-nez v4, :cond_2e

    .line 5522
    iput-boolean v6, v3, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 5523
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    iput-boolean v5, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 5525
    :cond_2e
    iput v5, v3, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 5526
    const/4 v2, 0x1

    .line 5527
    iget-object v4, v3, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    iput-boolean v6, v4, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 5516
    :cond_35
    add-int/lit8 v1, v1, 0x1

    goto :goto_10

    .line 5530
    .end local v3    # "w":Lcom/android/server/wm/WindowState;
    :cond_38
    if-nez p3, :cond_3c

    if-eqz v2, :cond_54

    .line 5532
    :cond_3c
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    iput-boolean v5, v4, Lcom/android/server/wm/AppWindowAnimator;->freezingScreen:Z

    .line 5533
    iget-object v4, p1, Lcom/android/server/wm/AppWindowToken;->mAppAnimator:Lcom/android/server/wm/AppWindowAnimator;

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v5

    iget-wide v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayFreezeTime:J

    sub-long/2addr v5, v7

    long-to-int v5, v5

    iput v5, v4, Lcom/android/server/wm/AppWindowAnimator;->lastFreezeDuration:I

    .line 5535
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    add-int/lit8 v4, v4, -0x1

    iput v4, p0, Lcom/android/server/wm/WindowManagerService;->mAppsFreezingScreen:I

    .line 5536
    iput-object p1, p0, Lcom/android/server/wm/WindowManagerService;->mLastFinishedFreezeSource:Ljava/lang/Object;

    .line 5538
    :cond_54
    if-eqz p2, :cond_5e

    .line 5539
    if-eqz v2, :cond_5b

    .line 5540
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 5542
    :cond_5b
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->stopFreezingDisplayLocked()V

    .line 5545
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "unfrozeWindows":Z
    :cond_5e
    return-void
.end method

.method public updateAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V
    .registers 5
    .param p1, "requestClass"    # Ljava/lang/String;
    .param p2, "smallView"    # Landroid/widget/RemoteViews;
    .param p3, "bigView"    # Landroid/widget/RemoteViews;

    .prologue
    .line 13630
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2, p3}, Landroid/view/WindowManagerPolicy;->updateAdaptiveEvent(Ljava/lang/String;Landroid/widget/RemoteViews;Landroid/widget/RemoteViews;)V

    .line 13631
    return-void
.end method

.method public updateAppOpsState()V
    .registers 13

    .prologue
    .line 3221
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v8

    .line 3222
    :try_start_3
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 3223
    .local v2, "numDisplays":I
    const/4 v0, 0x0

    .local v0, "displayNdx":I
    :goto_a
    if-ge v0, v2, :cond_48

    .line 3224
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v7, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/DisplayContent;

    invoke-virtual {v7}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 3225
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v3

    .line 3226
    .local v3, "numWindows":I
    const/4 v5, 0x0

    .local v5, "winNdx":I
    :goto_1d
    if-ge v5, v3, :cond_45

    .line 3227
    invoke-virtual {v6, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/wm/WindowState;

    .line 3228
    .local v4, "win":Lcom/android/server/wm/WindowState;
    iget v7, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    const/4 v9, -0x1

    if-eq v7, v9, :cond_40

    .line 3229
    iget-object v7, p0, Lcom/android/server/wm/WindowManagerService;->mAppOps:Landroid/app/AppOpsManager;

    iget v9, v4, Lcom/android/server/wm/WindowState;->mAppOp:I

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningUid()I

    move-result v10

    invoke-virtual {v4}, Lcom/android/server/wm/WindowState;->getOwningPackage()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v7, v9, v10, v11}, Landroid/app/AppOpsManager;->checkOpNoThrow(IILjava/lang/String;)I

    move-result v1

    .line 3231
    .local v1, "mode":I
    if-nez v1, :cond_43

    const/4 v7, 0x1

    :goto_3d
    invoke-virtual {v4, v7}, Lcom/android/server/wm/WindowState;->setAppOpVisibilityLw(Z)V

    .line 3226
    .end local v1    # "mode":I
    :cond_40
    add-int/lit8 v5, v5, 0x1

    goto :goto_1d

    .line 3231
    .restart local v1    # "mode":I
    :cond_43
    const/4 v7, 0x0

    goto :goto_3d

    .line 3223
    .end local v1    # "mode":I
    .end local v4    # "win":Lcom/android/server/wm/WindowState;
    :cond_45
    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    .line 3235
    .end local v3    # "numWindows":I
    .end local v5    # "winNdx":I
    .end local v6    # "windows":Lcom/android/server/wm/WindowList;
    :cond_48
    monitor-exit v8

    .line 3236
    return-void

    .line 3235
    .end local v0    # "displayNdx":I
    .end local v2    # "numDisplays":I
    :catchall_4a
    move-exception v7

    monitor-exit v8
    :try_end_4c
    .catchall {:try_start_3 .. :try_end_4c} :catchall_4a

    throw v7
.end method

.method public updateContextualEvent(Ljava/lang/String;Landroid/widget/RemoteViews;)V
    .registers 4
    .param p1, "requestClass"    # Ljava/lang/String;
    .param p2, "views"    # Landroid/widget/RemoteViews;

    .prologue
    .line 13618
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1, p2}, Landroid/view/WindowManagerPolicy;->updateContextualEvent(Ljava/lang/String;Landroid/widget/RemoteViews;)V

    .line 13619
    return-void
.end method

.method public updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
    .registers 8
    .param p1, "currentConfig"    # Landroid/content/res/Configuration;
    .param p2, "freezeThisOneIfNeeded"    # Landroid/os/IBinder;

    .prologue
    .line 4605
    const-string v3, "android.permission.MANAGE_APP_TOKENS"

    const-string/jumbo v4, "updateOrientationFromAppTokens()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/wm/WindowManagerService;->checkCallingPermission(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_13

    .line 4607
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires MANAGE_APP_TOKENS permission"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 4610
    :cond_13
    const/4 v0, 0x0

    .line 4611
    .local v0, "config":Landroid/content/res/Configuration;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 4613
    .local v1, "ident":J
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 4614
    :try_start_1b
    invoke-direct {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokensLocked(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;

    move-result-object v0

    .line 4616
    monitor-exit v4
    :try_end_20
    .catchall {:try_start_1b .. :try_end_20} :catchall_24

    .line 4618
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4619
    return-object v0

    .line 4616
    :catchall_24
    move-exception v3

    :try_start_25
    monitor-exit v4
    :try_end_26
    .catchall {:try_start_25 .. :try_end_26} :catchall_24

    throw v3
.end method

.method updateOrientationFromAppTokensLocked(Z)Z
    .registers 7
    .param p1, "inTransaction"    # Z

    .prologue
    const/4 v3, 0x0

    .line 4677
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4679
    .local v0, "ident":J
    :try_start_5
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getOrientationFromWindowsLocked()I

    move-result v2

    .line 4680
    .local v2, "req":I
    const/4 v4, -0x1

    if-ne v2, v4, :cond_10

    .line 4681
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getOrientationFromAppTokensLocked()I

    move-result v2

    .line 4684
    :cond_10
    iget v4, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    if-eq v2, v4, :cond_37

    .line 4685
    iput v2, p0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    .line 4688
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4, v2}, Landroid/view/WindowManagerPolicy;->setCurrentOrientationLw(I)V

    .line 4689
    invoke-virtual {p0, p1}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v4

    if-eqz v4, :cond_37

    .line 4692
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissKeyguardOnNextActivity:Z

    if-eqz v3, :cond_2b

    .line 4693
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissKeyguardOnNextActivity:Z

    .line 4694
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->dismissKeyguard()V

    .line 4698
    :cond_2b
    iget-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissCoverUIOnNextActivity:Z

    if-eqz v3, :cond_32

    .line 4699
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/wm/WindowManagerService;->mRequestedDismissCoverUIOnNextActivity:Z
    :try_end_32
    .catchall {:try_start_5 .. :try_end_32} :catchall_3b

    .line 4703
    :cond_32
    const/4 v3, 0x1

    .line 4709
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_36
    return v3

    :cond_37
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_36

    .end local v2    # "req":I
    :catchall_3b
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public updateRotation(ZZ)V
    .registers 3
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .prologue
    .line 7443
    invoke-virtual {p0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->updateRotationUnchecked(ZZ)V

    .line 7444
    return-void
.end method

.method public updateRotationUnchecked(ZZ)V
    .registers 9
    .param p1, "alwaysSendConfiguration"    # Z
    .param p2, "forceRelayout"    # Z

    .prologue
    .line 7478
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v1

    .line 7480
    .local v1, "origId":J
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 7481
    const/4 v3, 0x0

    :try_start_8
    invoke-virtual {p0, v3}, Lcom/android/server/wm/WindowManagerService;->updateRotationUncheckedLocked(Z)Z

    move-result v0

    .line 7482
    .local v0, "changed":Z
    if-eqz v0, :cond_10

    if-eqz p2, :cond_1a

    .line 7483
    :cond_10
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    const/4 v5, 0x1

    iput-boolean v5, v3, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 7484
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->performLayoutAndPlaceSurfacesLocked()V

    .line 7486
    :cond_1a
    monitor-exit v4
    :try_end_1b
    .catchall {:try_start_8 .. :try_end_1b} :catchall_26

    .line 7488
    if-nez v0, :cond_1f

    if-eqz p1, :cond_22

    .line 7489
    :cond_1f
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->sendNewConfiguration()V

    .line 7492
    :cond_22
    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7493
    return-void

    .line 7486
    .end local v0    # "changed":Z
    :catchall_26
    move-exception v3

    :try_start_27
    monitor-exit v4
    :try_end_28
    .catchall {:try_start_27 .. :try_end_28} :catchall_26

    throw v3
.end method

.method public updateRotationUncheckedLocked(Z)Z
    .registers 19
    .param p1, "inTransaction"    # Z

    .prologue
    .line 7503
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mDeferredRotationPauseCount:I

    if-lez v4, :cond_8

    .line 7507
    const/4 v4, 0x0

    .line 7646
    :goto_7
    return v4

    .line 7510
    :cond_8
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v2

    .line 7512
    .local v2, "screenRotationAnimation":Lcom/android/server/wm/ScreenRotationAnimation;
    if-eqz v2, :cond_1b

    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->isAnimating()Z

    move-result v4

    if-eqz v4, :cond_1b

    .line 7517
    const/4 v4, 0x0

    goto :goto_7

    .line 7520
    :cond_1b
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayEnabled:Z

    if-nez v4, :cond_23

    .line 7523
    const/4 v4, 0x0

    goto :goto_7

    .line 7531
    :cond_23
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v4, v5, v6}, Landroid/view/WindowManagerPolicy;->rotationForOrientationLw(II)I

    move-result v3

    .line 7532
    .local v3, "rotation":I
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mForcedAppOrientation:I

    invoke-interface {v4, v5, v3}, Landroid/view/WindowManagerPolicy;->rotationHasCompatibleMetricsLw(II)Z

    move-result v4

    if-nez v4, :cond_50

    const/4 v10, 0x1

    .line 7542
    .local v10, "altOrientation":Z
    :goto_42
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    if-ne v4, v3, :cond_52

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    if-ne v4, v10, :cond_52

    .line 7544
    const/4 v4, 0x0

    goto :goto_7

    .line 7532
    .end local v10    # "altOrientation":Z
    :cond_50
    const/4 v10, 0x0

    goto :goto_42

    .line 7554
    .restart local v10    # "altOrientation":Z
    :cond_52
    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    .line 7555
    move-object/from16 v0, p0

    iput-boolean v10, v0, Lcom/android/server/wm/WindowManagerService;->mAltOrientation:Z

    .line 7556
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    invoke-interface {v4, v5}, Landroid/view/WindowManagerPolicy;->setRotationLw(I)V

    .line 7558
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    const/4 v5, 0x1

    if-eq v4, v5, :cond_73

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    const/4 v5, 0x3

    if-ne v4, v5, :cond_12d

    .line 7559
    :cond_73
    const/4 v4, 0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->notifyOrientationToSSRM(Z)V

    .line 7564
    :goto_79
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mWindowsFreezingScreen:Z

    .line 7565
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0xb

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService$H;->removeMessages(I)V

    .line 7566
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v5, 0xb

    const-wide/16 v6, 0x7d0

    invoke-virtual {v4, v5, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendEmptyMessageDelayed(IJ)Z

    .line 7567
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingForConfig:Z

    .line 7568
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v12

    .line 7569
    .local v12, "displayContent":Lcom/android/server/wm/DisplayContent;
    const/4 v4, 0x1

    iput-boolean v4, v12, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 7570
    const/4 v4, 0x2

    new-array v11, v4, [I

    .line 7571
    .local v11, "anim":[I
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->isDimming()Z

    move-result v4

    if-eqz v4, :cond_135

    .line 7572
    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x0

    aput v6, v11, v5

    aput v6, v11, v4

    .line 7576
    :goto_ae
    const/4 v4, 0x0

    aget v4, v11, v4

    const/4 v5, 0x1

    aget v5, v11, v5

    move-object/from16 v0, p0

    move/from16 v1, p1

    invoke-direct {v0, v1, v4, v5}, Lcom/android/server/wm/WindowManagerService;->startFreezingDisplayLocked(ZII)V

    .line 7578
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mAnimator:Lcom/android/server/wm/WindowAnimator;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowAnimator;->getScreenRotationAnimationLocked(I)Lcom/android/server/wm/ScreenRotationAnimation;

    move-result-object v2

    .line 7587
    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->computeScreenConfigurationLocked(Landroid/content/res/Configuration;)Z

    .line 7589
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v13

    .line 7590
    .local v13, "displayInfo":Landroid/view/DisplayInfo;
    if-nez p1, :cond_d3

    .line 7594
    invoke-static {}, Landroid/view/SurfaceControl;->openTransaction()V

    .line 7599
    :cond_d3
    if-eqz v2, :cond_f9

    :try_start_d5
    invoke-virtual {v2}, Lcom/android/server/wm/ScreenRotationAnimation;->hasScreenshot()Z

    move-result v4

    if-eqz v4, :cond_f9

    .line 7601
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mFxSession:Landroid/view/SurfaceSession;

    const-wide/16 v5, 0x2710

    move-object/from16 v0, p0

    iget v7, v0, Lcom/android/server/wm/WindowManagerService;->mTransitionAnimationScale:F

    iget v8, v13, Landroid/view/DisplayInfo;->logicalWidth:I

    iget v9, v13, Landroid/view/DisplayInfo;->logicalHeight:I

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/wm/ScreenRotationAnimation;->setRotationInTransaction(ILandroid/view/SurfaceSession;JFII)Z

    move-result v4

    if-eqz v4, :cond_f2

    .line 7605
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->scheduleAnimationLocked()V

    .line 7608
    :cond_f2
    iget-object v4, v2, Lcom/android/server/wm/ScreenRotationAnimation;->mSnapshotInitialMatrix:Landroid/graphics/Matrix;

    move-object/from16 v0, p0

    invoke-virtual {v0, v12, v4}, Lcom/android/server/wm/WindowManagerService;->updateSurfacesInTransactionLocked(Lcom/android/server/wm/DisplayContent;Landroid/graphics/Matrix;)Z

    .line 7612
    :cond_f9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayManagerService:Lcom/android/server/display/DisplayManagerService;

    invoke-virtual {v4}, Lcom/android/server/display/DisplayManagerService;->performTraversalInTransactionFromWindowManager()V
    :try_end_100
    .catchall {:try_start_d5 .. :try_end_100} :catchall_13e

    .line 7614
    if-nez p1, :cond_105

    .line 7615
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    .line 7622
    :cond_105
    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v16

    .line 7623
    .local v16, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/wm/WindowList;->size()I

    move-result v4

    add-int/lit8 v14, v4, -0x1

    .local v14, "i":I
    :goto_10f
    if-ltz v14, :cond_145

    .line 7624
    move-object/from16 v0, v16

    invoke-virtual {v0, v14}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/WindowState;

    .line 7625
    .local v15, "w":Lcom/android/server/wm/WindowState;
    iget-boolean v4, v15, Lcom/android/server/wm/WindowState;->mHasSurface:Z

    if-eqz v4, :cond_127

    .line 7627
    const/4 v4, 0x1

    iput-boolean v4, v15, Lcom/android/server/wm/WindowState;->mOrientationChanging:Z

    .line 7628
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mInnerFields:Lcom/android/server/wm/WindowManagerService$LayoutFields;

    const/4 v5, 0x0

    iput-boolean v5, v4, Lcom/android/server/wm/WindowManagerService$LayoutFields;->mOrientationChangeComplete:Z

    .line 7630
    :cond_127
    const/4 v4, 0x0

    iput v4, v15, Lcom/android/server/wm/WindowState;->mLastFreezeDuration:I

    .line 7623
    add-int/lit8 v14, v14, -0x1

    goto :goto_10f

    .line 7561
    .end local v11    # "anim":[I
    .end local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v13    # "displayInfo":Landroid/view/DisplayInfo;
    .end local v14    # "i":I
    .end local v15    # "w":Lcom/android/server/wm/WindowState;
    .end local v16    # "windows":Lcom/android/server/wm/WindowList;
    :cond_12d
    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/wm/WindowManagerService;->notifyOrientationToSSRM(Z)V

    goto/16 :goto_79

    .line 7574
    .restart local v11    # "anim":[I
    .restart local v12    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_135
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v4, v11}, Landroid/view/WindowManagerPolicy;->selectRotationAnimationLw([I)V

    goto/16 :goto_ae

    .line 7614
    .restart local v13    # "displayInfo":Landroid/view/DisplayInfo;
    :catchall_13e
    move-exception v4

    if-nez p1, :cond_144

    .line 7615
    invoke-static {}, Landroid/view/SurfaceControl;->closeTransaction()V

    :cond_144
    throw v4

    .line 7633
    .restart local v14    # "i":I
    .restart local v16    # "windows":Lcom/android/server/wm/WindowList;
    :cond_145
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v14, v4, -0x1

    :goto_14f
    if-ltz v14, :cond_161

    .line 7635
    :try_start_151
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v4, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/view/IRotationWatcher;

    invoke-interface {v4, v3}, Landroid/view/IRotationWatcher;->onRotationChanged(I)V
    :try_end_15e
    .catch Landroid/os/RemoteException; {:try_start_151 .. :try_end_15e} :catch_17b

    .line 7633
    :goto_15e
    add-int/lit8 v14, v14, -0x1

    goto :goto_14f

    .line 7641
    :cond_161
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    if-eqz v4, :cond_178

    invoke-virtual {v12}, Lcom/android/server/wm/DisplayContent;->getDisplayId()I

    move-result v4

    if-nez v4, :cond_178

    .line 7643
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/wm/WindowManagerService;->mDisplayMagnifier:Lcom/android/server/wm/DisplayMagnifier;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v5

    invoke-virtual {v4, v5, v3}, Lcom/android/server/wm/DisplayMagnifier;->onRotationChangedLocked(Lcom/android/server/wm/DisplayContent;I)V

    .line 7646
    :cond_178
    const/4 v4, 0x1

    goto/16 :goto_7

    .line 7636
    :catch_17b
    move-exception v4

    goto :goto_15e
.end method

.method updateStatusBarVisibilityLocked(I)V
    .registers 12
    .param p1, "visibility"    # I

    .prologue
    .line 12005
    iget-object v8, p0, Lcom/android/server/wm/WindowManagerService;->mInputManager:Lcom/android/server/input/InputManagerService;

    invoke-virtual {v8, p1}, Lcom/android/server/input/InputManagerService;->setSystemUiVisibility(I)V

    .line 12006
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultWindowListLocked()Lcom/android/server/wm/WindowList;

    move-result-object v5

    .line 12007
    .local v5, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 12008
    .local v0, "N":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_e
    if-ge v3, v0, :cond_60

    .line 12009
    invoke-virtual {v5, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowState;

    .line 12011
    .local v6, "ws":Lcom/android/server/wm/WindowState;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowState;->getMultiWindowStyleLw()Lcom/samsung/android/multiwindow/MultiWindowStyle;

    move-result-object v8

    invoke-virtual {v8}, Lcom/samsung/android/multiwindow/MultiWindowStyle;->getZone()I

    move-result v7

    .line 12012
    .local v7, "zoneInfo":I
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v9, 0x8000000

    and-int/2addr v8, v9

    if-eqz v8, :cond_34

    .line 12013
    if-nez v7, :cond_31

    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v8, v8, Landroid/view/WindowManager$LayoutParams;->type:I

    const/16 v9, 0x899

    if-ne v8, v9, :cond_34

    .line 12008
    :cond_31
    :goto_31
    add-int/lit8 v3, v3, 0x1

    goto :goto_e

    .line 12019
    :cond_34
    :try_start_34
    iget v1, v6, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 12020
    .local v1, "curValue":I
    xor-int v2, v1, p1

    .line 12023
    .local v2, "diff":I
    and-int/lit8 v2, v2, 0x7

    .line 12025
    xor-int/lit8 v8, p1, -0x1

    and-int/2addr v2, v8

    .line 12026
    xor-int/lit8 v8, v2, -0x1

    and-int/2addr v8, v1

    and-int v9, p1, v2

    or-int v4, v8, v9

    .line 12027
    .local v4, "newValue":I
    if-eq v4, v1, :cond_4e

    .line 12028
    iget v8, v6, Lcom/android/server/wm/WindowState;->mSeq:I

    add-int/lit8 v8, v8, 0x1

    iput v8, v6, Lcom/android/server/wm/WindowState;->mSeq:I

    .line 12029
    iput v4, v6, Lcom/android/server/wm/WindowState;->mSystemUiVisibility:I

    .line 12031
    :cond_4e
    if-ne v4, v1, :cond_56

    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget-boolean v8, v8, Landroid/view/WindowManager$LayoutParams;->hasSystemUiListeners:Z

    if-eqz v8, :cond_31

    .line 12032
    :cond_56
    iget-object v8, v6, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    iget v9, v6, Lcom/android/server/wm/WindowState;->mSeq:I

    invoke-interface {v8, v9, p1, v4, v2}, Landroid/view/IWindow;->dispatchSystemUiVisibilityChanged(IIII)V
    :try_end_5d
    .catch Landroid/os/RemoteException; {:try_start_34 .. :try_end_5d} :catch_5e

    goto :goto_31

    .line 12035
    .end local v1    # "curValue":I
    .end local v2    # "diff":I
    .end local v4    # "newValue":I
    :catch_5e
    move-exception v8

    goto :goto_31

    .line 12039
    .end local v6    # "ws":Lcom/android/server/wm/WindowState;
    .end local v7    # "zoneInfo":I
    :cond_60
    return-void
.end method

.method updateSurfacesInTransactionLocked(Lcom/android/server/wm/DisplayContent;Landroid/graphics/Matrix;)Z
    .registers 12
    .param p1, "displayContent"    # Lcom/android/server/wm/DisplayContent;
    .param p2, "initRotationMatrix"    # Landroid/graphics/Matrix;

    .prologue
    .line 13287
    const/4 v4, 0x0

    .line 13288
    .local v4, "needsUpdateSurfaceMatrix":Z
    invoke-virtual {p1}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v6

    .line 13289
    .local v6, "windows":Lcom/android/server/wm/WindowList;
    invoke-virtual {v6}, Lcom/android/server/wm/WindowList;->size()I

    move-result v0

    .line 13290
    .local v0, "N":I
    add-int/lit8 v1, v0, -0x1

    .line 13291
    .local v1, "i":I
    const/4 v2, -0x1

    .line 13292
    .local v2, "indexOfFirstFixedOrientationWindow":I
    :goto_c
    if-ltz v1, :cond_30

    .line 13293
    invoke-virtual {v6, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 13294
    .local v5, "w":Lcom/android/server/wm/WindowState;
    invoke-virtual {v5}, Lcom/android/server/wm/WindowState;->isVisibleLw()Z

    move-result v7

    if-eqz v7, :cond_2d

    iget-object v7, v5, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v7, v7, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    const/high16 v8, 0x30000

    and-int/2addr v7, v8

    if-eqz v7, :cond_2d

    .line 13296
    iget-object v7, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    invoke-virtual {v7}, Lcom/android/server/wm/WindowStateAnimator;->updateFixedOrientationWindowInTransactionLocked()V

    .line 13297
    const/4 v4, 0x1

    .line 13298
    const/4 v7, -0x1

    if-ne v2, v7, :cond_2d

    .line 13299
    move v2, v1

    .line 13292
    :cond_2d
    add-int/lit8 v1, v1, -0x1

    goto :goto_c

    .line 13304
    .end local v5    # "w":Lcom/android/server/wm/WindowState;
    :cond_30
    if-nez v4, :cond_33

    .line 13313
    :cond_32
    return v4

    .line 13308
    :cond_33
    add-int/lit8 v3, v0, -0x1

    .local v3, "j":I
    :goto_35
    if-le v3, v2, :cond_32

    .line 13309
    invoke-virtual {v6, v3}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/wm/WindowState;

    .line 13310
    .restart local v5    # "w":Lcom/android/server/wm/WindowState;
    iget-object v7, v5, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    const/4 v8, 0x0

    invoke-virtual {v7, p2, v8}, Lcom/android/server/wm/WindowStateAnimator;->hideSurfaceBeofreScreenRotationAnimation(Landroid/graphics/Matrix;F)V

    .line 13308
    add-int/lit8 v3, v3, -0x1

    goto :goto_35
.end method

.method public updateTopActivity(Landroid/content/ComponentName;)V
    .registers 3
    .param p1, "componentName"    # Landroid/content/ComponentName;

    .prologue
    .line 13211
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mPolicy:Landroid/view/WindowManagerPolicy;

    invoke-interface {v0, p1}, Landroid/view/WindowManagerPolicy;->updateTopActivity(Landroid/content/ComponentName;)V

    .line 13212
    return-void
.end method

.method updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;Z)V
    .registers 15
    .param p1, "changingTarget"    # Lcom/android/server/wm/WindowState;
    .param p2, "sync"    # Z

    .prologue
    const/4 v11, 0x0

    .line 2610
    iget-object v3, p1, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 2611
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v4

    .line 2612
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v5, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 2613
    .local v5, "dw":I
    iget v2, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 2615
    .local v2, "dh":I
    iget-object v6, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    .line 2616
    .local v6, "target":Lcom/android/server/wm/WindowState;
    if-eqz v6, :cond_23

    .line 2617
    iget v10, v6, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    cmpl-float v10, v10, v11

    if-ltz v10, :cond_59

    .line 2618
    iget v10, v6, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    .line 2622
    :cond_19
    :goto_19
    iget v10, v6, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    cmpl-float v10, v10, v11

    if-ltz v10, :cond_64

    .line 2623
    iget v10, v6, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    .line 2629
    :cond_23
    :goto_23
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 2630
    .local v0, "curTokenIndex":I
    :cond_29
    if-lez v0, :cond_6f

    .line 2631
    add-int/lit8 v0, v0, -0x1

    .line 2632
    iget-object v10, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v10, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/wm/WindowToken;

    .line 2633
    .local v7, "token":Lcom/android/server/wm/WindowToken;
    iget-object v10, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v10}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 2634
    .local v1, "curWallpaperIndex":I
    :cond_3b
    :goto_3b
    if-lez v1, :cond_29

    .line 2635
    add-int/lit8 v1, v1, -0x1

    .line 2636
    iget-object v10, v7, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v10, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 2637
    .local v8, "wallpaper":Lcom/android/server/wm/WindowState;
    invoke-virtual {p0, v8, v5, v2, p2}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    move-result v10

    if-eqz v10, :cond_3b

    .line 2638
    iget-object v9, v8, Lcom/android/server/wm/WindowState;->mWinAnimator:Lcom/android/server/wm/WindowStateAnimator;

    .line 2639
    .local v9, "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    invoke-virtual {v9}, Lcom/android/server/wm/WindowStateAnimator;->computeShownFrameLocked()V

    .line 2642
    iget-object v10, v8, Lcom/android/server/wm/WindowState;->mShownFrame:Landroid/graphics/RectF;

    invoke-virtual {v9, v10}, Lcom/android/server/wm/WindowStateAnimator;->setWallpaperOffset(Landroid/graphics/RectF;)V

    .line 2644
    const/4 p2, 0x0

    goto :goto_3b

    .line 2619
    .end local v0    # "curTokenIndex":I
    .end local v1    # "curWallpaperIndex":I
    .end local v7    # "token":Lcom/android/server/wm/WindowToken;
    .end local v8    # "wallpaper":Lcom/android/server/wm/WindowState;
    .end local v9    # "winAnimator":Lcom/android/server/wm/WindowStateAnimator;
    :cond_59
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    cmpl-float v10, v10, v11

    if-ltz v10, :cond_19

    .line 2620
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    goto :goto_19

    .line 2624
    :cond_64
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    cmpl-float v10, v10, v11

    if-ltz v10, :cond_23

    .line 2625
    iget v10, p1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    iput v10, p0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    goto :goto_23

    .line 2648
    .restart local v0    # "curTokenIndex":I
    :cond_6f
    return-void
.end method

.method updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z
    .registers 24
    .param p1, "wallpaperWin"    # Lcom/android/server/wm/WindowState;
    .param p2, "dw"    # I
    .param p3, "dh"    # I
    .param p4, "sync"    # Z

    .prologue
    .line 2524
    const/4 v10, 0x0

    .line 2525
    .local v10, "changed":Z
    const/4 v12, 0x0

    .line 2526
    .local v12, "rawChanged":Z
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    const/4 v3, 0x0

    cmpl-float v2, v2, v3

    if-ltz v2, :cond_139

    move-object/from16 v0, p0

    iget v15, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperX:F

    .line 2527
    .local v15, "wpx":F
    :goto_f
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    const/4 v3, 0x0

    cmpl-float v2, v2, v3

    if-ltz v2, :cond_13d

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperXStep:F

    move/from16 v16, v0

    .line 2528
    .local v16, "wpxs":F
    :goto_1e
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v2, v2, Landroid/graphics/Rect;->right:I

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->left:I

    sub-int/2addr v2, v3

    sub-int v9, v2, p2

    .line 2529
    .local v9, "availw":I
    if-lez v9, :cond_141

    int-to-float v2, v9

    mul-float/2addr v2, v15

    const/high16 v3, 0x3f000000

    add-float/2addr v2, v3

    float-to-int v2, v2

    neg-int v11, v2

    .line 2530
    .local v11, "offset":I
    :goto_36
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/wm/WindowState;->mXOffset:I

    if-eq v2, v11, :cond_144

    const/4 v10, 0x1

    .line 2531
    :goto_3d
    if-eqz v10, :cond_43

    .line 2534
    move-object/from16 v0, p1

    iput v11, v0, Lcom/android/server/wm/WindowState;->mXOffset:I

    .line 2536
    :cond_43
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    cmpl-float v2, v2, v15

    if-nez v2, :cond_53

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    cmpl-float v2, v2, v16

    if-eqz v2, :cond_5e

    .line 2537
    :cond_53
    move-object/from16 v0, p1

    iput v15, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    .line 2538
    move/from16 v0, v16

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    .line 2539
    const/4 v12, 0x1

    .line 2542
    :cond_5e
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    const/4 v3, 0x0

    cmpl-float v2, v2, v3

    if-ltz v2, :cond_147

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperY:F

    move/from16 v17, v0

    .line 2543
    .local v17, "wpy":F
    :goto_6d
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    const/4 v3, 0x0

    cmpl-float v2, v2, v3

    if-ltz v2, :cond_14b

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperYStep:F

    move/from16 v18, v0

    .line 2544
    .local v18, "wpys":F
    :goto_7c
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v2, v2, Landroid/graphics/Rect;->bottom:I

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/wm/WindowState;->mFrame:Landroid/graphics/Rect;

    iget v3, v3, Landroid/graphics/Rect;->top:I

    sub-int/2addr v2, v3

    sub-int v8, v2, p3

    .line 2545
    .local v8, "availh":I
    if-lez v8, :cond_14f

    int-to-float v2, v8

    mul-float v2, v2, v17

    const/high16 v3, 0x3f000000

    add-float/2addr v2, v3

    float-to-int v2, v2

    neg-int v11, v2

    .line 2546
    :goto_95
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/wm/WindowState;->mYOffset:I

    if-eq v2, v11, :cond_a0

    .line 2549
    const/4 v10, 0x1

    .line 2550
    move-object/from16 v0, p1

    iput v11, v0, Lcom/android/server/wm/WindowState;->mYOffset:I

    .line 2552
    :cond_a0
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    cmpl-float v2, v2, v17

    if-nez v2, :cond_b0

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    cmpl-float v2, v2, v18

    if-eqz v2, :cond_bd

    .line 2553
    :cond_b0
    move/from16 v0, v17

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    .line 2554
    move/from16 v0, v18

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    .line 2555
    const/4 v12, 0x1

    .line 2558
    :cond_bd
    if-eqz v12, :cond_138

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    iget v2, v2, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    and-int/lit8 v2, v2, 0x4

    if-eqz v2, :cond_138

    .line 2564
    if-eqz p4, :cond_d1

    .line 2565
    :try_start_cb
    move-object/from16 v0, p1

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    .line 2567
    :cond_d1
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/wm/WindowState;->mWallpaperX:F

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/wm/WindowState;->mWallpaperY:F

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/wm/WindowState;->mWallpaperXStep:F

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/wm/WindowState;->mWallpaperYStep:F

    move/from16 v7, p4

    invoke-interface/range {v2 .. v7}, Landroid/view/IWindow;->dispatchWallpaperOffsets(FFFFZ)V

    .line 2570
    if-eqz p4, :cond_138

    .line 2571
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    if-eqz v2, :cond_138

    .line 2572
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v13

    .line 2573
    .local v13, "start":J
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperTimeoutTime:J
    :try_end_fa
    .catch Landroid/os/RemoteException; {:try_start_cb .. :try_end_fa} :catch_152

    const-wide/16 v4, 0x2710

    add-long/2addr v2, v4

    cmp-long v2, v2, v13

    if-gez v2, :cond_133

    .line 2578
    :try_start_101
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    const-wide/16 v3, 0x96

    invoke-virtual {v2, v3, v4}, Ljava/lang/Object;->wait(J)V
    :try_end_10a
    .catch Ljava/lang/InterruptedException; {:try_start_101 .. :try_end_10a} :catch_154
    .catch Landroid/os/RemoteException; {:try_start_101 .. :try_end_10a} :catch_152

    .line 2582
    :goto_10a
    const-wide/16 v2, 0x96

    add-long/2addr v2, v13

    :try_start_10d
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    cmp-long v2, v2, v4

    if-gez v2, :cond_133

    .line 2584
    const-string v2, "WindowManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Timeout waiting for wallpaper to offset: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2586
    move-object/from16 v0, p0

    iput-wide v13, v0, Lcom/android/server/wm/WindowManagerService;->mLastWallpaperTimeoutTime:J

    .line 2589
    :cond_133
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;
    :try_end_138
    .catch Landroid/os/RemoteException; {:try_start_10d .. :try_end_138} :catch_152

    .line 2596
    .end local v13    # "start":J
    :cond_138
    :goto_138
    return v10

    .line 2526
    .end local v8    # "availh":I
    .end local v9    # "availw":I
    .end local v11    # "offset":I
    .end local v15    # "wpx":F
    .end local v16    # "wpxs":F
    .end local v17    # "wpy":F
    .end local v18    # "wpys":F
    :cond_139
    const/high16 v15, 0x3f000000

    goto/16 :goto_f

    .line 2527
    .restart local v15    # "wpx":F
    :cond_13d
    const/high16 v16, -0x40800000

    goto/16 :goto_1e

    .line 2529
    .restart local v9    # "availw":I
    .restart local v16    # "wpxs":F
    :cond_141
    const/4 v11, 0x0

    goto/16 :goto_36

    .line 2530
    .restart local v11    # "offset":I
    :cond_144
    const/4 v10, 0x0

    goto/16 :goto_3d

    .line 2542
    :cond_147
    const/high16 v17, 0x3f000000

    goto/16 :goto_6d

    .line 2543
    .restart local v17    # "wpy":F
    :cond_14b
    const/high16 v18, -0x40800000

    goto/16 :goto_7c

    .line 2545
    .restart local v8    # "availh":I
    .restart local v18    # "wpys":F
    :cond_14f
    const/4 v11, 0x0

    goto/16 :goto_95

    .line 2592
    :catch_152
    move-exception v2

    goto :goto_138

    .line 2579
    .restart local v13    # "start":J
    :catch_154
    move-exception v2

    goto :goto_10a
.end method

.method updateWallpaperVisibilityLocked()V
    .registers 13

    .prologue
    const/4 v10, 0x1

    const/4 v11, 0x0

    .line 2669
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    invoke-virtual {p0, v9}, Lcom/android/server/wm/WindowManagerService;->isWallpaperVisible(Lcom/android/server/wm/WindowState;)Z

    move-result v7

    .line 2670
    .local v7, "visible":Z
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTarget:Lcom/android/server/wm/WindowState;

    iget-object v3, v9, Lcom/android/server/wm/WindowState;->mDisplayContent:Lcom/android/server/wm/DisplayContent;

    .line 2671
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v3}, Lcom/android/server/wm/DisplayContent;->getDisplayInfo()Landroid/view/DisplayInfo;

    move-result-object v4

    .line 2672
    .local v4, "displayInfo":Landroid/view/DisplayInfo;
    iget v5, v4, Landroid/view/DisplayInfo;->logicalWidth:I

    .line 2673
    .local v5, "dw":I
    iget v2, v4, Landroid/view/DisplayInfo;->logicalHeight:I

    .line 2675
    .local v2, "dh":I
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 2676
    .local v0, "curTokenIndex":I
    :cond_1a
    if-lez v0, :cond_52

    .line 2677
    add-int/lit8 v0, v0, -0x1

    .line 2678
    iget-object v9, p0, Lcom/android/server/wm/WindowManagerService;->mWallpaperTokens:Ljava/util/ArrayList;

    invoke-virtual {v9, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/wm/WindowToken;

    .line 2679
    .local v6, "token":Lcom/android/server/wm/WindowToken;
    iget-boolean v9, v6, Lcom/android/server/wm/WindowToken;->hidden:Z

    if-ne v9, v7, :cond_35

    .line 2680
    if-nez v7, :cond_50

    move v9, v10

    :goto_2d
    iput-boolean v9, v6, Lcom/android/server/wm/WindowToken;->hidden:Z

    .line 2683
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent;

    move-result-object v9

    iput-boolean v10, v9, Lcom/android/server/wm/DisplayContent;->layoutNeeded:Z

    .line 2686
    :cond_35
    iget-object v9, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 2687
    .local v1, "curWallpaperIndex":I
    :goto_3b
    if-lez v1, :cond_1a

    .line 2688
    add-int/lit8 v1, v1, -0x1

    .line 2689
    iget-object v9, v6, Lcom/android/server/wm/WindowToken;->windows:Lcom/android/server/wm/WindowList;

    invoke-virtual {v9, v1}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/WindowState;

    .line 2690
    .local v8, "wallpaper":Lcom/android/server/wm/WindowState;
    if-eqz v7, :cond_4c

    .line 2691
    invoke-virtual {p0, v8, v5, v2, v11}, Lcom/android/server/wm/WindowManagerService;->updateWallpaperOffsetLocked(Lcom/android/server/wm/WindowState;IIZ)Z

    .line 2694
    :cond_4c
    invoke-virtual {p0, v8, v7}, Lcom/android/server/wm/WindowManagerService;->dispatchWallpaperVisibility(Lcom/android/server/wm/WindowState;Z)V

    goto :goto_3b

    .end local v1    # "curWallpaperIndex":I
    .end local v8    # "wallpaper":Lcom/android/server/wm/WindowState;
    :cond_50
    move v9, v11

    .line 2680
    goto :goto_2d

    .line 2697
    .end local v6    # "token":Lcom/android/server/wm/WindowToken;
    :cond_52
    return-void
.end method

.method public validateAppTokens(ILjava/util/List;)V
    .registers 22
    .param p1, "stackId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/wm/TaskGroup;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 4106
    .local p2, "tasks":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/wm/TaskGroup;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    move-object/from16 v16, v0

    monitor-enter v16

    .line 4107
    :try_start_7
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v15

    add-int/lit8 v7, v15, -0x1

    .line 4108
    .local v7, "t":I
    if-gez v7, :cond_1b

    .line 4109
    const-string v15, "WindowManager"

    const-string/jumbo v17, "validateAppTokens: empty task list"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4110
    monitor-exit v16

    .line 4163
    :goto_1a
    return-void

    .line 4113
    :cond_1b
    const/4 v15, 0x0

    move-object/from16 v0, p2

    invoke-interface {v0, v15}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/wm/TaskGroup;

    .line 4114
    .local v9, "task":Lcom/android/server/wm/TaskGroup;
    iget v10, v9, Lcom/android/server/wm/TaskGroup;->taskId:I

    .line 4115
    .local v10, "taskId":I
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/wm/Task;

    .line 4116
    .local v8, "targetTask":Lcom/android/server/wm/Task;
    invoke-virtual {v8}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4117
    .local v3, "displayContent":Lcom/android/server/wm/DisplayContent;
    if-nez v3, :cond_58

    .line 4118
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: no Display for taskId="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-virtual {v0, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4119
    monitor-exit v16

    goto :goto_1a

    .line 4162
    .end local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .end local v7    # "t":I
    .end local v8    # "targetTask":Lcom/android/server/wm/Task;
    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    .end local v10    # "taskId":I
    :catchall_55
    move-exception v15

    monitor-exit v16
    :try_end_57
    .catchall {:try_start_7 .. :try_end_57} :catchall_55

    throw v15

    .line 4122
    .restart local v3    # "displayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v7    # "t":I
    .restart local v8    # "targetTask":Lcom/android/server/wm/Task;
    .restart local v9    # "task":Lcom/android/server/wm/TaskGroup;
    .restart local v10    # "taskId":I
    :cond_58
    :try_start_58
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mStackIdToStack:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v15, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/TaskStack;

    invoke-virtual {v15}, Lcom/android/server/wm/TaskStack;->getTasks()Ljava/util/ArrayList;

    move-result-object v5

    .line 4124
    .local v5, "localTasks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/wm/Task;>;"
    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v15

    add-int/lit8 v11, v15, -0x1

    .local v11, "taskNdx":I
    :goto_6e
    if-ltz v11, :cond_d1

    if-ltz v7, :cond_d1

    .line 4125
    invoke-virtual {v5, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Task;

    iget-object v6, v15, Lcom/android/server/wm/Task;->mAppTokens:Lcom/android/server/wm/AppTokenList;

    .line 4126
    .local v6, "localTokens":Lcom/android/server/wm/AppTokenList;
    move-object/from16 v0, p2

    invoke-interface {v0, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    .end local v9    # "task":Lcom/android/server/wm/TaskGroup;
    check-cast v9, Lcom/android/server/wm/TaskGroup;

    .line 4127
    .restart local v9    # "task":Lcom/android/server/wm/TaskGroup;
    iget-object v13, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    .line 4129
    .local v13, "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    move-object v4, v3

    .line 4130
    .local v4, "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/wm/WindowManagerService;->mTaskIdToTask:Landroid/util/SparseArray;

    invoke-virtual {v15, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/wm/Task;

    invoke-virtual {v15}, Lcom/android/server/wm/Task;->getDisplayContent()Lcom/android/server/wm/DisplayContent;

    move-result-object v3

    .line 4131
    if-eq v3, v4, :cond_a2

    .line 4132
    const-string v15, "WindowManager"

    const-string/jumbo v17, "validateAppTokens: displayContent changed in TaskGroup list!"

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4133
    monitor-exit v16

    goto/16 :goto_1a

    .line 4138
    :cond_a2
    invoke-virtual {v6}, Lcom/android/server/wm/AppTokenList;->size()I

    move-result v15

    add-int/lit8 v12, v15, -0x1

    .local v12, "tokenNdx":I
    iget-object v15, v9, Lcom/android/server/wm/TaskGroup;->tokens:Ljava/util/ArrayList;

    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v15

    add-int/lit8 v14, v15, -0x1

    .line 4139
    .local v14, "v":I
    :goto_b0
    if-ltz v12, :cond_cd

    if-ltz v14, :cond_cd

    .line 4140
    invoke-virtual {v6, v12}, Lcom/android/server/wm/AppTokenList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/AppWindowToken;

    .line 4141
    .local v2, "atoken":Lcom/android/server/wm/AppWindowToken;
    iget-boolean v15, v2, Lcom/android/server/wm/AppWindowToken;->removed:Z

    if-eqz v15, :cond_c1

    .line 4142
    add-int/lit8 v12, v12, -0x1

    .line 4143
    goto :goto_b0

    .line 4145
    :cond_c1
    invoke-interface {v13, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    iget-object v0, v2, Lcom/android/server/wm/AppWindowToken;->token:Landroid/os/IBinder;

    move-object/from16 v17, v0

    move-object/from16 v0, v17

    if-eq v15, v0, :cond_135

    .line 4152
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_cd
    if-gez v12, :cond_d1

    if-ltz v14, :cond_13b

    .line 4157
    .end local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .end local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .end local v12    # "tokenNdx":I
    .end local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .end local v14    # "v":I
    :cond_d1
    if-gez v11, :cond_d5

    if-ltz v7, :cond_132

    .line 4158
    :cond_d5
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! ActivityManager="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4159
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! WindowManager="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4160
    const-string v15, "WindowManager"

    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v18, "validateAppTokens: Mismatch! Callers="

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    const/16 v18, 0x4

    invoke-static/range {v18 .. v18}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v18

    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v17

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    move-object/from16 v0, v17

    invoke-static {v15, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4162
    :cond_132
    monitor-exit v16
    :try_end_133
    .catchall {:try_start_58 .. :try_end_133} :catchall_55

    goto/16 :goto_1a

    .line 4148
    .restart local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    .restart local v4    # "lastDisplayContent":Lcom/android/server/wm/DisplayContent;
    .restart local v6    # "localTokens":Lcom/android/server/wm/AppTokenList;
    .restart local v12    # "tokenNdx":I
    .restart local v13    # "tokens":Ljava/util/List;, "Ljava/util/List<Landroid/view/IApplicationToken;>;"
    .restart local v14    # "v":I
    :cond_135
    add-int/lit8 v12, v12, -0x1

    .line 4149
    add-int/lit8 v14, v14, -0x1

    .line 4150
    goto/16 :goto_b0

    .line 4124
    .end local v2    # "atoken":Lcom/android/server/wm/AppWindowToken;
    :cond_13b
    add-int/lit8 v11, v11, -0x1

    add-int/lit8 v7, v7, -0x1

    goto/16 :goto_6e
.end method

.method public validateStackOrder([Ljava/lang/Integer;)V
    .registers 2
    .param p1, "remoteStackIds"    # [Ljava/lang/Integer;

    .prologue
    .line 4167
    return-void
.end method

.method viewServerGetFocusedWindow(Ljava/net/Socket;)Z
    .registers 10
    .param p1, "client"    # Ljava/net/Socket;

    .prologue
    .line 7919
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v6

    if-eqz v6, :cond_8

    .line 7920
    const/4 v5, 0x0

    .line 7953
    :cond_7
    :goto_7
    return v5

    .line 7923
    :cond_8
    const/4 v5, 0x1

    .line 7925
    .local v5, "result":Z
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->getFocusedWindow()Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 7927
    .local v2, "focusedWindow":Lcom/android/server/wm/WindowState;
    const/4 v3, 0x0

    .line 7931
    .local v3, "out":Ljava/io/BufferedWriter;
    :try_start_e
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v0

    .line 7932
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v4, Ljava/io/BufferedWriter;

    new-instance v6, Ljava/io/OutputStreamWriter;

    invoke-direct {v6, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v7, 0x2000

    invoke-direct {v4, v6, v7}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_1e
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_1e} :catch_4c
    .catchall {:try_start_e .. :try_end_1e} :catchall_57

    .line 7934
    .end local v3    # "out":Ljava/io/BufferedWriter;
    .local v4, "out":Ljava/io/BufferedWriter;
    if-eqz v2, :cond_39

    .line 7935
    :try_start_20
    invoke-static {v2}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v6

    invoke-static {v6}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 7936
    const/16 v6, 0x20

    invoke-virtual {v4, v6}, Ljava/io/BufferedWriter;->write(I)V

    .line 7937
    iget-object v6, v2, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v6}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 7939
    :cond_39
    const/16 v6, 0xa

    invoke-virtual {v4, v6}, Ljava/io/BufferedWriter;->write(I)V

    .line 7940
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->flush()V
    :try_end_41
    .catch Ljava/lang/Exception; {:try_start_20 .. :try_end_41} :catch_64
    .catchall {:try_start_20 .. :try_end_41} :catchall_61

    .line 7944
    if-eqz v4, :cond_67

    .line 7946
    :try_start_43
    invoke-virtual {v4}, Ljava/io/BufferedWriter;->close()V
    :try_end_46
    .catch Ljava/io/IOException; {:try_start_43 .. :try_end_46} :catch_48

    move-object v3, v4

    .line 7949
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_7

    .line 7947
    .end local v3    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catch_48
    move-exception v1

    .line 7948
    .local v1, "e":Ljava/io/IOException;
    const/4 v5, 0x0

    move-object v3, v4

    .line 7949
    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_7

    .line 7941
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "e":Ljava/io/IOException;
    :catch_4c
    move-exception v1

    .line 7942
    .local v1, "e":Ljava/lang/Exception;
    :goto_4d
    const/4 v5, 0x0

    .line 7944
    if-eqz v3, :cond_7

    .line 7946
    :try_start_50
    invoke-virtual {v3}, Ljava/io/BufferedWriter;->close()V
    :try_end_53
    .catch Ljava/io/IOException; {:try_start_50 .. :try_end_53} :catch_54

    goto :goto_7

    .line 7947
    :catch_54
    move-exception v1

    .line 7948
    .local v1, "e":Ljava/io/IOException;
    const/4 v5, 0x0

    .line 7949
    goto :goto_7

    .line 7944
    .end local v1    # "e":Ljava/io/IOException;
    :catchall_57
    move-exception v6

    :goto_58
    if-eqz v3, :cond_5d

    .line 7946
    :try_start_5a
    invoke-virtual {v3}, Ljava/io/BufferedWriter;->close()V
    :try_end_5d
    .catch Ljava/io/IOException; {:try_start_5a .. :try_end_5d} :catch_5e

    .line 7949
    :cond_5d
    :goto_5d
    throw v6

    .line 7947
    :catch_5e
    move-exception v1

    .line 7948
    .restart local v1    # "e":Ljava/io/IOException;
    const/4 v5, 0x0

    goto :goto_5d

    .line 7944
    .end local v1    # "e":Ljava/io/IOException;
    .end local v3    # "out":Ljava/io/BufferedWriter;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catchall_61
    move-exception v6

    move-object v3, v4

    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_58

    .line 7941
    .end local v3    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :catch_64
    move-exception v1

    move-object v3, v4

    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_4d

    .end local v3    # "out":Ljava/io/BufferedWriter;
    .restart local v4    # "out":Ljava/io/BufferedWriter;
    :cond_67
    move-object v3, v4

    .end local v4    # "out":Ljava/io/BufferedWriter;
    .restart local v3    # "out":Ljava/io/BufferedWriter;
    goto :goto_7
.end method

.method viewServerListWindows(Ljava/net/Socket;)Z
    .registers 16
    .param p1, "client"    # Ljava/net/Socket;

    .prologue
    .line 7861
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v12

    if-eqz v12, :cond_8

    .line 7862
    const/4 v9, 0x0

    .line 7907
    :cond_7
    :goto_7
    return v9

    .line 7865
    :cond_8
    const/4 v9, 0x1

    .line 7867
    .local v9, "result":Z
    new-instance v11, Lcom/android/server/wm/WindowList;

    invoke-direct {v11}, Lcom/android/server/wm/WindowList;-><init>()V

    .line 7868
    .local v11, "windows":Lcom/android/server/wm/WindowList;
    iget-object v13, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v13

    .line 7870
    :try_start_11
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v12}, Landroid/util/SparseArray;->size()I

    move-result v6

    .line 7871
    .local v6, "numDisplays":I
    const/4 v3, 0x0

    .local v3, "displayNdx":I
    :goto_18
    if-ge v3, v6, :cond_2c

    .line 7872
    iget-object v12, p0, Lcom/android/server/wm/WindowManagerService;->mDisplayContents:Landroid/util/SparseArray;

    invoke-virtual {v12, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/wm/DisplayContent;

    .line 7873
    .local v2, "displayContent":Lcom/android/server/wm/DisplayContent;
    invoke-virtual {v2}, Lcom/android/server/wm/DisplayContent;->getWindowList()Lcom/android/server/wm/WindowList;

    move-result-object v12

    invoke-virtual {v11, v12}, Lcom/android/server/wm/WindowList;->addAll(Ljava/util/Collection;)Z

    .line 7871
    add-int/lit8 v3, v3, 0x1

    goto :goto_18

    .line 7875
    .end local v2    # "displayContent":Lcom/android/server/wm/DisplayContent;
    :cond_2c
    monitor-exit v13
    :try_end_2d
    .catchall {:try_start_11 .. :try_end_2d} :catchall_6c

    .line 7877
    const/4 v7, 0x0

    .line 7881
    .local v7, "out":Ljava/io/BufferedWriter;
    :try_start_2e
    invoke-virtual {p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v0

    .line 7882
    .local v0, "clientStream":Ljava/io/OutputStream;
    new-instance v8, Ljava/io/BufferedWriter;

    new-instance v12, Ljava/io/OutputStreamWriter;

    invoke-direct {v12, v0}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    const/16 v13, 0x2000

    invoke-direct {v8, v12, v13}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;I)V
    :try_end_3e
    .catch Ljava/lang/Exception; {:try_start_2e .. :try_end_3e} :catch_82
    .catchall {:try_start_2e .. :try_end_3e} :catchall_8f

    .line 7884
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .local v8, "out":Ljava/io/BufferedWriter;
    :try_start_3e
    invoke-virtual {v11}, Lcom/android/server/wm/WindowList;->size()I

    move-result v1

    .line 7885
    .local v1, "count":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_43
    if-ge v5, v1, :cond_6f

    .line 7886
    invoke-virtual {v11, v5}, Lcom/android/server/wm/WindowList;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/wm/WindowState;

    .line 7887
    .local v10, "w":Lcom/android/server/wm/WindowState;
    invoke-static {v10}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v12

    invoke-static {v12}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 7888
    const/16 v12, 0x20

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(I)V

    .line 7889
    iget-object v12, v10, Lcom/android/server/wm/WindowState;->mAttrs:Landroid/view/WindowManager$LayoutParams;

    invoke-virtual {v12}, Landroid/view/WindowManager$LayoutParams;->getTitle()Ljava/lang/CharSequence;

    move-result-object v12

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;

    .line 7890
    const/16 v12, 0xa

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(I)V
    :try_end_69
    .catch Ljava/lang/Exception; {:try_start_3e .. :try_end_69} :catch_9c
    .catchall {:try_start_3e .. :try_end_69} :catchall_99

    .line 7885
    add-int/lit8 v5, v5, 0x1

    goto :goto_43

    .line 7875
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v3    # "displayNdx":I
    .end local v5    # "i":I
    .end local v6    # "numDisplays":I
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .end local v10    # "w":Lcom/android/server/wm/WindowState;
    :catchall_6c
    move-exception v12

    :try_start_6d
    monitor-exit v13
    :try_end_6e
    .catchall {:try_start_6d .. :try_end_6e} :catchall_6c

    throw v12

    .line 7893
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v1    # "count":I
    .restart local v3    # "displayNdx":I
    .restart local v5    # "i":I
    .restart local v6    # "numDisplays":I
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :cond_6f
    :try_start_6f
    const-string v12, "DONE.\n"

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 7894
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->flush()V
    :try_end_77
    .catch Ljava/lang/Exception; {:try_start_6f .. :try_end_77} :catch_9c
    .catchall {:try_start_6f .. :try_end_77} :catchall_99

    .line 7898
    if-eqz v8, :cond_9f

    .line 7900
    :try_start_79
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->close()V
    :try_end_7c
    .catch Ljava/io/IOException; {:try_start_79 .. :try_end_7c} :catch_7e

    move-object v7, v8

    .line 7903
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_7

    .line 7901
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_7e
    move-exception v4

    .line 7902
    .local v4, "e":Ljava/io/IOException;
    const/4 v9, 0x0

    move-object v7, v8

    .line 7903
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_7

    .line 7895
    .end local v0    # "clientStream":Ljava/io/OutputStream;
    .end local v1    # "count":I
    .end local v4    # "e":Ljava/io/IOException;
    .end local v5    # "i":I
    :catch_82
    move-exception v4

    .line 7896
    .local v4, "e":Ljava/lang/Exception;
    :goto_83
    const/4 v9, 0x0

    .line 7898
    if-eqz v7, :cond_7

    .line 7900
    :try_start_86
    invoke-virtual {v7}, Ljava/io/BufferedWriter;->close()V
    :try_end_89
    .catch Ljava/io/IOException; {:try_start_86 .. :try_end_89} :catch_8b

    goto/16 :goto_7

    .line 7901
    :catch_8b
    move-exception v4

    .line 7902
    .local v4, "e":Ljava/io/IOException;
    const/4 v9, 0x0

    .line 7903
    goto/16 :goto_7

    .line 7898
    .end local v4    # "e":Ljava/io/IOException;
    :catchall_8f
    move-exception v12

    :goto_90
    if-eqz v7, :cond_95

    .line 7900
    :try_start_92
    invoke-virtual {v7}, Ljava/io/BufferedWriter;->close()V
    :try_end_95
    .catch Ljava/io/IOException; {:try_start_92 .. :try_end_95} :catch_96

    .line 7903
    :cond_95
    :goto_95
    throw v12

    .line 7901
    :catch_96
    move-exception v4

    .line 7902
    .restart local v4    # "e":Ljava/io/IOException;
    const/4 v9, 0x0

    goto :goto_95

    .line 7898
    .end local v4    # "e":Ljava/io/IOException;
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v0    # "clientStream":Ljava/io/OutputStream;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catchall_99
    move-exception v12

    move-object v7, v8

    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_90

    .line 7895
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_9c
    move-exception v4

    move-object v7, v8

    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_83

    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v1    # "count":I
    .restart local v5    # "i":I
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :cond_9f
    move-object v7, v8

    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto/16 :goto_7
.end method

.method viewServerWindowCommand(Ljava/net/Socket;Ljava/lang/String;Ljava/lang/String;)Z
    .registers 19
    .param p1, "client"    # Ljava/net/Socket;
    .param p2, "command"    # Ljava/lang/String;
    .param p3, "parameters"    # Ljava/lang/String;

    .prologue
    .line 7977
    invoke-direct {p0}, Lcom/android/server/wm/WindowManagerService;->isSystemSecure()Z

    move-result v12

    if-eqz v12, :cond_8

    .line 7978
    const/4 v10, 0x0

    .line 8049
    :cond_7
    :goto_7
    return v10

    .line 7981
    :cond_8
    const/4 v10, 0x1

    .line 7982
    .local v10, "success":Z
    const/4 v3, 0x0

    .line 7983
    .local v3, "data":Landroid/os/Parcel;
    const/4 v9, 0x0

    .line 7985
    .local v9, "reply":Landroid/os/Parcel;
    const/4 v7, 0x0

    .line 7990
    .local v7, "out":Ljava/io/BufferedWriter;
    const/16 v12, 0x20

    :try_start_e
    move-object/from16 v0, p3

    invoke-virtual {v0, v12}, Ljava/lang/String;->indexOf(I)I

    move-result v6

    .line 7991
    .local v6, "index":I
    const/4 v12, -0x1

    if-ne v6, v12, :cond_1b

    .line 7992
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v6

    .line 7994
    :cond_1b
    const/4 v12, 0x0

    move-object/from16 v0, p3

    invoke-virtual {v0, v12, v6}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v2

    .line 7995
    .local v2, "code":Ljava/lang/String;
    const/16 v12, 0x10

    invoke-static {v2, v12}, Ljava/lang/Long;->parseLong(Ljava/lang/String;I)J

    move-result-wide v12

    long-to-int v5, v12

    .line 7998
    .local v5, "hashCode":I
    invoke-virtual/range {p3 .. p3}, Ljava/lang/String;->length()I

    move-result v12

    if-ge v6, v12, :cond_50

    .line 7999
    add-int/lit8 v12, v6, 0x1

    move-object/from16 v0, p3

    invoke-virtual {v0, v12}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object p3

    .line 8004
    :goto_37
    invoke-direct {p0, v5}, Lcom/android/server/wm/WindowManagerService;->findWindow(I)Lcom/android/server/wm/WindowState;
    :try_end_3a
    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_3a} :catch_b5
    .catchall {:try_start_e .. :try_end_3a} :catchall_f1

    move-result-object v11

    .line 8005
    .local v11, "window":Lcom/android/server/wm/WindowState;
    if-nez v11, :cond_53

    .line 8006
    const/4 v10, 0x0

    .line 8034
    .end local v10    # "success":Z
    if-eqz v3, :cond_43

    .line 8035
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V

    .line 8037
    :cond_43
    if-eqz v9, :cond_48

    .line 8038
    invoke-virtual {v9}, Landroid/os/Parcel;->recycle()V

    .line 8040
    :cond_48
    if-eqz v7, :cond_7

    .line 8042
    :try_start_4a
    invoke-virtual {v7}, Ljava/io/BufferedWriter;->close()V
    :try_end_4d
    .catch Ljava/io/IOException; {:try_start_4a .. :try_end_4d} :catch_4e

    goto :goto_7

    .line 8043
    :catch_4e
    move-exception v12

    goto :goto_7

    .line 8001
    .end local v11    # "window":Lcom/android/server/wm/WindowState;
    .restart local v10    # "success":Z
    :cond_50
    :try_start_50
    const-string p3, ""

    goto :goto_37

    .line 8009
    .restart local v11    # "window":Lcom/android/server/wm/WindowState;
    :cond_53
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v3

    .line 8010
    const-string v12, "android.view.IWindow"

    invoke-virtual {v3, v12}, Landroid/os/Parcel;->writeInterfaceToken(Ljava/lang/String;)V

    .line 8011
    move-object/from16 v0, p2

    invoke-virtual {v3, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 8012
    move-object/from16 v0, p3

    invoke-virtual {v3, v0}, Landroid/os/Parcel;->writeString(Ljava/lang/String;)V

    .line 8013
    const/4 v12, 0x1

    invoke-virtual {v3, v12}, Landroid/os/Parcel;->writeInt(I)V

    .line 8014
    invoke-static/range {p1 .. p1}, Landroid/os/ParcelFileDescriptor;->fromSocket(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;

    move-result-object v12

    const/4 v13, 0x0

    invoke-virtual {v12, v3, v13}, Landroid/os/ParcelFileDescriptor;->writeToParcel(Landroid/os/Parcel;I)V

    .line 8016
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v9

    .line 8018
    iget-object v12, v11, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v12}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    .line 8020
    .local v1, "binder":Landroid/os/IBinder;
    const/4 v12, 0x1

    const/4 v13, 0x0

    invoke-interface {v1, v12, v3, v9, v13}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z

    .line 8022
    invoke-virtual {v9}, Landroid/os/Parcel;->readException()V

    .line 8024
    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->isOutputShutdown()Z

    move-result v12

    if-nez v12, :cond_a1

    .line 8025
    new-instance v8, Ljava/io/BufferedWriter;

    new-instance v12, Ljava/io/OutputStreamWriter;

    invoke-virtual/range {p1 .. p1}, Ljava/net/Socket;->getOutputStream()Ljava/io/OutputStream;

    move-result-object v13

    invoke-direct {v12, v13}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V

    invoke-direct {v8, v12}, Ljava/io/BufferedWriter;-><init>(Ljava/io/Writer;)V
    :try_end_98
    .catch Ljava/lang/Exception; {:try_start_50 .. :try_end_98} :catch_b5
    .catchall {:try_start_50 .. :try_end_98} :catchall_f1

    .line 8026
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .local v8, "out":Ljava/io/BufferedWriter;
    :try_start_98
    const-string v12, "DONE\n"

    invoke-virtual {v8, v12}, Ljava/io/BufferedWriter;->write(Ljava/lang/String;)V

    .line 8027
    invoke-virtual {v8}, Ljava/io/BufferedWriter;->flush()V
    :try_end_a0
    .catch Ljava/lang/Exception; {:try_start_98 .. :try_end_a0} :catch_107
    .catchall {:try_start_98 .. :try_end_a0} :catchall_104

    move-object v7, v8

    .line 8034
    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    :cond_a1
    if-eqz v3, :cond_a6

    .line 8035
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V

    .line 8037
    :cond_a6
    if-eqz v9, :cond_ab

    .line 8038
    invoke-virtual {v9}, Landroid/os/Parcel;->recycle()V

    .line 8040
    :cond_ab
    if-eqz v7, :cond_7

    .line 8042
    :try_start_ad
    invoke-virtual {v7}, Ljava/io/BufferedWriter;->close()V
    :try_end_b0
    .catch Ljava/io/IOException; {:try_start_ad .. :try_end_b0} :catch_b2

    goto/16 :goto_7

    .line 8043
    :catch_b2
    move-exception v12

    goto/16 :goto_7

    .line 8030
    .end local v1    # "binder":Landroid/os/IBinder;
    .end local v2    # "code":Ljava/lang/String;
    .end local v5    # "hashCode":I
    .end local v6    # "index":I
    .end local v11    # "window":Lcom/android/server/wm/WindowState;
    :catch_b5
    move-exception v4

    .line 8031
    .local v4, "e":Ljava/lang/Exception;
    :goto_b6
    :try_start_b6
    const-string v12, "WindowManager"

    new-instance v13, Ljava/lang/StringBuilder;

    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V

    const-string v14, "Could not send command "

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    move-object/from16 v0, p2

    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    const-string v14, " with parameters "

    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    move-object/from16 v0, p3

    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v13

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    invoke-static {v12, v13, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_dc
    .catchall {:try_start_b6 .. :try_end_dc} :catchall_f1

    .line 8032
    const/4 v10, 0x0

    .line 8034
    if-eqz v3, :cond_e2

    .line 8035
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V

    .line 8037
    :cond_e2
    if-eqz v9, :cond_e7

    .line 8038
    invoke-virtual {v9}, Landroid/os/Parcel;->recycle()V

    .line 8040
    :cond_e7
    if-eqz v7, :cond_7

    .line 8042
    :try_start_e9
    invoke-virtual {v7}, Ljava/io/BufferedWriter;->close()V
    :try_end_ec
    .catch Ljava/io/IOException; {:try_start_e9 .. :try_end_ec} :catch_ee

    goto/16 :goto_7

    .line 8043
    :catch_ee
    move-exception v12

    goto/16 :goto_7

    .line 8034
    .end local v4    # "e":Ljava/lang/Exception;
    :catchall_f1
    move-exception v12

    :goto_f2
    if-eqz v3, :cond_f7

    .line 8035
    invoke-virtual {v3}, Landroid/os/Parcel;->recycle()V

    .line 8037
    :cond_f7
    if-eqz v9, :cond_fc

    .line 8038
    invoke-virtual {v9}, Landroid/os/Parcel;->recycle()V

    .line 8040
    :cond_fc
    if-eqz v7, :cond_101

    .line 8042
    :try_start_fe
    invoke-virtual {v7}, Ljava/io/BufferedWriter;->close()V
    :try_end_101
    .catch Ljava/io/IOException; {:try_start_fe .. :try_end_101} :catch_102

    .line 8045
    :cond_101
    :goto_101
    throw v12

    .line 8043
    :catch_102
    move-exception v13

    goto :goto_101

    .line 8034
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v1    # "binder":Landroid/os/IBinder;
    .restart local v2    # "code":Ljava/lang/String;
    .restart local v5    # "hashCode":I
    .restart local v6    # "index":I
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v11    # "window":Lcom/android/server/wm/WindowState;
    :catchall_104
    move-exception v12

    move-object v7, v8

    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_f2

    .line 8030
    .end local v7    # "out":Ljava/io/BufferedWriter;
    .restart local v8    # "out":Ljava/io/BufferedWriter;
    :catch_107
    move-exception v4

    move-object v7, v8

    .end local v8    # "out":Ljava/io/BufferedWriter;
    .restart local v7    # "out":Ljava/io/BufferedWriter;
    goto :goto_b6
.end method

.method public waitForWindowDrawn(Landroid/os/IBinder;Landroid/os/IRemoteCallback;)Z
    .registers 11
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "callback"    # Landroid/os/IRemoteCallback;

    .prologue
    const/4 v3, 0x1

    .line 11387
    if-eqz p1, :cond_37

    if-eqz p2, :cond_37

    .line 11388
    iget-object v4, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v4

    .line 11389
    const/4 v5, 0x0

    const/4 v6, 0x1

    :try_start_a
    invoke-virtual {p0, v5, p1, v6}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v2

    .line 11390
    .local v2, "win":Lcom/android/server/wm/WindowState;
    if-eqz v2, :cond_2e

    .line 11391
    new-instance v1, Landroid/util/Pair;

    invoke-direct {v1, v2, p2}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    .line 11393
    .local v1, "pair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/WindowState;Landroid/os/IRemoteCallback;>;"
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const/16 v6, 0x18

    invoke-virtual {v5, v6, v1}, Lcom/android/server/wm/WindowManagerService$H;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v0

    .line 11394
    .local v0, "m":Landroid/os/Message;
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mH:Lcom/android/server/wm/WindowManagerService$H;

    const-wide/16 v6, 0x7d0

    invoke-virtual {v5, v0, v6, v7}, Lcom/android/server/wm/WindowManagerService$H;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 11395
    iget-object v5, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingForDrawn:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11396
    invoke-virtual {p0}, Lcom/android/server/wm/WindowManagerService;->checkDrawnWindowsLocked()V

    .line 11397
    monitor-exit v4

    .line 11402
    .end local v0    # "m":Landroid/os/Message;
    .end local v1    # "pair":Landroid/util/Pair;, "Landroid/util/Pair<Lcom/android/server/wm/WindowState;Landroid/os/IRemoteCallback;>;"
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :goto_2d
    return v3

    .line 11399
    .restart local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_2e
    const-string v3, "WindowManager"

    const-string/jumbo v5, "waitForWindowDrawn: win null"

    invoke-static {v3, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11400
    monitor-exit v4

    .line 11402
    .end local v2    # "win":Lcom/android/server/wm/WindowState;
    :cond_37
    const/4 v3, 0x0

    goto :goto_2d

    .line 11400
    :catchall_39
    move-exception v3

    monitor-exit v4
    :try_end_3b
    .catchall {:try_start_a .. :try_end_3b} :catchall_39

    throw v3
.end method

.method wallpaperCommandComplete(Landroid/os/IBinder;Landroid/os/Bundle;)V
    .registers 5
    .param p1, "window"    # Landroid/os/IBinder;
    .param p2, "result"    # Landroid/os/Bundle;

    .prologue
    .line 3345
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 3346
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_19

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v0}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    if-ne v0, p1, :cond_19

    .line 3348
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    .line 3349
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/lang/Object;->notifyAll()V

    .line 3351
    :cond_19
    monitor-exit v1

    .line 3352
    return-void

    .line 3351
    :catchall_1b
    move-exception v0

    monitor-exit v1
    :try_end_1d
    .catchall {:try_start_3 .. :try_end_1d} :catchall_1b

    throw v0
.end method

.method wallpaperOffsetsComplete(Landroid/os/IBinder;)V
    .registers 4
    .param p1, "window"    # Landroid/os/IBinder;

    .prologue
    .line 2600
    iget-object v1, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v1

    .line 2601
    :try_start_3
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    if-eqz v0, :cond_19

    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    iget-object v0, v0, Lcom/android/server/wm/WindowState;->mClient:Landroid/view/IWindow;

    invoke-interface {v0}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    if-ne v0, p1, :cond_19

    .line 2603
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWaitingOnWallpaper:Lcom/android/server/wm/WindowState;

    .line 2604
    iget-object v0, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/lang/Object;->notifyAll()V

    .line 2606
    :cond_19
    monitor-exit v1

    .line 2607
    return-void

    .line 2606
    :catchall_1b
    move-exception v0

    monitor-exit v1
    :try_end_1d
    .catchall {:try_start_3 .. :try_end_1d} :catchall_1b

    throw v0
.end method

.method public watchRotation(Landroid/view/IRotationWatcher;)I
    .registers 7
    .param p1, "watcher"    # Landroid/view/IRotationWatcher;

    .prologue
    .line 7661
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    .line 7662
    .local v1, "watcherBinder":Landroid/os/IBinder;
    new-instance v0, Lcom/android/server/wm/WindowManagerService$7;

    invoke-direct {v0, p0, v1}, Lcom/android/server/wm/WindowManagerService$7;-><init>(Lcom/android/server/wm/WindowManagerService;Landroid/os/IBinder;)V

    .line 7679
    .local v0, "dr":Landroid/os/IBinder$DeathRecipient;
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    monitor-enter v3

    .line 7681
    :try_start_c
    invoke-interface {p1}, Landroid/view/IRotationWatcher;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    const/4 v4, 0x0

    invoke-interface {v2, v0, v4}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 7682
    iget-object v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotationWatchers:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_19
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_19} :catch_20
    .catchall {:try_start_c .. :try_end_19} :catchall_1d

    .line 7687
    :goto_19
    :try_start_19
    iget v2, p0, Lcom/android/server/wm/WindowManagerService;->mRotation:I

    monitor-exit v3

    return v2

    .line 7688
    :catchall_1d
    move-exception v2

    monitor-exit v3
    :try_end_1f
    .catchall {:try_start_19 .. :try_end_1f} :catchall_1d

    throw v2

    .line 7683
    :catch_20
    move-exception v2

    goto :goto_19
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;
    .registers 9
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/os/IBinder;
    .param p3, "throwOnError"    # Z

    .prologue
    const/4 v2, 0x0

    .line 9630
    iget-object v3, p0, Lcom/android/server/wm/WindowManagerService;->mWindowMap:Ljava/util/HashMap;

    invoke-virtual {v3, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/wm/WindowState;

    .line 9633
    .local v1, "win":Lcom/android/server/wm/WindowState;
    if-nez v1, :cond_35

    .line 9634
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Requested window "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " does not exist"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 9636
    .local v0, "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_2c

    .line 9637
    throw v0

    .line 9639
    :cond_2c
    const-string v3, "WindowManager"

    const-string v4, "Failed looking up window"

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move-object v1, v2

    .line 9653
    .end local v0    # "ex":Ljava/lang/RuntimeException;
    .end local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_34
    :goto_34
    return-object v1

    .line 9642
    .restart local v1    # "win":Lcom/android/server/wm/WindowState;
    :cond_35
    if-eqz p1, :cond_34

    iget-object v3, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    if-eq v3, p1, :cond_34

    .line 9643
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Requested window "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " is in session "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v4, v1, Lcom/android/server/wm/WindowState;->mSession:Lcom/android/server/wm/Session;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ", not "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v0, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    .line 9646
    .restart local v0    # "ex":Ljava/lang/RuntimeException;
    if-eqz p3, :cond_6c

    .line 9647
    throw v0

    .line 9649
    :cond_6c
    const-string v3, "WindowManager"

    const-string v4, "Failed looking up window"

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move-object v1, v2

    .line 9650
    goto :goto_34
.end method

.method final windowForClientLocked(Lcom/android/server/wm/Session;Landroid/view/IWindow;Z)Lcom/android/server/wm/WindowState;
    .registers 5
    .param p1, "session"    # Lcom/android/server/wm/Session;
    .param p2, "client"    # Landroid/view/IWindow;
    .param p3, "throwOnError"    # Z

    .prologue
    .line 9625
    invoke-interface {p2}, Landroid/view/IWindow;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    invoke-virtual {p0, p1, v0, p3}, Lcom/android/server/wm/WindowManagerService;->windowForClientLocked(Lcom/android/server/wm/Session;Landroid/os/IBinder;Z)Lcom/android/server/wm/WindowState;

    move-result-object v0

    return-object v0
.end method
